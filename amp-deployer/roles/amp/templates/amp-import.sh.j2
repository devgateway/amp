#!/bin/sh
## AMP Import script.
## Managed by Ansible!
## TODO: Use variables.


# Create and configure the amp environment?!?
zcat /vagrant/amp.pgsql.gz | \
  pg_restore --clean --no-owner --no-privileges --username amp_user --dbname amp_local

# TODO: Update the imported AMP DB.
# psql --username amp_user --dbname amp_local

# Reset the domains that AMP responds to.
psql --username amp_user --dbname amp_local -c "UPDATE dg_site_domain SET site_domain='amp212.local';"

# Rest the password for all users.
# TODO: Add instructions on how to generate a new password.
psql --username amp_user --dbname amp_local -c "UPDATE dg_user SET password='a9993e364706816aba3e25717850c26c9cd0d89d';"

# Disable SSL connection.
psql --username amp_user --dbname amp_local -c "UPDATE amp_global_settings SET settingsvalue = 'off' WHERE settingsname = 'Secure Server';"


# Create and configure the amp-cms environment?!?
zcat /vagrant/amp-cms.pgsql.gz | \
  pg_restore --clean --no-owner --no-privileges --username amp_cms_user --dbname amp_cms_local
tar -C {{amp__project_cms_root}}/sites/default -xf /vagrant/amp-cms.files.tar.gz
# TODO: Run `make update`
