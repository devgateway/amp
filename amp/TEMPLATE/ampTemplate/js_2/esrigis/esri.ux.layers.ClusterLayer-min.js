
dojo.require("dojox.lang.functional");dojo.require("dojox.lang.functional.lambda");dojo.require("dojox.lang.functional.curry");dojo.require("dojox.lang.functional.fold");dojo.declare('esri.ux.layers.ClusterLayer',esri.layers.GraphicsLayer,{constructor:function(options){if(typeof Object.create==='undefined'){Object.create=function(o){function F(){}
F.prototype=o;return new F();};}
this.displayOnPan=options.displayOnPan||false;this._map=options.map;dojo.connect(this._map,'onZoomStart',dojo.hitch(this,this.handleMapZoomStart));dojo.connect(this._map,'onExtentChange',dojo.hitch(this,this.handleMapExtentChange));this.spatialReference=new esri.SpatialReference({wkid:102100});this.initialExtent=(this.fullExtent=new esri.geometry.Extent(-20037507.0671618,-19971868.8804086,20037507.0671618,19971868.8804086,this.spatialReference));this.levelPointTileSpace=[];this._features=[];try{this.setFeatures(options.features);}catch(ex){}
dojo.connect(this,'onLoad',this.handleLayerLoaded);dojo.connect(this,'onMouseOver',this.handleMouseOver);dojo.connect(this,'onMouseOut',this.handleMouseOut);dojo.connect(this,'onMouseClick',this.handleMouseClick);this.symbolBank=options.symbolBank;this._flareDistanceFromCenter=options.flareDistanceFromCenter||20;this._flareLimit=options.flareLimit||20;this._infoTemplate=options.infoWindow.template||null;this._infoWindowWidth=options.infoWindow.width||150;this._infoWindowHeight=options.infoWindow.height||100;this.loaded=true;this.onLoad(this);},handleMapZoomStart:function(){this.clear();},handleMapExtentChange:function(extent,delta,leveChange,lod){this.clusterFeatures();},setFeatures:function(features){this._features=[];var wkid=features[0].geometry.spatialReference.wkid;if(wkid!=102100){if(wkid==4326||wkid==4269||wkid==4267){dojo.forEach(features,function(feature){point=esri.geometry.geographicToWebMercator(feature.geometry);point.attributes=feature.attributes;this._features.push(point);},this);}else{throw'Input Spatial Reference Must Be in Either WKID: 102110 or WKID: 4326';return;}}else{dojo.forEach(features,function(feature){point=feature.geometry;point.attributes=feature.attributes;this._features.push(point);},this);}},handleLayerLoaded:function(lyr){this.clusterFeatures();},handleMouseOver:function(evt){var graphic=evt.graphic;if(graphic.symbol.type=='textsymbol'||graphic.symbol.type=='simplelinesymbol'){if(graphic.attributes){if(graphic.attributes.baseGraphic&&graphic.attributes.baseGraphic.task){graphic.attributes.baseGraphic.task.cancel();}}
return;}
if(graphic.attributes.isCluster){if(graphic.attributes.clustered){if(graphic.task){graphic.task.cancel();}
return;}}else{if(graphic.attributes.baseGraphic){graphic.attributes.baseGraphic.task.cancel();}
this.showInfoWindow(graphic);return;}
graphic.clusterGraphics=[];var cSize=graphic.attributes.clusterSize;var lineSymbol=new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([0,0,0,1]),1);var line=new esri.geometry.Polyline(map.spatialReference);line.addPath([graphic.geometry,new esri.geometry.Point(0,0)]);var lineGraphic=new esri.Graphic(line,lineSymbol);if(cSize>1&&cSize<=this._flareLimit){var numPoints=graphic.attributes.clusterSize;var bufferDistance=this.getPixelDistanceFromCenter(graphic.geometry);var centerPoint=graphic.geometry;var dblSinus,dblCosinus,x,y,pt,ptGraphic,p,l;for(var i=0;i<numPoints;i++){dblSinus=Math.sin((Math.PI*2.0)*(i/numPoints));dblCosinus=Math.cos((Math.PI*2.0)*(i/numPoints));x=centerPoint.x+bufferDistance*dblCosinus;y=centerPoint.y+bufferDistance*dblSinus;pt=new esri.geometry.Point(x,y,this._map.spatialReference);var currentSymbol;if(this.symbolBank[graphic.attributes[i].Code]!=null)
currentSymbol=this.symbolBank[graphic.attributes[i].Code];else
currentSymbol=this.symbolBank.single;ptGraphic=new esri.Graphic(pt,currentSymbol,dojo.mixin(graphic.attributes[i],{baseGraphic:graphic}),this._infoTemplate);p=this.add(ptGraphic);p.getDojoShape().moveToFront();line.setPoint(0,1,pt);lineGraphic=new esri.Graphic(line,lineSymbol,{baseGraphic:graphic});l=this.add(lineGraphic);l.getDojoShape().moveToBack();graphic.clusterGraphics.push(p);graphic.clusterGraphics.push(l);}
graphic.attributes.clustered=true;}},getPixelDistanceFromCenter:function(centerGeom){var distance=this._flareDistanceFromCenter;var screenGeom=esri.geometry.toScreenGeometry(this._map.extent,this._map.width,this._map.height,centerGeom);screenGeom.x=screenGeom.x+distance;screenGeom.y=screenGeom.y+distance;var newDistance=esri.geometry.toMapGeometry(this._map.extent,this._map.width,this._map.height,screenGeom);var length=esri.geometry.getLength(centerGeom,newDistance);return length;},handleMouseOut:function(evt){var graphic=evt.graphic,task;if(graphic.symbol.type=='textsymbol'){return;}
if(graphic.attributes.isCluster){task=new DelayedTask(function(g){this.removeFlareGraphics(g.clusterGraphics);delete g.clusterGraphics;g.attributes.clustered=false;},this,[graphic]);task.delay(900);graphic.task=task;}else{if(graphic.attributes.baseGraphic){task=new DelayedTask(function(g){this.removeFlareGraphics(g.attributes.baseGraphic.clusterGraphics);delete g.attributes.baseGraphic.clusterGraphics;g.attributes.baseGraphic.attributes.clustered=false;},this,[graphic]);task.delay(900);graphic.attributes.baseGraphic.task=task;}}},handleMouseClick:function(evt){var graphic=evt.graphic;this.keepinfowindow=true;alert('click');},removeFlareGraphics:function(graphics){if(graphics&&graphics.length){for(var i=0;i<graphics.length;i++){this.remove(graphics[i]);}}},showInfoWindow:function(graphic){if(map.infoWindow.isShowing){map.infoWindow.hide();}
map.infoWindow.setContent(graphic.getContent());map.infoWindow.setTitle(graphic.getTitle());map.infoWindow.resize(this._infoWindowWidth,this._infoWindowHeight);var graphicCenterSP=esri.geometry.toScreenGeometry(this._map.extent,this._map.width,this._map.height,graphic.geometry);map.infoWindow.show(graphicCenterSP,map.getInfoWindowAnchor(graphicCenterSP));},clusterFeatures:function(redraw){this.clear();var df=dojox.lang.functional,map=this._map,level=this._map.getLevel(),extent=this._map.extent;var tileInfo=map.getLayer(map.layerIds[0]).tileInfo;var toTileSpaceF=df.lambda("point, tileWidth,tileHeight,oPoint "
+"-> [Math.floor((oPoint.y - point.y)/tileHeight),Math.floor((point.x-oPoint.x)/tileWidth), point]");var levelResolution=customLods[level].resolution;var width=levelResolution*tileInfo.width;var height=levelResolution*tileInfo.height;var toTileSpace=df.partial(toTileSpaceF,df.arg,width,height,tileInfo.origin);var extentTileCords=df.map([new esri.geometry.Point(extent.xmin,extent.ymin),new esri.geometry.Point(extent.xmax,extent.ymax)],toTileSpace);var minRowIdx=extentTileCords[1][0];var maxRowIdx=extentTileCords[0][0];var minColIdx=extentTileCords[0][1];var maxColIdx=extentTileCords[1][1];if(!this.levelPointTileSpace[level]||redraw){var pointsTileSpace=df.map(this._features,toTileSpace);var tileSpaceArray=[];dojo.forEach(pointsTileSpace,function(tilePoint,ptIndex){if(tileSpaceArray[tilePoint[0]]){var y=tileSpaceArray[tilePoint[0]];if(y[tilePoint[1]]){y[tilePoint[1]].push(tilePoint[2]);}else{y[tilePoint[1]]=tilePoint[1];y[tilePoint[1]]=[tilePoint[2]];}}else{var y=tileSpaceArray[tilePoint[0]]=[];y[tilePoint[1]]=tilePoint[1];y[tilePoint[1]]=[tilePoint[2]];}});this.levelPointTileSpace[level]=tileSpaceArray;}
var tileCenterPointF=df.lambda("cPt,nextPt->{x:(cPt.x+nextPt.x)/2,y:(cPt.y+nextPt.y)/2}");dojo.forEach(this.levelPointTileSpace[level],function(row,rowIndex){if((rowIndex>=minRowIdx)&(rowIndex<=maxRowIdx)){dojo.forEach(row,function(col,colIndex){if(col){if((colIndex>=minColIdx)&(colIndex<=maxColIdx)){var pointsToBeAdded=[];if(col.length>1){var tileCenterPoint=df.reduce(col,tileCenterPointF);var sym;if(col.length<=20){sym=this.symbolBank.less16;}else if(col.length>20&&col.length<=30){sym=this.symbolBank.less30;}else if(col.length>30&&col.length<=50){sym=this.symbolBank.less50;}else{sym=this.symbolBank.over50;}
var atts=dojo.map(col,function(item){return item.attributes;});var graphicAtts=dojo.mixin(atts,{isCluster:true,clusterSize:col.length});if(col.length<=4){var growth=12;dojo.forEach(col,function(point){var currentSymbol;if(point.attributes.Code){currentSymbol=Object.create(this.symbolBank[point.attributes.Code]);currentSymbol.size=currentSymbol.size+growth;growth=growth-4;}
this.add(new esri.Graphic(new esri.geometry.Point(tileCenterPoint.x,tileCenterPoint.y),currentSymbol,graphicAtts));},this);}
else
{this.add(new esri.Graphic(new esri.geometry.Point(tileCenterPoint.x,tileCenterPoint.y),sym,graphicAtts));}
var font=new esri.symbol.Font("10pt",esri.symbol.Font.STYLE_NORMAL,esri.symbol.Font.VARIANT_NORMAL,esri.symbol.Font.WEIGHT_NORMAL,"Trebuchet MS");this.add(new esri.Graphic(new esri.geometry.Point(tileCenterPoint.x,tileCenterPoint.y),new esri.symbol.TextSymbol(col.length,font,new dojo.Color("#000000")).setOffset(0,-5)));}else{dojo.forEach(col,function(point){var currentSymbol;if(point.attributes.Code)
currentSymbol=this.symbolBank[point.attributes.Code];else
currentSymbol=this.symbolBank.single;this.add(new esri.Graphic(point,currentSymbol,dojo.mixin(point.attributes,{isCluster:false}),this._infoTemplate));},this);}}}},this);}},this);hideLoading();}});