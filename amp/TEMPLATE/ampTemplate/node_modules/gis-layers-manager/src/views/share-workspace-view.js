var fs = require('fs');
var $ = require('jquery');
var _ = require('underscore');
var Backbone = require('backbone');
var UserSecurityModel = require('../models/user-security-model');

var Template = fs.readFileSync(__dirname + '/../templates/share-workspace-template.html', 'utf8');
module.exports = Backbone.View.extend({
    id: 'share-workspace',
    events: {
        'change .select': 'select',
        'click .save': 'saveAndClose',
        'click .btn-cancel': 'close'
    },
    template: _.template(Template),
    initialize:function(options) {
        options = options || {};
        this.workspaces = options.workspaceCollection;
        this.layer = options.layer;
        this.accessTypes = options.accessTypes;
        this.user = new UserSecurityModel();
        this.def = [];
        this.def.push(this.user.fetch());
    },
    render: function() {
        this.$el.addClass('panel panel-primary');
        this.$el.draggable({cursor: 'move', containment: 'window' });
        var self = this;
        this.workspaces.forEach(function(w) {
            if(self.user != undefined && self.user.get("team") == w.get("name")) {
                w.set('selected', true);
            }
        });
        this.$el.html(this.template({workspaces: this.workspaces}));
        this.$el.hide();
        this.$el.show();
        return this;
    },
    reset: function () {
        this.layer = null;
        this.workspaces.forEach(function(w) {w.set('selected', false);});
    },
    setLayer: function (layer) {
        this.layer = layer;
        const shareWorkspaces = layer.get('sharedWorkspaces');
        if(shareWorkspaces && shareWorkspaces.length > 0) {
            this.workspaces.forEach(function(w) {
                for(var i = 0; i < shareWorkspaces.length; i++) {
                    if(shareWorkspaces[i].id == w.id) {
                        w.set('selected', true);
                    }
                }
            });
        }
    },
    select: function(e) {
        var id = $(e.target).data("id");
        var selectedModel = this.workspaces.findWhere({id: id});
        selectedModel.set('selected', selectedModel.get('selected') ? false: true);
    },
    saveAndClose: function () {
        var selected = this.workspaces.where({selected: true});
        var ids = [];
        for(var i = 0; i < selected.length; i++) {
            ids.push(selected[i].id);
        }
        this.layer.set('sharedWorkspaces', ids);
        var type = ids.length > 0 ? 'SHARED': 'PRIVATE';
        var accessType = this.accessTypes.findWhere({value: type});
        this.layer.set('accessTypeId', accessType.id);
        var self = this;
        this.layer.update(function() {
            self.$el.hide();
            self.trigger('update');
        });
    },
    close: function () {
        this.$el.hide();
    }


});