== A. runtime data structures ==
0. Cell<Amount> or Cell<Text> - contains 0+ values
1. Amount - immutable
2. Column: contains either cells or subcolumns
3. any column (measure) should be splittable by Funding Flow - at the last temporal level
4. 3 types of hierarchies:
	4a: percentages
	4b: flows (make it somehow generic through attributes?)
	4c: per-transaction attribute equaling the column
	4d: (does it make sense?): hierarchy by something which has no percentage, no attribute, no per-transaction value
		
== C. running ==
 Column.splitByYear/Month/
 totals
generate hierarchies:
	column.filter(metadata = X, percentage = Y)
		-> if cell has metadata, but different amount -> f.o.
		->  
	

templating engine:
https://en.wikipedia.org/wiki/Thymeleaf
 OR
Apache Velocity
 OR
Mustache
 OR
http://blog.stackhunter.com/2014/01/17/10-reasons-to-replace-your-jsps-with-freemarker-templates/

Calendars:
	-> http://blog.joda.org/2009/11/why-jsr-310-isn-joda-time_4941.html
	-> http://java-performance.info/jsr-310-java-8-datetime-library-performance-well-joda-time-2-3-j-u-calendar/
	


measures which are not affected by filters should be made columns
	-> what about those which have meaning for both year and overall (e.g. Execution Rate / Forecast Execution Rate)
	
	
	
ADD TESTS FOR:
	MonetaryAmount
	NiPrecisionSettings (AmpPrecisionSetting)

	
REDO *info* columns as being part of the hierarchy
REDO *funding* columns as being part of the donor hierarchy
REDO v_organization_projectid
pledges sectors + programs should be somehow fixed (data model is broken)
change views which depend on amp_activity to depend on amp_activity_version  -> Aldo
add startup check for NULL ids in NiReports
change TrnCols to work via I18vRepository
pledges titles: make a new view for NiReports
public view cache: redo to only cache "latest and last validated" ids
	