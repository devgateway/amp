# The following are sample datasources that saiku can understand

# PLEASE NOTE: you need to create one file per datasource. The following list is just for demonstration
# If you want to create a Mondrian connection, make sure you have dropped the correct JDBC driver into the WEB-INF/lib folder



# SAMPLE DATASOURCES

# Mondrian on MySQL
# ----------------------------------------------
# type=OLAP
# name=steelwheels
# driver=mondrian.olap4j.MondrianOlap4jDriver
# location=jdbc:mondrian:Jdbc=jdbc:mysql://localhost/sampledata;Catalog=../webapps/saiku/steelwheels/steelwheels.mondrian.xml;JdbcDrivers=com.mysql.jdbc.Driver;
# username=dbuser
# password=password

# XML/A (Pentaho BI-Server)
# ----------------------------------------------
# type=OLAP
# name=xmla
# driver=org.olap4j.driver.xmla.XmlaOlap4jDriver
# location=jdbc:xmla:Server=http://localhost:8080/pentaho/Xmla?userid=joe&password=password;
# username=joe
# password=password

# XML/A (PALO)
# ----------------------------------------------
# type=OLAP
# name=xmla
# driver=org.olap4j.driver.xmla.XmlaOlap4jDriver
# location=jdbc:xmla:Server=http://localhost:4242/
# username=joe
# password=password

# XML/A (Microsoft SSAS)
# for SSAS you need to install the msmdpump.dll : http://technet.microsoft.com/en-us/library/cc917711.aspx
# ----------------------------------------------
# type=OLAP
# name=xmla
# driver=org.olap4j.driver.xmla.XmlaOlap4jDriver
# location=jdbc:xmla:Server=http://192.168.0.1/olap/msmdpump.dll
# username=joe
# password=password

# SECURITY CONFIGURATION
# ----------------------------------------------------------------
# some security configuration for roles, first enable it
# security.enabled=true

# there are 3 different types of security:
# "one2one" (try and map spring user roles to mondrian roles), 
# "lookup" (define the mapping of spring and mondrian roles manually) 
# "passthrough" (will pass username + password of logged in user to connection, e.g. jdbc user + password)

# security.type=one2one

# security.type=lookup
# security.mapping=springRole=mondrianRole1;springRole2=mondrianRole2


# Additionally there is the possibility to implement your own datasource processor that will give each user
# a custom data source depending on the environment
# there is an example for adding a Role parameter to the location property depending on the users roles
# you can even define filter patterns for it (optional!)
# to use it add this to your datasource configuration:

# datasource.processors=org.saiku.web.impl.RoleDatasourceProcessor
# security.enabled=true
# role.filter=saiku,other

# this filter will set only roles that contain "saiku" or "other"
# ATTENTION: you will have to check for yourself if those roles make sense to add as this parameter
# if you add invalid roles saiku won't be able to check this

