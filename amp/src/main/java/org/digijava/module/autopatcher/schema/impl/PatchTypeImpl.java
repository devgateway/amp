//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.08.14 at 06:44:34 PM EEST 
//


package org.digijava.module.autopatcher.schema.impl;

public class PatchTypeImpl implements org.digijava.module.autopatcher.schema.PatchType, com.sun.xml.bind.JAXBObject, org.digijava.module.autopatcher.schema.impl.runtime.UnmarshallableObject, org.digijava.module.autopatcher.schema.impl.runtime.XMLSerializable, org.digijava.module.autopatcher.schema.impl.runtime.ValidatableObject
{

    protected java.lang.String _DatabaseTargets;
    protected java.lang.String _Description;
    protected java.lang.String _Dependencies;
    protected boolean has_ReApplicable;
    protected boolean _ReApplicable;
    protected java.lang.String _Keywords;
    protected java.lang.String _Author;
    protected boolean has_RetryIfFailure;
    protected boolean _RetryIfFailure;
    protected com.sun.xml.bind.util.ListImpl _Sql;
    protected java.lang.String _KeyName;
    protected java.lang.String _FeatureAdded;
    protected java.util.Calendar _CreationDate;
    public final static java.lang.Class version = (org.digijava.module.autopatcher.schema.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.digijava.module.autopatcher.schema.PatchType.class);
    }

    public java.lang.String getDatabaseTargets() {
        return _DatabaseTargets;
    }

    public void setDatabaseTargets(java.lang.String value) {
        _DatabaseTargets = value;
    }

    public java.lang.String getDescription() {
        return _Description;
    }

    public void setDescription(java.lang.String value) {
        _Description = value;
    }

    public java.lang.String getDependencies() {
        return _Dependencies;
    }

    public void setDependencies(java.lang.String value) {
        _Dependencies = value;
    }

    public boolean isReApplicable() {
        return _ReApplicable;
    }

    public void setReApplicable(boolean value) {
        _ReApplicable = value;
        has_ReApplicable = true;
    }

    public java.lang.String getKeywords() {
        return _Keywords;
    }

    public void setKeywords(java.lang.String value) {
        _Keywords = value;
    }

    public java.lang.String getAuthor() {
        return _Author;
    }

    public void setAuthor(java.lang.String value) {
        _Author = value;
    }

    public boolean isRetryIfFailure() {
        return _RetryIfFailure;
    }

    public void setRetryIfFailure(boolean value) {
        _RetryIfFailure = value;
        has_RetryIfFailure = true;
    }

    protected com.sun.xml.bind.util.ListImpl _getSql() {
        if (_Sql == null) {
            _Sql = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Sql;
    }

    public java.util.List getSql() {
        return _getSql();
    }

    public java.lang.String getKeyName() {
        return _KeyName;
    }

    public void setKeyName(java.lang.String value) {
        _KeyName = value;
    }

    public java.lang.String getFeatureAdded() {
        return _FeatureAdded;
    }

    public void setFeatureAdded(java.lang.String value) {
        _FeatureAdded = value;
    }

    public java.util.Calendar getCreationDate() {
        return _CreationDate;
    }

    public void setCreationDate(java.util.Calendar value) {
        _CreationDate = value;
    }

    public org.digijava.module.autopatcher.schema.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.digijava.module.autopatcher.schema.impl.runtime.UnmarshallingContext context) {
        return new org.digijava.module.autopatcher.schema.impl.PatchTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.digijava.module.autopatcher.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx8 = 0;
        final int len8 = ((_Sql == null)? 0 :_Sql.size());
        context.startElement("http://digijava.org/module/autopatcher/schema.xml", "description");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Description), "Description");
        } catch (java.lang.Exception e) {
            org.digijava.module.autopatcher.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_Dependencies!= null) {
            context.startElement("http://digijava.org/module/autopatcher/schema.xml", "dependencies");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Dependencies), "Dependencies");
            } catch (java.lang.Exception e) {
                org.digijava.module.autopatcher.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Keywords!= null) {
            context.startElement("http://digijava.org/module/autopatcher/schema.xml", "keywords");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Keywords), "Keywords");
            } catch (java.lang.Exception e) {
                org.digijava.module.autopatcher.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DatabaseTargets!= null) {
            context.startElement("http://digijava.org/module/autopatcher/schema.xml", "databaseTargets");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _DatabaseTargets), "DatabaseTargets");
            } catch (java.lang.Exception e) {
                org.digijava.module.autopatcher.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx8 != len8) {
            context.startElement("http://digijava.org/module/autopatcher/schema.xml", "sql");
            int idx_8 = idx8;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Sql.get(idx_8 ++)), "Sql");
            context.endNamespaceDecls();
            int idx_9 = idx8;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Sql.get(idx_9 ++)), "Sql");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Sql.get(idx8 ++)), "Sql");
            context.endElement();
        }
    }

    public void serializeAttributes(org.digijava.module.autopatcher.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx8 = 0;
        final int len8 = ((_Sql == null)? 0 :_Sql.size());
        context.startAttribute("", "author");
        try {
            context.text(((java.lang.String) _Author), "Author");
        } catch (java.lang.Exception e) {
            org.digijava.module.autopatcher.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_CreationDate!= null) {
            context.startAttribute("", "creationDate");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _CreationDate)), "CreationDate");
            } catch (java.lang.Exception e) {
                org.digijava.module.autopatcher.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_FeatureAdded!= null) {
            context.startAttribute("", "featureAdded");
            try {
                context.text(((java.lang.String) _FeatureAdded), "FeatureAdded");
            } catch (java.lang.Exception e) {
                org.digijava.module.autopatcher.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "keyName");
        try {
            context.text(((java.lang.String) _KeyName), "KeyName");
        } catch (java.lang.Exception e) {
            org.digijava.module.autopatcher.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (has_ReApplicable) {
            context.startAttribute("", "reApplicable");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ReApplicable)), "ReApplicable");
            } catch (java.lang.Exception e) {
                org.digijava.module.autopatcher.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_RetryIfFailure) {
            context.startAttribute("", "retryIfFailure");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _RetryIfFailure)), "RetryIfFailure");
            } catch (java.lang.Exception e) {
                org.digijava.module.autopatcher.schema.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx8 != len8) {
            idx8 += 1;
        }
    }

    public void serializeURIs(org.digijava.module.autopatcher.schema.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx8 = 0;
        final int len8 = ((_Sql == null)? 0 :_Sql.size());
        while (idx8 != len8) {
            idx8 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.digijava.module.autopatcher.schema.PatchType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex"
+".ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gramma"
+"r/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001a"
+"ignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000"
+"\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/re"
+"laxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv"
+"/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.String"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd."
+"BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Con"
+"creteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeI"
+"mpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNam"
+"eq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePr"
+"ocessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\t"
+"localNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsr\u0000\u001dcom.sun.ms"
+"v.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.gramma"
+"r.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003s"
+"r\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0014ppsr\u0000\"com.s"
+"un.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0005QNames"
+"r\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u00001q\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.Si"
+"mpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000"
+"\u001cxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)htt"
+"p://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000,\u0001psq\u0000~\u0000"
+"5t\u0000\u000bdescriptiont\u00001http://digijava.org/module/autopatcher/sch"
+"ema.xmlsq\u0000~\u0000(ppsq\u0000~\u0000\u000fq\u0000~\u0000-p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0017sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-"
+"pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\fdependenciesq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000(ppsq\u0000~\u0000"
+"\u000fq\u0000~\u0000-p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0017sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~"
+"\u00005t\u0000\bkeywordsq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000(ppsq\u0000~\u0000\u000fq\u0000~\u0000-p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0017sq\u0000"
+"~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\u000fdatabaseTargetsq\u0000~\u0000"
+"?q\u0000~\u0000;sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom"
+".sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsq\u0000~\u0000"
+"\u000fpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000(ppsq\u0000~\u0000Uq\u0000~\u0000-psq\u0000~\u0000*q\u0000~\u0000-psr\u00002com"
+".sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq"
+"\u0000~\u0000\u0003q\u0000~\u0000<psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u00006q\u0000~\u0000;sq\u0000~\u00005t\u0000.org.digijava.module.autopatcher.schema.SqlT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000(ppsq\u0000"
+"~\u0000*q\u0000~\u0000-pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\u0003sqlq\u0000~\u0000?sq\u0000~\u0000*ppq\u0000~\u0000\u0017sq\u0000~\u00005"
+"t\u0000\u0006authort\u0000\u0000sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0014ppsr\u0000!com.sun.msv.data"
+"type.xsd.DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.Dat"
+"eTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0004dateq\u0000~\u00003q\u0000~\u0000%sq\u0000~\u0000&q\u0000"
+"~\u0000sq\u0000~\u0000\u001fsq\u0000~\u00005t\u0000\fcreationDateq\u0000~\u0000lq\u0000~\u0000;sq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-pq"
+"\u0000~\u0000\u0017sq\u0000~\u00005t\u0000\ffeatureAddedq\u0000~\u0000lq\u0000~\u0000;sq\u0000~\u0000*ppq\u0000~\u0000\u0017sq\u0000~\u00005t\u0000\u0007key"
+"Nameq\u0000~\u0000lsq\u0000~\u0000(ppsq\u0000~\u0000*q\u0000~\u0000-psq\u0000~\u0000\u0014ppsr\u0000$com.sun.msv.datatyp"
+"e.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0007booleanq\u0000~\u00003q\u0000~\u0000%s"
+"q\u0000~\u0000&q\u0000~\u0000\u0083q\u0000~\u0000\u001fsq\u0000~\u00005t\u0000\freApplicableq\u0000~\u0000lq\u0000~\u0000;sq\u0000~\u0000(ppsq\u0000~\u0000*"
+"q\u0000~\u0000-pq\u0000~\u0000\u0080sq\u0000~\u00005t\u0000\u000eretryIfFailureq\u0000~\u0000lq\u0000~\u0000;sr\u0000\"com.sun.msv."
+"grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/"
+"grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar."
+"ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersion"
+"L\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u001e\u0001pq\u0000~\u0000"
+"Iq\u0000~\u0000Pq\u0000~\u0000Yq\u0000~\u0000\u000bq\u0000~\u0000\fq\u0000~\u0000Wq\u0000~\u0000\u0005q\u0000~\u0000~q\u0000~\u0000\\q\u0000~\u0000\tq\u0000~\u0000\nq\u0000~\u0000\u0007q\u0000~\u0000"
+"\u0087q\u0000~\u0000mq\u0000~\u0000wq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000[q\u0000~\u0000\rq\u0000~\u0000)q\u0000~\u0000Cq\u0000~\u0000Jq\u0000~\u0000Qq\u0000~\u0000"
+"eq\u0000~\u0000\bq\u0000~\u0000\u000eq\u0000~\u0000\u0006q\u0000~\u0000\u0013q\u0000~\u0000Bx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.digijava.module.autopatcher.schema.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.digijava.module.autopatcher.schema.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------");
        }

        protected Unmarshaller(org.digijava.module.autopatcher.schema.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.digijava.module.autopatcher.schema.impl.PatchTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        if (("databaseTargets" == ___local)&&("http://digijava.org/module/autopatcher/schema.xml" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  18 :
                        if (("description" == ___local)&&("http://digijava.org/module/autopatcher/schema.xml" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "keyName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  33 :
                        if (("sql" == ___local)&&("http://digijava.org/module/autopatcher/schema.xml" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "reApplicable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText2(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  31 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "retryIfFailure");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText3(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "creationDate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText4(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "featureAdded");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText5(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  30 :
                        if (("sql" == ___local)&&("http://digijava.org/module/autopatcher/schema.xml" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        break;
                    case  24 :
                        if (("keywords" == ___local)&&("http://digijava.org/module/autopatcher/schema.xml" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "author");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText6(v);
                            continue outer;
                        }
                        break;
                    case  21 :
                        if (("dependencies" == ___local)&&("http://digijava.org/module/autopatcher/schema.xml" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _KeyName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReApplicable = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ReApplicable = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RetryIfFailure = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_RetryIfFailure = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CreationDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FeatureAdded = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Author = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  32 :
                        if (("sql" == ___local)&&("http://digijava.org/module/autopatcher/schema.xml" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "keyName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  33 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "reApplicable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText2(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  31 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "retryIfFailure");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText3(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "creationDate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText4(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  20 :
                        if (("description" == ___local)&&("http://digijava.org/module/autopatcher/schema.xml" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("keywords" == ___local)&&("http://digijava.org/module/autopatcher/schema.xml" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "featureAdded");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText5(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  29 :
                        if (("databaseTargets" == ___local)&&("http://digijava.org/module/autopatcher/schema.xml" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "author");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText6(v);
                            continue outer;
                        }
                        break;
                    case  23 :
                        if (("dependencies" == ___local)&&("http://digijava.org/module/autopatcher/schema.xml" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        state = 30;
                        continue outer;
                    case  9 :
                        if (("keyName" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  33 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        if (("reApplicable" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  31 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            _getSql().add(((org.digijava.module.autopatcher.schema.impl.SqlTypeImpl) spawnChildFromEnterAttribute((org.digijava.module.autopatcher.schema.impl.SqlTypeImpl.class), 32, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  15 :
                        if (("retryIfFailure" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  3 :
                        if (("creationDate" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        if (("featureAdded" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  0 :
                        if (("author" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  14 :
                        if (("reApplicable" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "keyName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("author" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("keyName" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("creationDate" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  33 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "reApplicable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText2(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  31 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "retryIfFailure");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText3(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "creationDate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText4(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "featureAdded");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText5(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  17 :
                        if (("retryIfFailure" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  8 :
                        if (("featureAdded" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "author");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText6(v);
                            continue outer;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  10 :
                            state = 11;
                            eatText1(value);
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText6(value);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "keyName");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  19 :
                            state = 20;
                            eatText7(value);
                            return ;
                        case  28 :
                            state = 29;
                            eatText8(value);
                            return ;
                        case  33 :
                            revertToParentFromText(value);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "reApplicable");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText2(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  31 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  15 :
                            attIdx = context.getAttribute("", "retryIfFailure");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText3(v);
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "creationDate");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText4(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "featureAdded");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText5(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  16 :
                            state = 17;
                            eatText3(value);
                            return ;
                        case  22 :
                            state = 23;
                            eatText9(value);
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  25 :
                            state = 26;
                            eatText10(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText4(value);
                            return ;
                        case  13 :
                            state = 14;
                            eatText2(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText5(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "author");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText6(v);
                                continue outer;
                            }
                            break;
                        case  21 :
                            state = 24;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Description = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DatabaseTargets = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Dependencies = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Keywords = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
