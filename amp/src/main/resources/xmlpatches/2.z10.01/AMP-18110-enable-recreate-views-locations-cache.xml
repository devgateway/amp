<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="true" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-18110</jira>
	<keyword>Views</keyword>
	<author>cdolghier</author>
	<description>recreate view, this will always be the last version of the view</description>
	<apply>
		<script>
			<lang delimiter="@" type="postgres">
			
				UPDATE amp_global_settings SET settingsvalue = 'true' WHERE settingsname='Recreate the views on the next server restart'@
				
				DROP VIEW IF EXISTS v_regions@@@
				DROP VIEW IF EXISTS v_zones@@@
				DROP VIEW IF EXISTS v_districts@@@
				DROP VIEW IF EXISTS v_countries@@@
				
				DROP TABLE IF EXISTS amp_location_cache_regions@@@
				DROP TABLE IF EXISTS amp_location_cache_zones@@@
				DROP TABLE IF EXISTS amp_location_cache_districts@@@
				DROP TABLE IF EXISTS amp_location_cache_countries@@@
				
				DROP TABLE IF EXISTS amp_location_cache CASCADE@@@
				
				CREATE TABLE amp_location_cache
				(	amp_location_id bigint,
					acvl_id bigint NOT NULL PRIMARY KEY,
					acvl_name character varying,
					parent_location bigint,
					region_id bigint,
					region_name character varying,
					zone_id bigint,
					zone_name character varying, 
					district_id bigint,
					district_name character varying,
					country_id bigint,
					country_name character varying)@@@
				
				CREATE INDEX amp_location_cache_loc_id_idx ON amp_location_cache(amp_location_id)@@@
				CREATE INDEX amp_location_cache_acvl_id_idx ON amp_location_cache(acvl_id)@@@
				CREATE INDEX amp_location_cache_reg_id_idx ON amp_location_cache(region_id)@@@
				CREATE INDEX amp_location_cache_zone_id_idx ON amp_location_cache(zone_id)@@@
				CREATE INDEX amp_location_cache_district_id_idx ON amp_location_cache(district_id)@@@
				CREATE INDEX amp_location_cache_country_id_idx ON amp_location_cache(country_id)@@@
				
				DROP VIEW IF EXISTS v_amp_location_cache@@@
				
				CREATE OR REPLACE VIEW v_amp_location_cache AS 
					SELECT
						l.amp_location_id, 
						acvl.id AS acvl_id, acvl.location_name AS acvl_name,
						acvl.parent_location,
						getlocationidbyimplloc(acvl.id, 'Region'::character varying) AS region_id, getlocationname(getlocationidbyimplloc(acvl.id, 'Region'::character varying)) as region_name,
						getlocationidbyimplloc(acvl.id, 'Zone'::character varying) AS zone_id, getlocationname(getlocationidbyimplloc(acvl.id, 'Zone'::character varying)) as zone_name,
						getlocationidbyimplloc(acvl.id, 'District'::character varying) AS district_id, getlocationname(getlocationidbyimplloc(acvl.id, 'District'::character varying)) as district_name,
						getlocationidbyimplloc(acvl.id, 'Country'::character varying) AS country_id, getlocationname(getlocationidbyimplloc(acvl.id, 'Country'::character varying)) as country_name			
 					FROM amp_category_value_location acvl LEFT JOIN amp_location l ON l.location_id = acvl.id
 					ORDER BY acvl.id@@@
				
				CREATE OR REPLACE FUNCTION update_location_level_caches_internal()  <!-- function changed in AMP-21453-define-location-nicache-tables -->
 				RETURNS bigint AS
			$BODY$
				BEGIN
					TRUNCATE amp_location_cache;

					INSERT INTO amp_location_cache
						SELECT * FROM v_amp_location_cache;
					RETURN 1;
				end;
			$BODY$
				LANGUAGE plpgsql VOLATILE; @@@
			</lang>
		</script>
	</apply>
</tns:patch>