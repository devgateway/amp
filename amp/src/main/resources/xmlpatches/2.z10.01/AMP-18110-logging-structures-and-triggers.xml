<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="true" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-18110</jira>
	<keyword>Views</keyword>
	<author>cdolghier</author>
	<description>initial infrastructure for logging for usage by MonetETL</description>
	<apply>
		<script>
			<lang delimiter="@" type="postgres">

CREATE TABLE amp_etl_changelog (
	event_id SERIAL PRIMARY KEY,
	entity_name varchar(255) NOT NULL,
	entity_id bigint NOT NULL,
	event_date bigint NOT NULL DEFAULT extract(epoch from statement_timestamp()),
	event_date_raw timestamp NOT NULL DEFAULT statement_timestamp()
)@@@

CREATE INDEX ON amp_etl_changelog(entity_name)@@@
CREATE INDEX ON amp_etl_changelog(event_date)@@@

CREATE FUNCTION activity_modified_proc() RETURNS trigger AS $BODY$
    BEGIN
        INSERT INTO amp_etl_changelog(entity_name, entity_id) VALUES ('activity', NEW.amp_activity_id);
        RETURN NEW;
    END;
$BODY$ LANGUAGE plpgsql@@@

CREATE FUNCTION activity_deleted_proc() RETURNS trigger AS $BODY$
    BEGIN
        INSERT INTO amp_etl_changelog(entity_name, entity_id) VALUES ('activity', OLD.amp_activity_id);
        RETURN OLD;
    END;
$BODY$ LANGUAGE plpgsql@@@

CREATE TRIGGER activity_modified_trig BEFORE INSERT OR UPDATE ON amp_activity_version
    FOR EACH ROW EXECUTE PROCEDURE activity_modified_proc()@@@

CREATE TRIGGER activity_deleted_trig BEFORE DELETE ON amp_activity_version
    FOR EACH ROW EXECUTE PROCEDURE activity_deleted_proc()@@@



CREATE FUNCTION exchange_rate_modified_proc() RETURNS trigger AS $BODY$
    BEGIN
        INSERT INTO amp_etl_changelog(entity_name, entity_id) VALUES ('exchange_rate', to_char(NEW.exchange_rate_date, 'J')::integer);
        RETURN NEW;
    END;
$BODY$ LANGUAGE plpgsql@@@

CREATE FUNCTION exchange_rate_deleted_proc() RETURNS trigger AS $BODY$
    BEGIN
        INSERT INTO amp_etl_changelog(entity_name, entity_id) VALUES ('exchange_rate', to_char(OLD.exchange_rate_date, 'J')::integer);
        RETURN OLD;
    END;
$BODY$ LANGUAGE plpgsql@@@


CREATE TRIGGER exchange_rate_modified_trig BEFORE INSERT OR UPDATE ON amp_currency_rate
    FOR EACH ROW EXECUTE PROCEDURE exchange_rate_modified_proc()@@@

CREATE TRIGGER exchange_rate_deleted_trig BEFORE DELETE ON amp_currency_rate
    FOR EACH ROW EXECUTE PROCEDURE exchange_rate_deleted_proc()@@@
			</lang>
		</script>
	</apply>
</tns:patch>
