<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="true" retryOnFail="true"
           xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../../doc/xmlpatcher.xsd ">
    <jira>AMP-28146</jira>
    <author>ociubotaru</author>
    <description>
        Adjust fk constraint for amp_activity_group to allow hibernate to delete activities without violating
        the constraint.

        Also fixing constraints on amp_activity_group.amp_activity_last_version_id.

        Some entries in amp_activity_group are broken. Fixing them and archiving the linked activities.
    </description>
    <apply>
        <script>
            <lang delimiter=";" type="postgres"><![CDATA[
                ALTER TABLE amp_activity_group
                    DROP CONSTRAINT fk3b88712ab061d8d8;
                ALTER TABLE amp_activity_group
                    ADD CONSTRAINT fk_activity
                    FOREIGN KEY (amp_activity_last_version_id) REFERENCES amp_activity_version
                    DEFERRABLE INITIALLY DEFERRED;

                ALTER TABLE amp_activity_version
                    DROP CONSTRAINT fkadea60c362016f31;
                ALTER TABLE amp_activity_version
	                ADD CONSTRAINT fk_merge_source1
		            FOREIGN KEY (merge_source1) REFERENCES amp_activity_version
		            DEFERRABLE INITIALLY DEFERRED;

                ALTER TABLE amp_activity_version
                    DROP CONSTRAINT fkadea60c362016f32;
                ALTER TABLE amp_activity_version
	                ADD CONSTRAINT fk_merge_source2
		            FOREIGN KEY (merge_source2) REFERENCES amp_activity_version
		            DEFERRABLE INITIALLY DEFERRED;

                -- remove all invalid activity group entries that aren't referenced from amp_activity_version
                delete from amp_activity_group
                where amp_activity_last_version_id is null
                  and amp_activity_group_id not in (select distinct amp_activity_group_id from amp_activity_version);

                -- archive dangling activities
                update amp_activity_version
                set name = 'archived activity, see AMP-28570, original title='::varchar || name,
                    archived = true
                where amp_activity_id in (
                         select a.amp_activity_id
                         from amp_activity_version a
                                join amp_activity_group g on a.amp_activity_group_id = g.amp_activity_group_id
                         where g.amp_activity_last_version_id is null
                );

                -- fix activity group for dangling activities
                update amp_activity_group
                set amp_activity_last_version_id = (
                        select max(a.amp_activity_id)
                        from amp_activity_version a
                        where a.amp_activity_group_id = amp_activity_group.amp_activity_group_id)
                where amp_activity_group_id in (
                        select a.amp_activity_group_id
                        from amp_activity_version a
                               join amp_activity_group g on a.amp_activity_group_id = g.amp_activity_group_id
                        where g.amp_activity_last_version_id is null);
            ]]></lang>
        </script>
    </apply>
</tns:patch>
