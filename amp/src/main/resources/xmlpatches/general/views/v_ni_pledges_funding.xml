<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="false" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../../../doc/xmlpatcher.xsd ">
	<jira>AMP-14167</jira>
	<keyword>Views</keyword>
	<author>Constantin Dolghier</author>
	<description>recreate view, this will always be the last version of the view</description>
	<trigger type="all">
		<condition type="custom">
			<script returnVar="val">
				<lang type="sql">
					SELECT settingsvalue FROM amp_global_settings where settingsname='Recreate the views on the next server restart';
				</lang>
			</script>
 			<test>val.equalsIgnoreCase("true")</test>
		</condition>
	</trigger> 
	<apply>
		<script>
			<lang delimiter=";" type="postgres">
				<!-- if you are changing this view to eliminate a.draft != true, also eliminate it from v_pledges_projects!
					else you will get inconsistent results when doing pledges reports with hierarchies by related_project
			 	-->
				DROP VIEW IF EXISTS v_ni_pledges_funding CASCADE;
			
				CREATE OR REPLACE VIEW v_ni_pledges_funding AS 
	    			SELECT
						coalesce(f.id, 999999999) AS pledge_id, afd.amp_fund_detail_id, afd.amp_fund_detail_id as id,
						afd.transaction_type, afd.adjustment_type, 
						afd.transaction_date, afd.transaction_amount, afd.amp_currency_id AS currency_id, 
						NULL::bigint AS terms_assist_id, <!-- ampf.type_of_assistance_category_va AS terms_assist_id,  --> 
						f.amp_org_grp_id AS donor_org_grp_id,
						NULL::bigint AS financing_instrument_id, <!-- ampf.financing_instr_category_value AS financing_instrument_id, -->
						NULL AS aid_modality_id,
						a.amp_activity_id AS related_project_id,
						afd.recipient_org_id AS recipient_org_id, afd.recipient_role_id AS recipient_role_id,
         				ampf.source_role_id AS source_role_id
					FROM amp_funding_pledges f
						RIGHT JOIN amp_funding_detail afd ON afd.pledge_id = f.id
						JOIN amp_funding ampf ON ampf.amp_funding_id = afd.amp_funding_id
						JOIN amp_currency c ON c.amp_currency_id = afd.amp_currency_id
						JOIN amp_activity a ON (a.amp_activity_id = ampf.amp_activity_id) AND (a.draft != true) AND (a.deleted != true)
					WHERE (a.amp_team_id IS NOT NULL)
					
				UNION ALL 
			
					SELECT  <!-- Actual Pledge entries -->
						f.id AS pledge_id, fd.id AS amp_fund_detail_id, fd.id AS id,  
						7 AS transaction_type, 1 AS adjustment_type,
					CASE 
						WHEN fd.datestart IS NULL THEN to_date('02 Jan ' || fd.year, 'DD Mon YYYY')
						ELSE fd.datestart
					END AS transaction_date, 
					fd.amount AS transaction_amount, fd.currency AS currency_id, 
					fd.type_of_assistance AS terms_assist_id, 
					f.amp_org_grp_id AS donor_org_grp_id,
					NULL AS financing_instrument_id,			             
					fd.aid_modality AS aid_modality_id, 
					NULL AS related_project_id,
					NULL as recipient_org_id, NULL as recipient_role_id, NULL as source_role_id
					
				FROM amp_funding_pledges f
					JOIN amp_funding_pledges_details fd ON f.id = fd.pledge_id;
				
				DROP VIEW IF EXISTS v_ni_pledges_funding_debug;
			
				CREATE OR REPLACE VIEW v_ni_pledges_funding_debug AS 
	    			SELECT
						pf.pledge_id, pf.amp_fund_detail_id, pf.id,
						pf.transaction_type, 
						pf.adjustment_type, adjtype.category_value AS adjustment_type_name,
						pf.transaction_date, pf.transaction_amount, 
						pf.currency_id, currency.currency_name AS currency_name, 
						pf.terms_assist_id, toa.category_value AS terms_assist_name, 
						pf.donor_org_grp_id, donor_group.org_grp_name AS donor_org_grp_name,
						donor_type.amp_org_type_id AS donor_type_id, donor_type.org_type AS donor_type_name,
						pf.financing_instrument_id, fininstr.category_value AS financing_instrument_name,
						pf.aid_modality_id, aidmodality.category_value AS aid_modality_name,
						pf.related_project_id, aa.name AS related_project_name,
						pf.recipient_org_id, recipient.name AS recipient_org_name,
						pf.recipient_role_id, recipient_role.name AS recipient_role_name,
						pf.source_role_id, source_role.name AS source_role_name
						
					FROM v_ni_pledges_funding pf
						LEFT JOIN amp_category_value adjtype ON adjtype.id = pf.adjustment_type
						LEFT JOIN amp_currency currency ON currency.amp_currency_id = pf.currency_id
						LEFT JOIN amp_org_group donor_group ON donor_group.amp_org_grp_id = pf.donor_org_grp_id
						LEFT JOIN amp_org_type donor_type ON donor_type.amp_org_type_id = donor_group.org_type
						LEFT JOIN amp_category_value fininstr ON fininstr.id = pf.financing_instrument_id
						LEFT JOIN amp_category_value aidmodality ON aidmodality.id = pf.aid_modality_id
						LEFT JOIN amp_category_value toa ON toa.id = pf.terms_assist_id
						LEFT JOIN amp_activity_version aa ON aa.amp_activity_id = pf.related_project_id
						LEFT JOIN amp_organisation recipient ON recipient.amp_org_id = pf.recipient_org_id
						LEFT JOIN amp_role recipient_role ON recipient_role.amp_role_id = pf.recipient_role_id
						LEFT JOIN amp_role source_role ON source_role.amp_role_id = pf.source_role_id;
        	</lang>
		</script>
	</apply>
</tns:patch>
