{"version":3,"file":"325.bundle.js","mappings":"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","sources":["actions/startupAction.js","reducers/startupReducer.js","constants/Constants.js","actions/fetchReleases.js","actions/translationsActions.js","utils/actions/loadTranslations.js","utils/actions/fetchTranslations.js","components/Loading.jsx","components/Startup.jsx","components/DownloadLinks.jsx","components/AMPOfflineDownload.jsx","reducers/translationsReducer.js","reducers/rootReducer.js","App.js","reportWebVitals.js","bootstrap.js"],"sourcesContent":["export const FETCH_RELEASES_PENDING = 'FETCH_RELEASES_PENDING';\nexport const FETCH_RELEASES_SUCCESS = 'FETCH_RELEASES_SUCCESS';\nexport const FETCH_RELEASES_ERROR = 'FETCH_RELEASES_ERROR';\n\nexport function fetchReleasesPending() {\n  return {\n    type: FETCH_RELEASES_PENDING\n  };\n}\n\nexport function fetchReleasesSuccess(releases) {\n  return {\n    type: FETCH_RELEASES_SUCCESS,\n    payload: releases\n  };\n}\nexport function fetchReleasesError(error) {\n  return {\n    type: FETCH_RELEASES_ERROR,\n    error\n  };\n}\n","import { FETCH_RELEASES_PENDING, FETCH_RELEASES_SUCCESS, FETCH_RELEASES_ERROR } from '../actions/startupAction';\n\nconst initialState = {\n  pending: false,\n  releases: [],\n  error: null\n};\n\nexport default function startupReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_RELEASES_PENDING:\n      return {\n        ...state,\n        pending: true\n      };\n    case FETCH_RELEASES_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        releases: action.payload\n      };\n    case FETCH_RELEASES_ERROR:\n      return {\n        ...state,\n        pending: false,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getReleases = state => state.releases;\nexport const getReleasesPending = state => state.pending;\nexport const getReleasesError = state => state.error;\n","export const AMP_OFFLINE_INSTALLERS = '/rest/amp/amp-offline-release';\nexport const WINDOWS = 'windows';\nexport const MAC = 'osx';\nexport const DEBIAN_LINUX = 'debian';\nexport const REDHAT_LINUX = 'redhat';\nexport const MACINTOSH = 'macintosh';\nexport const OS_X = 'os x';\nexport const LINUX = 'linux';\n","import { fetchReleasesSuccess, fetchReleasesPending, fetchReleasesError } from './startupAction';\nimport { AMP_OFFLINE_INSTALLERS } from '../constants/Constants';\n\nfunction fetchReleases() {\n  return dispatch => {\n    dispatch(fetchReleasesPending());\n    fetch(AMP_OFFLINE_INSTALLERS)\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          throw (res.error);\n        }\n        dispatch(fetchReleasesSuccess(res));\n        return res;\n      })\n      .catch(error => {\n        dispatch(fetchReleasesError(error));\n      });\n  };\n}\nexport default fetchReleases;\n","export const FETCH_TRANSLATIONS_PENDING = 'FETCH_TRANSLATIONS_PENDING';\nexport const FETCH_TRANSLATIONS_SUCCESS = 'FETCH_TRANSLATIONS_SUCCESS';\nexport const FETCH_TRANSLATIONS_ERROR = 'FETCH_TRANSLATIONS_ERROR';\n\nexport function fetchTranslationsPending(translations) {\n  return {\n    type: FETCH_TRANSLATIONS_PENDING,\n    payload: translations\n  };\n}\n\nexport function fetchTranslationsSuccess(translations) {\n  return {\n    type: FETCH_TRANSLATIONS_SUCCESS,\n    payload: translations\n  };\n}\n\nexport function fetchTranslationsError(error) {\n  return {\n    type: FETCH_TRANSLATIONS_ERROR,\n    error\n  };\n}\n","export const WS_PREFIX = 'SSC_';\n\nconst POST = 'POST';\nconst GET = 'GET';\n\nfunction getRequestOptions(body, headers) {\n  const requestOptions = {\n    method: body ? POST : GET,\n    headers: headers || { 'Content-Type': 'application/json', Accept: 'application/json', 'ws-prefix': WS_PREFIX }\n  };\n  if (body) {\n    requestOptions.body = JSON.stringify(body);\n  }\n  return requestOptions;\n}\n\nexport const fetchApiData = ({ body, url, headers }) => new Promise((resolve, reject) => fetch(url,\n  getRequestOptions(body, headers))\n  .then(response => {\n    if (headers && headers.Accept === 'text/html') {\n      return response.text();\n    } else if (response.headers && response.headers.get('Content-Type')\n        && response.headers.get('Content-Type').indexOf('application/json') > -1) {\n      return response.json();\n    } else {\n      return response;\n    }\n  })\n  .then(data => {\n    if (data.error) {\n      return reject(data.error);\n      // throw new Error(data.error);\n    }\n    return resolve(data);\n  }));\n\n// TODO to move api route to a constant.\nexport function loadTranslations(trnPack) {\n  return new Promise((resolve) => fetch('/rest/translations/label-translations', getRequestOptions(trnPack))\n    .then(response => {\n        let contentType = response.headers.get(\"content-type\");\n        if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n            return response.json().then(data => {\n                if (data.error) {\n                    throw new Error(data.error);\n                }\n                return resolve(data);\n            });\n        }\n    }));\n}\n","import { fetchTranslationsSuccess, fetchTranslationsPending, fetchTranslationsError }\n  from '../../actions/translationsActions';\nimport { loadTranslations } from './loadTranslations';\n\nfunction fetchTranslations(translations) {\n  return dispatch => {\n    dispatch(fetchTranslationsPending(translations));\n    return loadTranslations(translations)\n      .then(trnPack => dispatch(fetchTranslationsSuccess(trnPack)))\n      .catch(error => dispatch(fetchTranslationsError(error)));\n  };\n}\nexport default fetchTranslations;\n","import React from 'react';\n\nconst Loading = () => (\n  <div className=\"jumbotron\">\n    <div className=\"progress\">\n      <div\n        className=\"progress-bar progress-bar-striped bg-info\"\n        role=\"progressbar\"\n        aria-valuenow=\"100\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        style={{ width: '100%' }}>\n        ...\n      </div>\n    </div>\n  </div>\n);\n\nexport { Loading };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport fetchTranslations from '../utils/actions/fetchTranslations';\nimport defaultTrnPack from '../config/initialTranslations.json';\nimport { Loading } from './Loading';\n\nexport const TranslationContext = React.createContext({ translations: defaultTrnPack });\n\n/**\n * Component used to load everything we need before launching the APP\n * TODO check if we should abstract it to a Load Translations component to avoid copy ^\n */\nclass Startup extends Component {\n  componentDidMount() {\n    // FIXME\n    // eslint-disable-next-line react/destructuring-assignment\n    this.props.fetchTranslations(defaultTrnPack);\n  }\n\n  render() {\n    const { translationPending, children, translations } = this.props;\n    return translationPending\n      ? (<Loading />)\n      : (\n        <TranslationContext.Provider value={{ translations }}>\n          {children}\n        </TranslationContext.Provider>\n      );\n  }\n}\n\nconst mapStateToProps = state => ({\n  translationPending: state.translationsReducer.pending,\n  translations: state.translationsReducer.translations\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ fetchTranslations }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Startup);\nStartup.propTypes = {\n  translationPending: PropTypes.bool.isRequired,\n  translations: PropTypes.object.isRequired,\n  children: PropTypes.object.isRequired,\n  fetchTranslations: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport platform from 'platform';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getReleases, getReleasesError, getReleasesPending } from '../reducers/startupReducer';\nimport fetchReleases from '../actions/fetchReleases';\nimport {\n  AMP_OFFLINE_INSTALLERS, DEBIAN_LINUX, LINUX, MAC, MACINTOSH, OS_X, REDHAT_LINUX, WINDOWS\n} from '../constants/Constants';\n\nimport { TranslationContext } from './Startup';\n\nclass DownloadLinks extends Component {\n  constructor(props) {\n    super(props);\n    this.shouldComponentRender = this.shouldComponentRender.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchReleases } = this.props;\n    fetchReleases();\n  }\n\n  shouldComponentRender() {\n    return !this.props.pending;\n  }\n\n  _buildLinksTable() {\n    const links = [];\n    if (this.props.releases) {\n      this.props.releases.sort((i, j) => i.os > j.os).map(i => links.push(<a\n        href={`${AMP_OFFLINE_INSTALLERS}/${i.id}`}>\n        {this._getInstallerName(i.os, i.arch)}\n      </a>));\n      return (\n        <ul>\n          {links.map((l, j) => (<li key={j}>{l}</li>))}\n        </ul>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  _getInstallerName(os, arch) {\n    let name = '';\n    switch (os) {\n      case WINDOWS:\n        name = `Windows Vista/7/8/10 - ${arch} ${this.context.translations['amp.offline:bits']}`;\n        break;\n      case DEBIAN_LINUX:\n        name = `Ubuntu Linux (.deb) - ${arch} ${this.context.translations['amp.offline:bits']}`;\n        break;\n      case REDHAT_LINUX:\n        name = `RedHat Linux (.rpm) - ${arch} ${this.context.translations['amp.offline:bits']}`;\n        break;\n      case MAC:\n        name = `Mac OS - ${arch} ${this.context.translations['amp.offline:bits']}`;\n        break;\n      default:\n        name = `${this.context.translations['amp.offline:unknown']}`;\n    }\n    return name;\n  }\n\n  _detectBestInstaller() {\n    const { os } = platform;\n    const arch = os.architecture;\n    const family = os.family.toLowerCase();\n    let osNames = null;\n    if (family.indexOf(WINDOWS) > -1) {\n      osNames = [WINDOWS];\n    } else if (family.indexOf(MACINTOSH) > -1 || family.indexOf(OS_X) > -1) {\n      osNames = [MAC];\n    } else if (family.indexOf(LINUX) > -1) {\n      osNames = [DEBIAN_LINUX, REDHAT_LINUX];\n    } else {\n      return [];\n    }\n    const installer = this.props.releases.filter(i => (osNames.filter(os => os === i.os).length > 0 && i.arch === arch.toString()));\n    const links = installer.map(i => {\n      const installerName = this._getInstallerName(i.os, i.arch);\n      return (\n        <div key={i.id} className=\"link\">\n          <a\n            href={`${AMP_OFFLINE_INSTALLERS}/${i.id}`}>\n            {this.context.translations['amp.offline:download']}\n            {' '}\n            {i.version}\n            {' '}\n            -\n            {' '}\n            {installerName}\n          </a>\n        </div>\n      );\n    });\n    const message = this.context.translations['amp.offline:best-version-message'];\n    return (\n      links.length > 0\n            && (\n            <div className=\"alert alert-info\" role=\"alert\">\n              <span className=\"info-text\">{message}</span>\n              {links}\n            </div>\n            ));\n  }\n\n  render() {\n    if (!this.shouldComponentRender()) {\n      return <div>loading</div>;\n    } else {\n      return (\n        <div>\n          <div>\n            {this._detectBestInstaller()}\n          </div>\n          <h4>{this.context.translations['amp.offline:all-versions']}</h4>\n          <div>\n            {this._buildLinksTable()}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nDownloadLinks.contextType = TranslationContext;\n\nconst mapStateToProps = state => ({\n  error: getReleasesError(state.startupReducer),\n  releases: getReleases(state.startupReducer),\n  pending: getReleasesPending(state.startupReducer),\n  translations: state.translationsReducer.translations\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({ fetchReleases }, dispatch);\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadLinks);\n","import React, { useContext } from 'react';\nimport DownloadLinks from './DownloadLinks';\nimport monitor from '../images/monitor.png';\nimport './css/style.css';\nimport { TranslationContext } from './Startup'\n\nconst AmpOfflineDownload = () => {\n    const { translations } = useContext(TranslationContext);\n\n    return (\n        <div>\n            <div className=\"col-md-5\">\n                <img src={monitor} alt={translations['amp.offline:download-title']} />\n            </div>\n            <div className=\"col-md-7\">\n                <div className=\"main_text\">\n                    <h2>{translations['amp.offline:download-title']}</h2>\n                    <span>{translations['amp.offline:text']}</span>\n                </div>\n                <div>\n                    <DownloadLinks />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AmpOfflineDownload;\n","import {\n  FETCH_TRANSLATIONS_ERROR, FETCH_TRANSLATIONS_PENDING, FETCH_TRANSLATIONS_SUCCESS\n} from '../actions/translationsActions'\n\nconst initialState = {\n  pending: true,\n  translations: {},\n  error: null\n};\n\nexport default function translationsReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_TRANSLATIONS_PENDING:\n      return {\n        ...state,\n        pending: true,\n        translations: action.payload\n      };\n    case FETCH_TRANSLATIONS_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        translations: action.payload\n      };\n    case FETCH_TRANSLATIONS_ERROR:\n      return {\n        ...state,\n        pending: false,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport startupReducer from './startupReducer';\nimport translationsReducer from './translationsReducer';\n\nexport default combineReducers({\n  startupReducer,\n  translationsReducer,\n});\n","import React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport AMPOfflineDownload from './components/AMPOfflineDownload';\nimport rootReducer from './reducers/rootReducer';\nimport defaultTrnPack from './config/initialTranslations.json';\nimport Startup from './components/Startup';\n\n\n\nconst AMPOfflineDownloadApp = () => {\n  const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n  return (\n      <Provider store={store}>\n        <Startup defaultTrnPack={defaultTrnPack}>\n          <AMPOfflineDownload />\n        </Startup>\n      </Provider>\n  );\n}\n\nexport default AMPOfflineDownloadApp;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst boilerplate = require('@devgateway/amp-boilerplate/dist/amp-boilerplate');\n\nconst Root = () => (\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n\nexport const mount = ({ el, standalone = true }) => {\n    if (el) {\n        ReactDOM.createRoot(el).render(<Root />);\n    }\n\n\n    if (standalone) {\n        function getParameterByName(name, url = window.location.href) {\n            name = name.replace(/[[\\]]/g, '\\\\$&');\n            const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`);\n            const results = regex.exec(url);\n            if (!results) return null;\n            if (!results[2]) return '';\n            return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n        }\n\n\n        if (!getParameterByName('embedded')) {\n            new boilerplate.layout({});\n        }\n    }\n\n    // If you want to start measuring performance in your app, pass a function\n    // to log results (for example: reportWebVitals(console.log))\n    // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n    reportWebVitals();\n}\n"],"names":["FETCH_RELEASES_PENDING","FETCH_RELEASES_SUCCESS","FETCH_RELEASES_ERROR","initialState","pending","releases","error","getReleases","state","getReleasesPending","getReleasesError","AMP_OFFLINE_INSTALLERS","WINDOWS","DEBIAN_LINUX","REDHAT_LINUX","dispatch","type","fetch","then","res","json","payload","catch","fetchReleasesError","FETCH_TRANSLATIONS_PENDING","FETCH_TRANSLATIONS_SUCCESS","FETCH_TRANSLATIONS_ERROR","WS_PREFIX","POST","GET","getRequestOptions","body","headers","requestOptions","method","Accept","JSON","stringify","translations","fetchTranslationsPending","trnPack","Promise","resolve","response","contentType","get","indexOf","data","Error","fetchTranslationsSuccess","fetchTranslationsError","Loading","_jsx","className","children","role","style","width","TranslationContext","React","defaultTrnPack","Startup","Component","componentDidMount","this","props","fetchTranslations","render","translationPending","Provider","value","connect","translationsReducer","bindActionCreators","DownloadLinks","constructor","super","shouldComponentRender","bind","fetchReleases","_buildLinksTable","links","sort","i","j","os","map","push","href","concat","id","_getInstallerName","arch","l","name","context","_detectBestInstaller","platform","architecture","family","toLowerCase","osNames","installer","filter","length","toString","installerName","_jsxs","version","message","contextType","startupReducer","AmpOfflineDownload","useContext","src","monitor","alt","combineReducers","arguments","undefined","action","AMPOfflineDownloadApp","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","AMPOfflineDownload","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","boilerplate","require","Root","App","mount","el","standalone","ReactDOM","getParameterByName","url","location","replace","results","RegExp","exec","decodeURIComponent","layout","reportWebVitals"],"sourceRoot":""}