{"version":3,"file":"1817.bundle.js","mappings":"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","sources":["../../../node_modules/leaflet-curve/leaflet.curve.js"],"sourcesContent":["/*\r\n * Leaflet.curve v0.1.0 - a plugin for Leaflet mapping library. https://github.com/elfalem/Leaflet.curve\r\n * (c) elfalem 2015\r\n */\r\n/*\r\n * note that SVG (x, y) corresponds to (long, lat)\r\n */\r\n\r\nL.Curve = L.Path.extend({\r\n\toptions: {\r\n\t},\r\n\t\r\n\tinitialize: function(path, options){\r\n\t\tL.setOptions(this, options);\r\n\t\tthis._setPath(path);\r\n\t},\r\n\t\r\n\tgetPath: function(){\r\n\t\treturn this._coords;\r\n\t},\r\n\t\r\n\tsetPath: function(path){\r\n\t\tthis._setPath(path);\r\n\t\treturn this.redraw();\r\n\t},\r\n\t\r\n\tgetBounds: function() {\r\n\t\treturn this._bounds;\r\n\t},\r\n\r\n\t_setPath: function(path){\r\n\t\tthis._coords = path;\r\n\t\tthis._bounds = this._computeBounds();\r\n\t},\r\n\t\r\n\t_computeBounds: function(){\r\n\t\tvar bound = new L.LatLngBounds();\r\n\t\tvar lastPoint;\r\n\t\tvar lastCommand;\r\n\t\tfor(var i = 0; i < this._coords.length; i++){\r\n\t\t\tcoord = this._coords[i];\r\n\t\t\tif(typeof coord == 'string' || coord instanceof String){\r\n\t\t\t\tlastCommand = coord;\r\n\t\t\t}else if(lastCommand == 'H'){\r\n\t\t\t\tbound.extend([lastPoint.lat,coord[0]]);\r\n\t\t\t\tlastPoint = new L.latLng(lastPoint.lat,coord[0]);\r\n\t\t\t}else if(lastCommand == 'V'){\r\n\t\t\t\tbound.extend([coord[0], lastPoint.lng]);\r\n\t\t\t\tlastPoint = new L.latLng(coord[0], lastPoint.lng);\r\n\t\t\t}else if(lastCommand == 'C'){\r\n\t\t\t\tvar controlPoint1 = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tbound.extend(controlPoint1);\r\n\t\t\t\tbound.extend(controlPoint2);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\r\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t}else if(lastCommand == 'S'){\r\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tvar controlPoint1 = lastPoint;\r\n\t\t\t\tif(lastPoint.controlPoint2){\r\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint2.lat;\r\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint2.lng;\r\n\t\t\t\t\tcontrolPoint1 = new L.latLng(lastPoint.lat + diffLat, lastPoint.lng + diffLng);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbound.extend(controlPoint1);\r\n\t\t\t\tbound.extend(controlPoint2);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\r\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t}else if(lastCommand == 'Q'){\r\n\t\t\t\tvar controlPoint = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tbound.extend(controlPoint);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint = controlPoint;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t}else if(lastCommand == 'T'){\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tvar controlPoint = lastPoint;\r\n\t\t\t\tif(lastPoint.controlPoint){\r\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint.lat;\r\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint.lng;\r\n\t\t\t\t\tcontrolPoint = new L.latLng(lastPoint.lat + diffLat, lastPoint.lng + diffLng);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbound.extend(controlPoint);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint = controlPoint;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t}else{\r\n\t\t\t\tbound.extend(coord);\r\n\t\t\t\tlastPoint = new L.latLng(coord[0], coord[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn bound;\r\n\t},\r\n\t\r\n\t//TODO: use a centroid algorithm instead\r\n\tgetCenter: function () {\r\n\t\treturn this._bounds.getCenter();\r\n\t},\r\n\t\r\n\t_update: function(){\r\n\t\tif (!this._map) { return; }\r\n\t\t\r\n\t\tthis._updatePath();\r\n\t},\r\n\t\r\n\t_updatePath: function() {\r\n\t\tthis._renderer._updatecurve(this);\r\n\t},\r\n\r\n\t_project: function() {\r\n\t\tvar coord, lastCoord, curCommand, curPoint;\r\n\r\n\t\tthis._points = [];\r\n\t\t\r\n\t\tfor(var i = 0; i < this._coords.length; i++){\r\n\t\t\tcoord = this._coords[i];\r\n\t\t\tif(typeof coord == 'string' || coord instanceof String){\r\n\t\t\t\tthis._points.push(coord);\r\n\t\t\t\tcurCommand = coord;\r\n\t\t\t}else {\r\n\t\t\t\tswitch(coord.length){\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint(coord);\r\n\t\t\t\t\t\tlastCoord = coord;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tif(curCommand == 'H'){\r\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([lastCoord[0], coord[0]]);\r\n\t\t\t\t\t\t\tlastCoord = [lastCoord[0], coord[0]];\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([coord[0], lastCoord[1]]);\r\n\t\t\t\t\t\t\tlastCoord = [coord[0], lastCoord[1]];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis._points.push(curPoint);\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n});\r\n\r\nL.curve = function (path, options){\r\n\treturn new L.Curve(path, options);\r\n};\r\n\r\nL.SVG.include({\r\n\t_updatecurve: function(layer){\r\n\t\tthis._setPath(layer, this._curvePointsToPath(layer._points));\r\n    \t},\r\n \t_curvePointsToPath: function(points){\r\n\t\tvar point, curCommand, str = '';\r\n\t\tfor(var i = 0; i < points.length; i++){\r\n\t\t\tpoint = points[i];\r\n\t\t\tif(typeof point == 'string' || point instanceof String){\r\n\t\t\t\tcurCommand = point;\r\n\t\t\t\tstr += curCommand;\r\n\t\t\t}else{\r\n\t\t\t\tswitch(curCommand){\r\n\t\t\t\t\tcase 'H':\r\n\t\t\t\t\t\tstr += point.x + ' ';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'V':\r\n\t\t\t\t\t\tstr += point.y + ' ';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tstr += point.x + ',' + point.y + ' ';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str || 'M0 0';\r\n\t}\r\n});\r\n"],"names":["L","Curve","Path","extend","options","initialize","path","setOptions","this","_setPath","getPath","_coords","setPath","redraw","getBounds","_bounds","_computeBounds","lastPoint","lastCommand","bound","LatLngBounds","i","length","coord","String","lat","latLng","lng","controlPoint1","controlPoint2","endPoint","diffLat","diffLng","controlPoint","getCenter","_update","_map","_updatePath","_renderer","_updatecurve","_project","lastCoord","curCommand","curPoint","_points","push","latLngToLayerPoint","curve","SVG","include","layer","_curvePointsToPath","points","point","str","x","y"],"sourceRoot":""}