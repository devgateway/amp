{"version":3,"file":"nivo-axes.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/compute.ts","../src/components/AxisTick.tsx","../src/components/Axis.tsx","../src/props.ts","../src/components/Axes.tsx","../src/components/GridLine.tsx","../src/components/GridLines.tsx","../src/components/Grid.tsx","../src/canvas.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map(value => ({\n        key: typeof value === 'number' || typeof value === 'string' ? value : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return (d3Format(format) as unknown) as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map(value => ({\n                  key: `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map(value => ({\n                  key: `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {value}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        typeof ticks[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return <animated.line {...animatedProps} {...(theme.grid.line as unknown)} />\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProp, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProp<X> | null\n        right?: CanvasAxisProp<Y> | null\n        bottom?: CanvasAxisProp<X> | null\n        left?: CanvasAxisProp<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProp<X> | undefined\n            : CanvasAxisProp<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"names":["defineProperty","isArray","value","Array","computeCartesianTicks","axis","scale","ticksPosition","tickValues","tickSize","tickPadding","tickRotation","engine","values","getScaleTicks","textProps","textPropsByEngine","position","centerScale","line","lineX","lineY","text","textX","textY","isRTL","document","dir","translate","textAlign","align","center","textBaseline","baseline","d","x","y","top","bottom","left","right","ticks","map","key","getFormatter","format","type","formatter","timeFormat","Date","d3Format","computeGridLines","width","height","_values","lineValues","undefined","lines","x1","x2","y1","y2","AxisTick","_value","onClick","textAnchor","animatedProps","theme","useTheme","props","useMemo","style","opacity","cursor","event","_jsxs","transform","_jsx","textTransform","memoizedAxisTick","memo","Axis","length","renderTick","legend","legendPosition","legendOffset","ariaHidden","formatValue","legendNode","legendX","legendY","legendRotation","dominantBaseline","useMotionConfig","animate","springConfig","config","useSpring","lineX2","lineY2","immediate","transition","useTransition","keys","tick","initial","from","enter","update","leave","transitionProps","_state","tickIndex","React","rotate","domain","memoizedAxis","axisPropTypes","PropTypes","oneOf","oneOfType","number","arrayOf","string","instanceOf","func","node","bool","axisPropType","shape","positions","Axes","xScale","yScale","axes","isXAxis","GridLine","grid","GridLines","_createElement","Grid","xValues","yValues","xLines","yLines","renderAxisToCanvas","ctx","_format","save","font","fontWeight","fontSize","fontFamily","strokeWidth","lineWidth","Number","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","forEach","degreesToRadians","fill","fillStyle","fillText","String","restore","renderAxesToCanvas","renderGridLinesToCanvas"],"mappings":"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"}