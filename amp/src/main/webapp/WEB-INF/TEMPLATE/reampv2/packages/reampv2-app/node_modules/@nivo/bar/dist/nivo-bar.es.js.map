{"version":3,"file":"nivo-bar.es.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/BarAnnotations.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/BarLegends.tsx","../src/BarItem.tsx","../src/BarTooltip.tsx","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/compute/common.ts","../src/compute/grouped.ts","../src/compute/stacked.ts","../src/compute/legends.ts","../src/hooks.ts","../src/Bar.tsx","../src/BarCanvas.tsx","../src/ResponsiveBar.tsx","../src/ResponsiveBarCanvas.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(() => () => createElement(tooltip, { ...bar, ...data }), [\n        tooltip,\n        bar,\n        data,\n    ])\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'markers', 'legends', 'annotations'],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'legends', 'annotations'],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (computeScale(\n        indexScale,\n        { all: data.map(getIndex), min: 0, max: 0 },\n        size,\n        axis\n    ) as ScaleBand<string>).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: RawDatum[], keys: string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : ((arr as unknown) as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep((stackedData as unknown) as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport { uniqBy } from 'lodash'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useTheme, useValueFormatter, Margin } from '@nivo/core'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { defaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\n\nexport const useBar = <RawDatum extends BarDatum>({\n    indexBy = defaultProps.indexBy,\n    keys = defaultProps.keys,\n    label = defaultProps.label,\n    tooltipLabel = defaultProps.tooltipLabel,\n    valueFormat,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    borderColor = defaultProps.borderColor,\n    labelTextColor = defaultProps.labelTextColor,\n    groupMode = defaultProps.groupMode,\n    layout = defaultProps.layout,\n    reverse = defaultProps.reverse,\n    data,\n    minValue = defaultProps.minValue,\n    maxValue = defaultProps.maxValue,\n    margin,\n    width,\n    height,\n    padding = defaultProps.padding,\n    innerPadding = defaultProps.innerPadding,\n    valueScale = defaultProps.valueScale,\n    indexScale = defaultProps.indexScale,\n    initialHiddenIds = defaultProps.initialHiddenIds,\n    enableLabel = defaultProps.enableLabel,\n    labelSkipWidth = defaultProps.labelSkipWidth,\n    labelSkipHeight = defaultProps.labelSkipHeight,\n    legends = defaultProps.legends,\n    legendLabel,\n}: {\n    indexBy?: BarCommonProps<RawDatum>['indexBy']\n    label?: BarCommonProps<RawDatum>['label']\n    tooltipLabel?: BarCommonProps<RawDatum>['tooltipLabel']\n    valueFormat?: BarCommonProps<RawDatum>['valueFormat']\n    colors?: BarCommonProps<RawDatum>['colors']\n    colorBy?: BarCommonProps<RawDatum>['colorBy']\n    borderColor?: BarCommonProps<RawDatum>['borderColor']\n    labelTextColor?: BarCommonProps<RawDatum>['labelTextColor']\n    groupMode?: BarCommonProps<RawDatum>['groupMode']\n    layout?: BarCommonProps<RawDatum>['layout']\n    reverse?: BarCommonProps<RawDatum>['reverse']\n    data: DataProps<RawDatum>['data']\n    keys?: BarCommonProps<RawDatum>['keys']\n    minValue?: BarCommonProps<RawDatum>['minValue']\n    maxValue?: BarCommonProps<RawDatum>['maxValue']\n    margin: Margin\n    width: number\n    height: number\n    padding?: BarCommonProps<RawDatum>['padding']\n    innerPadding?: BarCommonProps<RawDatum>['innerPadding']\n    valueScale?: BarCommonProps<RawDatum>['valueScale']\n    indexScale?: BarCommonProps<RawDatum>['indexScale']\n    initialHiddenIds?: BarCommonProps<RawDatum>['initialHiddenIds']\n    enableLabel?: BarCommonProps<RawDatum>['enableLabel']\n    labelSkipWidth?: BarCommonProps<RawDatum>['labelSkipWidth']\n    labelSkipHeight?: BarCommonProps<RawDatum>['labelSkipHeight']\n    legends?: BarCommonProps<RawDatum>['legends']\n    legendLabel?: BarCommonProps<RawDatum>['legendLabel']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        borderColor,\n        theme\n    )\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        labelTextColor,\n        theme\n    )\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter(\n                    (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n                )\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n    }\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport { BarDatum, BarLayer, BarLayerId, BarSvgProps, ComputedBarDatumWithValue } from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { svgDefaultProps } from './props'\nimport { useTransition } from '@react-spring/web'\nimport { useBar } from './hooks'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel,\n    label,\n    labelSkipWidth,\n    labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            bars,\n            xScale,\n            yScale,\n        }),\n        [commonProps, margin, innerWidth, innerHeight, width, height, bars, xScale, yScale]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { BarCanvasLayer, BarCanvasProps, BarDatum, ComputedBarDatum } from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\n\ndeclare module 'react' {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => React.ReactElement | null\n    ): (props: P & React.RefAttributes<T>) => React.ReactElement | null\n}\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel,\n    label,\n    labelSkipWidth,\n    labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            bars,\n            xScale,\n            yScale,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            height,\n            innerHeight,\n            innerWidth,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            margin,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            bars,\n            xScale,\n            yScale,\n            tooltip,\n            width,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: xScale as any,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: yScale as any,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale as any,\n                    yScale: yScale as any,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: Omit<BarSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: Omit<BarCanvasProps<RawDatum>, 'height' | 'width'>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n"],"names":["objectWithoutPropertiesLoose","defineProperty","BarAnnotations","bars","annotations","boundAnnotations","useAnnotations","data","getPosition","bar","x","width","y","height","getDimensions","size","Math","max","_jsx","map","annotation","i","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","BarLegends","legends","toggleSerie","legend","dataFrom","undefined","BarItem","style","borderColor","color","labelColor","labelOpacity","labelX","labelY","transform","borderRadius","borderWidth","label","shouldRenderLabel","isInteractive","onClick","onMouseEnter","onMouseLeave","tooltip","isFocusable","ariaLabel","ariaLabelledBy","ariaDescribedBy","theme","useTheme","useTooltip","showTooltipFromEvent","showTooltipAt","hideTooltip","renderTooltip","useMemo","createElement","handleClick","useCallback","event","handleTooltip","handleMouseEnter","handleMouseLeave","handleFocus","absX","absY","handleBlur","_jsxs","to","value","fill","labels","text","pointerEvents","BarTooltip","formattedValue","defaultProps","indexBy","keys","groupMode","layout","reverse","minValue","maxValue","valueScale","type","indexScale","round","padding","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","from","colorBy","colors","scheme","tooltipLabel","datum","id","indexValue","initialHiddenIds","markers","svgDefaultProps","layers","barComponent","defs","animate","motionConfig","role","canvasDefaultProps","pixelRatio","window","devicePixelRatio","arrayWithoutHoles","iterableToArray","nonIterableSpread","getIndexScale","getIndex","axis","computeScale","all","min","normalizeData","item","reduce","acc","key","filterNullValues","Object","coerceValue","Number","gt","other","lt","range","start","end","Array","repeat","_","index","clampToZero","zeroIfNotFinite","isFinite","generateVerticalGroupedBars","barWidth","yRef","formatValue","getColor","getTooltipLabel","xScale","yScale","margin","compare","getY","d","getHeight","cleanedData","forEach","domain","length","rawValue","barHeight","barData","hidden","push","left","top","generateHorizontalGroupedBars","xRef","getX","getWidth","generateGroupedBars","indexScaleConfig","hiddenIds","props","filter","includes","otherAxis","scaleSpec","clampMin","values","entry","k","Boolean","scale","bandwidth","params","flattenDeep","arr","some","isArray","concat","filterZerosIfLog","array","num","generateVerticalStackedBars","stackedData","stackedDataItem","generateHorizontalStackedBars","generateStackedBars","stack","offset","stackOffsetDiverging","getLegendDataForKeys","direction","getLegendLabel","getLegendDataForIndexes","getLegendData","legendLabel","getPropertyAccessor","useBar","valueFormat","useState","setHiddenIds","state","indexOf","usePropertyAccessor","getLabel","useValueFormatter","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelColor","generateBars","barsWithValue","shouldRenderBarLabel","legendData","find","legendsWithData","InnerBar","partialMargin","axisTop","axisRight","gridXValues","gridYValues","barAriaLabel","barAriaLabelledBy","barAriaDescribedBy","useMotionConfig","springConfig","config","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","transition","useTransition","enter","update","leave","immediate","commonProps","boundDefs","bindDefs","dataKey","targetKey","layerById","axes","grid","Fragment","layerContext","layer","Bar","renderWrapper","otherProps","findBarUnderCursor","nodes","node","isCursorInRect","isNumber","InnerBarCanvas","renderBar","ctx","fillStyle","strokeStyle","lineWidth","beginPath","radius","moveTo","lineTo","quadraticCurveTo","closePath","rect","stroke","textBaseline","textAlign","fillText","canvasRef","canvasEl","useRef","useComputedAnnotations","useEffect","current","getContext","background","fillRect","translate","line","strokeWidth","renderGridLinesToCanvas","renderAxesToCanvas","right","bottom","renderLegendToCanvas","containerWidth","containerHeight","renderAnnotationsToCanvas","save","handleMouseHover","getRelativeCursor","canvas","cursor","BarCanvas","forwardRef","ref","ResponsiveBar","ResponsiveBarCanvas"],"mappings":"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"}