{"version":3,"file":"nivo-bar.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/BarAnnotations.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/BarLegends.tsx","../src/BarItem.tsx","../src/BarTooltip.tsx","../src/props.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/compute/common.ts","../src/compute/grouped.ts","../src/compute/stacked.ts","../src/compute/legends.ts","../src/hooks.ts","../src/Bar.tsx","../src/BarCanvas.tsx","../src/ResponsiveBar.tsx","../src/ResponsiveBarCanvas.tsx"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(() => () => createElement(tooltip, { ...bar, ...data }), [\n        tooltip,\n        bar,\n        data,\n    ])\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'markers', 'legends', 'annotations'],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'legends', 'annotations'],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (computeScale(\n        indexScale,\n        { all: data.map(getIndex), min: 0, max: 0 },\n        size,\n        axis\n    ) as ScaleBand<string>).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: RawDatum[], keys: string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : ((arr as unknown) as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: string[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep((stackedData as unknown) as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport { uniqBy } from 'lodash'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useTheme, useValueFormatter, Margin } from '@nivo/core'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { defaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\n\nexport const useBar = <RawDatum extends BarDatum>({\n    indexBy = defaultProps.indexBy,\n    keys = defaultProps.keys,\n    label = defaultProps.label,\n    tooltipLabel = defaultProps.tooltipLabel,\n    valueFormat,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    borderColor = defaultProps.borderColor,\n    labelTextColor = defaultProps.labelTextColor,\n    groupMode = defaultProps.groupMode,\n    layout = defaultProps.layout,\n    reverse = defaultProps.reverse,\n    data,\n    minValue = defaultProps.minValue,\n    maxValue = defaultProps.maxValue,\n    margin,\n    width,\n    height,\n    padding = defaultProps.padding,\n    innerPadding = defaultProps.innerPadding,\n    valueScale = defaultProps.valueScale,\n    indexScale = defaultProps.indexScale,\n    initialHiddenIds = defaultProps.initialHiddenIds,\n    enableLabel = defaultProps.enableLabel,\n    labelSkipWidth = defaultProps.labelSkipWidth,\n    labelSkipHeight = defaultProps.labelSkipHeight,\n    legends = defaultProps.legends,\n    legendLabel,\n}: {\n    indexBy?: BarCommonProps<RawDatum>['indexBy']\n    label?: BarCommonProps<RawDatum>['label']\n    tooltipLabel?: BarCommonProps<RawDatum>['tooltipLabel']\n    valueFormat?: BarCommonProps<RawDatum>['valueFormat']\n    colors?: BarCommonProps<RawDatum>['colors']\n    colorBy?: BarCommonProps<RawDatum>['colorBy']\n    borderColor?: BarCommonProps<RawDatum>['borderColor']\n    labelTextColor?: BarCommonProps<RawDatum>['labelTextColor']\n    groupMode?: BarCommonProps<RawDatum>['groupMode']\n    layout?: BarCommonProps<RawDatum>['layout']\n    reverse?: BarCommonProps<RawDatum>['reverse']\n    data: DataProps<RawDatum>['data']\n    keys?: BarCommonProps<RawDatum>['keys']\n    minValue?: BarCommonProps<RawDatum>['minValue']\n    maxValue?: BarCommonProps<RawDatum>['maxValue']\n    margin: Margin\n    width: number\n    height: number\n    padding?: BarCommonProps<RawDatum>['padding']\n    innerPadding?: BarCommonProps<RawDatum>['innerPadding']\n    valueScale?: BarCommonProps<RawDatum>['valueScale']\n    indexScale?: BarCommonProps<RawDatum>['indexScale']\n    initialHiddenIds?: BarCommonProps<RawDatum>['initialHiddenIds']\n    enableLabel?: BarCommonProps<RawDatum>['enableLabel']\n    labelSkipWidth?: BarCommonProps<RawDatum>['labelSkipWidth']\n    labelSkipHeight?: BarCommonProps<RawDatum>['labelSkipHeight']\n    legends?: BarCommonProps<RawDatum>['legends']\n    legendLabel?: BarCommonProps<RawDatum>['legendLabel']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        borderColor,\n        theme\n    )\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        labelTextColor,\n        theme\n    )\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter(\n                    (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n                )\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n    }\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport { BarDatum, BarLayer, BarLayerId, BarSvgProps, ComputedBarDatumWithValue } from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { svgDefaultProps } from './props'\nimport { useTransition } from '@react-spring/web'\nimport { useBar } from './hooks'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel,\n    label,\n    labelSkipWidth,\n    labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? (xScale as any) : null}\n                yScale={enableGridY ? (yScale as any) : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            bars,\n            xScale,\n            yScale,\n        }),\n        [commonProps, margin, innerWidth, innerHeight, width, height, bars, xScale, yScale]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { BarCanvasLayer, BarCanvasProps, BarDatum, ComputedBarDatum } from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\n\ndeclare module 'react' {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => React.ReactElement | null\n    ): (props: P & React.RefAttributes<T>) => React.ReactElement | null\n}\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel,\n    label,\n    labelSkipWidth,\n    labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: any = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            margin,\n            innerWidth,\n            innerHeight,\n            width,\n            height,\n            bars,\n            xScale,\n            yScale,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            height,\n            innerHeight,\n            innerWidth,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            margin,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            bars,\n            xScale,\n            yScale,\n            tooltip,\n            width,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: xScale as any,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: yScale as any,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale as any,\n                    yScale: yScale as any,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: Omit<BarSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: Omit<BarCanvasProps<RawDatum>, 'height' | 'width'>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas width={width} height={height} {...props} ref={ref} />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n"],"names":["objectWithoutPropertiesLoose","defineProperty","BarAnnotations","bars","annotations","boundAnnotations","useAnnotations","data","getPosition","bar","x","width","y","height","getDimensions","size","Math","max","_jsx","map","annotation","i","Annotation","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","BarLegends","legends","toggleSerie","legend","BoxLegendSvg","dataFrom","undefined","BarItem","style","borderColor","color","labelColor","labelOpacity","labelX","labelY","transform","borderRadius","borderWidth","label","shouldRenderLabel","isInteractive","onClick","onMouseEnter","onMouseLeave","tooltip","isFocusable","ariaLabel","ariaLabelledBy","ariaDescribedBy","theme","useTheme","useTooltip","showTooltipFromEvent","showTooltipAt","hideTooltip","renderTooltip","useMemo","createElement","handleClick","useCallback","event","handleTooltip","handleMouseEnter","handleMouseLeave","handleFocus","absX","absY","handleBlur","_jsxs","animated","to","value","fill","labels","text","pointerEvents","BarTooltip","BasicTooltip","formattedValue","defaultProps","indexBy","keys","groupMode","layout","reverse","minValue","maxValue","valueScale","type","indexScale","round","padding","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","from","colorBy","colors","scheme","tooltipLabel","datum","id","indexValue","initialHiddenIds","markers","svgDefaultProps","layers","barComponent","defs","animate","motionConfig","role","canvasDefaultProps","pixelRatio","window","devicePixelRatio","arrayWithoutHoles","iterableToArray","nonIterableSpread","getIndexScale","getIndex","axis","computeScale","all","min","normalizeData","item","reduce","acc","key","filterNullValues","Object","coerceValue","Number","gt","other","lt","range","start","end","Array","repeat","_","index","clampToZero","zeroIfNotFinite","isFinite","generateVerticalGroupedBars","barWidth","yRef","formatValue","getColor","getTooltipLabel","xScale","yScale","margin","compare","getY","d","getHeight","cleanedData","forEach","domain","length","rawValue","barHeight","barData","hidden","push","left","top","generateHorizontalGroupedBars","xRef","getX","getWidth","generateGroupedBars","indexScaleConfig","hiddenIds","props","filter","includes","otherAxis","scaleSpec","clampMin","values","entry","k","Boolean","scale","bandwidth","params","flattenDeep","arr","some","isArray","concat","filterZerosIfLog","array","num","generateVerticalStackedBars","stackedData","stackedDataItem","generateHorizontalStackedBars","generateStackedBars","stack","offset","stackOffsetDiverging","getLegendDataForKeys","direction","getLegendLabel","getLegendDataForIndexes","getLegendData","legendLabel","getPropertyAccessor","useBar","valueFormat","useState","setHiddenIds","state","indexOf","usePropertyAccessor","getLabel","useValueFormatter","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelColor","generateBars","barsWithValue","shouldRenderBarLabel","legendData","find","legendsWithData","InnerBar","partialMargin","axisTop","axisRight","gridXValues","gridYValues","barAriaLabel","barAriaLabelledBy","barAriaDescribedBy","useMotionConfig","springConfig","config","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","transition","useTransition","enter","update","leave","immediate","commonProps","boundDefs","bindDefs","dataKey","targetKey","layerById","axes","grid","Axes","Fragment","Grid","CartesianMarkers","layerContext","SvgWrapper","layer","Bar","renderWrapper","otherProps","Container","findBarUnderCursor","nodes","node","isCursorInRect","isNumber","InnerBarCanvas","renderBar","ctx","fillStyle","strokeStyle","lineWidth","beginPath","radius","moveTo","lineTo","quadraticCurveTo","closePath","rect","stroke","textBaseline","textAlign","fillText","canvasRef","canvasEl","useRef","useComputedAnnotations","useEffect","current","getContext","background","fillRect","translate","line","strokeWidth","renderGridLinesToCanvas","renderAxesToCanvas","right","bottom","renderLegendToCanvas","containerWidth","containerHeight","renderAnnotationsToCanvas","save","handleMouseHover","getRelativeCursor","canvas","cursor","BarCanvas","forwardRef","ref","ResponsiveBar","ResponsiveWrapper","ResponsiveBarCanvas"],"mappings":";;;;;;;;EAAe,SAAS,6BAA6B,CAAC,MAAM,EAAE,QAAQ,EAAE;EACxE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;EAChC,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;EAClB,EAAE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACvC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;EAEb,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC1C,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;EACxB,IAAI,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;EAC7C,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;EAC9B,GAAG;EAEH,EAAE,OAAO,MAAM,CAAC;EAChB;;ECZe,SAAS,wBAAwB,CAAC,MAAM,EAAE,QAAQ,EAAE;EACnE,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC;EAChC,EAAE,IAAI,MAAM,GAAGA,6BAA4B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;EAC9D,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;EAEb,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;EACpC,IAAI,IAAI,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;EAEhE,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAClD,MAAM,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,SAAS;EAC/C,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,SAAS;EAC7E,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;EAChC,KAAK;EACL,GAAG;EAEH,EAAE,OAAO,MAAM,CAAC;EAChB;;EClBe,SAAS,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;EACzD,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;EAClB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;EACpC,MAAM,KAAK,EAAE,KAAK;EAClB,MAAM,UAAU,EAAE,IAAI;EACtB,MAAM,YAAY,EAAE,IAAI;EACxB,MAAM,QAAQ,EAAE,IAAI;EACpB,KAAK,CAAC,CAAC;EACP,GAAG,MAAM;EACT,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;EACrB,GAAG;EAEH,EAAE,OAAO,GAAG,CAAC;EACb;;ECXA,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE;EACzC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAEjC,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;EACpC,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;EACvD,IAAI,IAAI,cAAc,EAAE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;EAChE,MAAM,OAAO,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC;EACrE,KAAK,CAAC,CAAC;EACP,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;EACnC,GAAG;EAEH,EAAE,OAAO,IAAI,CAAC;EACd,CAAC;EAEc,SAAS,cAAc,CAAC,MAAM,EAAE;EAC/C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC7C,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;EAE1D,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;EACf,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;EAC3D,QAAQC,eAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;EACjD,OAAO,CAAC,CAAC;EACT,KAAK,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE;EACjD,MAAM,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC;EAChF,KAAK,MAAM;EACX,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;EACrD,QAAQ,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;EACzF,OAAO,CAAC,CAAC;EACT,KAAK;EACL,GAAG;EAEH,EAAE,OAAO,MAAM,CAAC;EAChB;;EC/BO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAqE;EAAA,MAAvDC,IAAuD,QAAvDA,IAAuD;EAAA,MAAjDC,aAAiD,QAAjDA,WAAiD;EAC/F,MAAMC,gBAAgB,GAAGC,0BAAc,CAAC;EACpCC,IAAAA,IAAI,EAAEJ,IAD8B;EAEpCC,IAAAA,WAAW,EAAXA,aAFoC;EAGpCI,IAAAA,WAAW,EAAE,qBAAAC,GAAG;EAAA,aAAK;EACjBC,QAAAA,CAAC,EAAED,GAAG,CAACC,CAAJ,GAAQD,GAAG,CAACE,KAAJ,GAAY,CADN;EAEjBC,QAAAA,CAAC,EAAEH,GAAG,CAACG,CAAJ,GAAQH,GAAG,CAACI,MAAJ,GAAa;EAFP,OAAL;EAAA,KAHoB;EAOpCC,IAAAA,aAAa,EAAE;EAAA,UAAGD,MAAH,SAAGA,MAAH;EAAA,UAAWF,KAAX,SAAWA,KAAX;EAAA,aAAwB;EACnCA,QAAAA,KAAK,EAALA,KADmC;EAEnCE,QAAAA,MAAM,EAANA,MAFmC;EAGnCE,QAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,CAASN,KAAT,EAAgBE,MAAhB;EAH6B,OAAxB;EAAA;EAPqB,GAAD,CAAvC;EAcA,SACIK;EAAA,cACKb,gBAAgB,CAACc,GAAjB,CAAqB,UAACC,UAAD,EAAaC,CAAb;EAAA,aAClBH,eAACI,sBAAD,qBAAwBF,UAAxB,GAAiBC,CAAjB,CADkB;EAAA,KAArB;EADL,IADJ;EAOH,CAtBM;;ECHQ,SAAS,eAAe,CAAC,GAAG,EAAE;EAC7C,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC;EACrC;;ECFe,SAAS,qBAAqB,CAAC,GAAG,EAAE,CAAC,EAAE;EACtD,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,EAAE,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO;EACjF,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC;EAChB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;EAChB,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;EACjB,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC;EAErB,EAAE,IAAI;EACN,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE;EACxF,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;EAE1B,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM;EACxC,KAAK;EACL,GAAG,CAAC,OAAO,GAAG,EAAE;EAChB,IAAI,EAAE,GAAG,IAAI,CAAC;EACd,IAAI,EAAE,GAAG,GAAG,CAAC;EACb,GAAG,SAAS;EACZ,IAAI,IAAI;EACR,MAAM,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;EACtD,KAAK,SAAS;EACd,MAAM,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC;EACvB,KAAK;EACL,GAAG;EAEH,EAAE,OAAO,IAAI,CAAC;EACd;;ECzBe,SAAS,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE;EACpD,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;EAExD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;EACvD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACrB,GAAG;EAEH,EAAE,OAAO,IAAI,CAAC;EACd;;ECPe,SAAS,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE;EAC/D,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO;EACjB,EAAE,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,OAAOE,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;EAChE,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACzD,EAAE,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;EAC9D,EAAE,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvD,EAAE,IAAI,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAOA,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;EAClH;;ECRe,SAAS,gBAAgB,GAAG;EAC3C,EAAE,MAAM,IAAI,SAAS,CAAC,2IAA2I,CAAC,CAAC;EACnK;;ECEe,SAAS,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE;EAC/C,EAAE,OAAOC,eAAc,CAAC,GAAG,CAAC,IAAIC,qBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,2BAA0B,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,gBAAe,EAAE,CAAC;EACxH;;ECIO,IAAMC,UAAU,GAAG,SAAbA,UAAa;EAAA,MAAGjB,KAAH,QAAGA,KAAH;EAAA,MAAUE,MAAV,QAAUA,MAAV;EAAA,MAAkBgB,SAAlB,QAAkBA,OAAlB;EAAA,MAA2BC,WAA3B,QAA2BA,WAA3B;EAAA,SACtBZ;EAAA,cACKW,SAAO,CAACV,GAAR,CAAY,iBAAiBE,CAAjB;EAAA;;EAAA;EAAA,UAAEU,MAAF;EAAA,UAAUxB,IAAV;;EAAA,aACTW,eAACc,oBAAD,oCAEQD,MAFR;EAGI,QAAA,cAAc,EAAEpB,KAHpB;EAII,QAAA,eAAe,EAAEE,MAJrB;EAKI,QAAA,IAAI,kBAAEkB,MAAM,CAACxB,IAAT,uDAAiBA,IALzB;EAMI,QAAA,WAAW,EACPwB,MAAM,CAACD,WAAP,IAAsBC,MAAM,CAACE,QAAP,KAAoB,MAA1C,GAAmDH,WAAnD,GAAiEI;EAPzE,UACSb,CADT,CADS;EAAA,KAAZ;EADL,IADsB;EAAA,CAAnB;;MCJMc,OAAO,GAAG,SAAVA,OAAU,OAgCO;EAAA;;EAAA,sBA/B1B1B,GA+B0B;EAAA,MA/BnBF,IA+BmB,YA/BnBA,IA+BmB;EAAA,MA/BVE,GA+BU;EAAA,wBA7B1B2B,KA6B0B;EAAA,MA5BtBC,WA4BsB,cA5BtBA,WA4BsB;EAAA,MA3BtBC,KA2BsB,cA3BtBA,KA2BsB;EAAA,MA1BtBzB,MA0BsB,cA1BtBA,MA0BsB;EAAA,MAzBtB0B,UAyBsB,cAzBtBA,UAyBsB;EAAA,MAxBtBC,YAwBsB,cAxBtBA,YAwBsB;EAAA,MAvBtBC,MAuBsB,cAvBtBA,MAuBsB;EAAA,MAtBtBC,MAsBsB,cAtBtBA,MAsBsB;EAAA,MArBtBC,SAqBsB,cArBtBA,SAqBsB;EAAA,MApBtBhC,KAoBsB,cApBtBA,KAoBsB;EAAA,MAjB1BiC,YAiB0B,QAjB1BA,YAiB0B;EAAA,MAhB1BC,WAgB0B,QAhB1BA,WAgB0B;EAAA,MAd1BC,KAc0B,QAd1BA,KAc0B;EAAA,MAb1BC,iBAa0B,QAb1BA,iBAa0B;EAAA,MAX1BC,aAW0B,QAX1BA,aAW0B;EAAA,MAV1BC,OAU0B,QAV1BA,OAU0B;EAAA,MAT1BC,YAS0B,QAT1BA,YAS0B;EAAA,MAR1BC,YAQ0B,QAR1BA,YAQ0B;EAAA,MAN1BC,SAM0B,QAN1BA,OAM0B;EAAA,MAJ1BC,WAI0B,QAJ1BA,WAI0B;EAAA,MAH1BC,SAG0B,QAH1BA,SAG0B;EAAA,MAF1BC,cAE0B,QAF1BA,cAE0B;EAAA,MAD1BC,eAC0B,QAD1BA,eAC0B;;EAC1B,MAAMC,KAAK,GAAGC,aAAQ,EAAtB;;EAD0B,oBAEmCC,kBAAU,EAF7C;EAAA,MAElBC,oBAFkB,eAElBA,oBAFkB;EAAA,MAEIC,aAFJ,eAEIA,aAFJ;EAAA,MAEmBC,WAFnB,eAEmBA,WAFnB;;EAI1B,MAAMC,aAAa,GAAGC,aAAO,CAAC;EAAA,WAAM;EAAA,aAAMC,mBAAa,CAACb,SAAD,oCAAe3C,GAAf,GAAuBF,IAAvB,EAAnB;EAAA,KAAN;EAAA,GAAD,EAA0D,CACnF6C,SADmF,EAEnF3C,GAFmF,EAGnFF,IAHmF,CAA1D,CAA7B;EAMA,MAAM2D,WAAW,GAAGC,iBAAW,CAC3B,UAACC,KAAD,EAAuC;EACnCnB,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;EAAKX,MAAAA,KAAK,EAAE7B,GAAG,CAAC6B;EAAhB,OAA0B/B,IAA1B,GAAkC6D,KAAlC,CAAP;EACH,GAH0B,EAI3B,CAAC3D,GAAD,EAAMF,IAAN,EAAY0C,OAAZ,CAJ2B,CAA/B;EAMA,MAAMoB,aAAa,GAAGF,iBAAW,CAC7B,UAACC,KAAD;EAAA,WAAuCR,oBAAoB,CAACG,aAAa,EAAd,EAAkBK,KAAlB,CAA3D;EAAA,GAD6B,EAE7B,CAACR,oBAAD,EAAuBG,aAAvB,CAF6B,CAAjC;EAIA,MAAMO,gBAAgB,GAAGH,iBAAW,CAChC,UAACC,KAAD,EAAuC;EACnClB,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAG3C,IAAH,EAAS6D,KAAT,CAAZ;EACAR,IAAAA,oBAAoB,CAACG,aAAa,EAAd,EAAkBK,KAAlB,CAApB;EACH,GAJ+B,EAKhC,CAAC7D,IAAD,EAAO2C,YAAP,EAAqBU,oBAArB,EAA2CG,aAA3C,CALgC,CAApC;EAOA,MAAMQ,gBAAgB,GAAGJ,iBAAW,CAChC,UAACC,KAAD,EAAuC;EACnCjB,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAG5C,IAAH,EAAS6D,KAAT,CAAZ;EACAN,IAAAA,WAAW;EACd,GAJ+B,EAKhC,CAACvD,IAAD,EAAOuD,WAAP,EAAoBX,YAApB,CALgC,CAApC;EASA,MAAMqB,WAAW,GAAGL,iBAAW,CAAC,YAAM;EAClCN,IAAAA,aAAa,CAACE,aAAa,EAAd,EAAkB,CAACtD,GAAG,CAACgE,IAAJ,GAAWhE,GAAG,CAACE,KAAJ,GAAY,CAAxB,EAA2BF,GAAG,CAACiE,IAA/B,CAAlB,CAAb;EACH,GAF8B,EAE5B,CAACb,aAAD,EAAgBE,aAAhB,EAA+BtD,GAA/B,CAF4B,CAA/B;EAGA,MAAMkE,UAAU,GAAGR,iBAAW,CAAC,YAAM;EACjCL,IAAAA,WAAW;EACd,GAF6B,EAE3B,CAACA,WAAD,CAF2B,CAA9B;EAIA,SACIc,gBAACC,YAAD,CAAU,CAAV;EAAY,IAAA,SAAS,EAAElC,SAAvB;EAAA,eACIzB,eAAC2D,YAAD,CAAU,IAAV;EACI,MAAA,KAAK,EAAEC,MAAE,CAACnE,KAAD,EAAQ,UAAAoE,KAAK;EAAA,eAAI/D,IAAI,CAACC,GAAL,CAAS8D,KAAT,EAAgB,CAAhB,CAAJ;EAAA,OAAb,CADb;EAEI,MAAA,MAAM,EAAED,MAAE,CAACjE,MAAD,EAAS,UAAAkE,KAAK;EAAA,eAAI/D,IAAI,CAACC,GAAL,CAAS8D,KAAT,EAAgB,CAAhB,CAAJ;EAAA,OAAd,CAFd;EAGI,MAAA,EAAE,EAAEnC,YAHR;EAII,MAAA,EAAE,EAAEA,YAJR;EAKI,MAAA,IAAI,gBAAErC,IAAI,CAACyE,IAAP,mDAAe1C,KALvB;EAMI,MAAA,WAAW,EAAEO,WANjB;EAOI,MAAA,MAAM,EAAER,WAPZ;EAQI,MAAA,SAAS,EAAEgB,WARf;EASI,MAAA,QAAQ,EAAEA,WAAW,GAAG,CAAH,GAAOnB,SAThC;EAUI,oBAAYoB,SAAS,GAAGA,SAAS,CAAC/C,IAAD,CAAZ,GAAqB2B,SAV9C;EAWI,yBAAiBqB,cAAc,GAAGA,cAAc,CAAChD,IAAD,CAAjB,GAA0B2B,SAX7D;EAYI,0BAAkBsB,eAAe,GAAGA,eAAe,CAACjD,IAAD,CAAlB,GAA2B2B,SAZhE;EAaI,MAAA,YAAY,EAAEc,aAAa,GAAGsB,gBAAH,GAAsBpC,SAbrD;EAcI,MAAA,WAAW,EAAEc,aAAa,GAAGqB,aAAH,GAAmBnC,SAdjD;EAeI,MAAA,YAAY,EAAEc,aAAa,GAAGuB,gBAAH,GAAsBrC,SAfrD;EAgBI,MAAA,OAAO,EAAEc,aAAa,GAAGkB,WAAH,GAAiBhC,SAhB3C;EAiBI,MAAA,OAAO,EAAEc,aAAa,IAAIK,WAAjB,GAA+BmB,WAA/B,GAA6CtC,SAjB1D;EAkBI,MAAA,MAAM,EAAEc,aAAa,IAAIK,WAAjB,GAA+BsB,UAA/B,GAA4CzC;EAlBxD,MADJ,EAqBKa,iBAAiB,IACd7B,eAAC2D,YAAD,CAAU,IAAV;EACI,MAAA,CAAC,EAAEpC,MADP;EAEI,MAAA,CAAC,EAAEC,MAFP;EAGI,MAAA,UAAU,EAAC,QAHf;EAII,MAAA,gBAAgB,EAAC,SAJrB;EAKI,MAAA,WAAW,EAAEF,YALjB;EAMI,MAAA,KAAK,oCACEiB,KAAK,CAACwB,MAAN,CAAaC,IADf;EAEDC,QAAAA,aAAa,EAAE,MAFd;EAGDH,QAAAA,IAAI,EAAEzC;EAHL,QANT;EAAA,gBAYKO;EAZL,MAtBR;EAAA,IADJ;EAwCH;;ECtHM,IAAMsC,UAAU,GAAG,SAAbA,UAAa,OAAqE;EAAA,MAAvD9C,KAAuD,QAAvDA,KAAuD;EAAA,MAAhDQ,KAAgD,QAAhDA,KAAgD;EAAA,MAAtCvC,IAAsC;;EAC3F,SAAOW,eAACmE,oBAAD;EAAc,IAAA,EAAE,EAAEvC,KAAlB;EAAyB,IAAA,KAAK,EAAEvC,IAAI,CAAC+E,cAArC;EAAqD,IAAA,UAAU,EAAE,IAAjE;EAAuE,IAAA,KAAK,EAAEhD;EAA9E,IAAP;EACH,CAFM;;;MCGMiD,YAAY,GAAG;EACxBC,EAAAA,OAAO,EAAE,IADe;EAExBC,EAAAA,IAAI,EAAE,CAAC,OAAD,CAFkB;EAIxBC,EAAAA,SAAS,EAAE,SAJa;EAKxBC,EAAAA,MAAM,EAAE,UALgB;EAMxBC,EAAAA,OAAO,EAAE,KANe;EAQxBC,EAAAA,QAAQ,EAAE,MARc;EASxBC,EAAAA,QAAQ,EAAE,MATc;EAWxBC,EAAAA,UAAU,EAAE;EAAEC,IAAAA,IAAI,EAAE;EAAR,GAXY;EAYxBC,EAAAA,UAAU,EAAE;EAAED,IAAAA,IAAI,EAAE,MAAR;EAAgBE,IAAAA,KAAK,EAAE;EAAvB,GAZY;EAcxBC,EAAAA,OAAO,EAAE,GAde;EAexBC,EAAAA,YAAY,EAAE,CAfU;EAiBxBC,EAAAA,UAAU,EAAE,EAjBY;EAkBxBC,EAAAA,QAAQ,EAAE,EAlBc;EAmBxBC,EAAAA,WAAW,EAAE,KAnBW;EAoBxBC,EAAAA,WAAW,EAAE,IApBW;EAsBxBC,EAAAA,WAAW,EAAE,IAtBW;EAuBxB3D,EAAAA,KAAK,EAAE,gBAvBiB;EAwBxB4D,EAAAA,cAAc,EAAE,CAxBQ;EAyBxBC,EAAAA,eAAe,EAAE,CAzBO;EA0BxBC,EAAAA,cAAc,EAAE;EAAEC,IAAAA,IAAI,EAAE,OAAR;EAAiBpD,IAAAA,KAAK,EAAE;EAAxB,GA1BQ;EA4BxBqD,EAAAA,OAAO,EAAE,IA5Be;EA6BxBC,EAAAA,MAAM,EAAE;EAAEC,IAAAA,MAAM,EAAE;EAAV,GA7BgB;EA+BxBpE,EAAAA,YAAY,EAAE,CA/BU;EAgCxBC,EAAAA,WAAW,EAAE,CAhCW;EAiCxBR,EAAAA,WAAW,EAAE;EAAEwE,IAAAA,IAAI,EAAE;EAAR,GAjCW;EAmCxB7D,EAAAA,aAAa,EAAE,IAnCS;EAoCxBI,EAAAA,OAAO,EAAEgC,UApCe;EAqCxB6B,EAAAA,YAAY,EAAE,sBAAWC,KAAX;EAAA,qBAAiDA,KAAK,CAACC,EAAvD,gBAA+DD,KAAK,CAACE,UAArE;EAAA,GArCU;EAuCxBvF,EAAAA,OAAO,EAAE,EAvCe;EAwCxBwF,EAAAA,gBAAgB,EAAE,EAxCM;EAyCxBjH,EAAAA,WAAW,EAAE,EAzCW;EA0CxBkH,EAAAA,OAAO,EAAE;EA1Ce;MA6CfC,eAAe,qCACrBhC,YADqB;EAExBiC,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,SAAzB,EAAoC,SAApC,EAA+C,aAA/C,CAFgB;EAGxBC,EAAAA,YAAY,EAAEtF,OAHU;EAKxBuF,EAAAA,IAAI,EAAE,EALkB;EAMxB1C,EAAAA,IAAI,EAAE,EANkB;EAQxB2C,EAAAA,OAAO,EAAE,IARe;EASxBC,EAAAA,YAAY,EAAE,SATU;EAWxBC,EAAAA,IAAI,EAAE,KAXkB;EAYxBxE,EAAAA,WAAW,EAAE;EAZW;MAefyE,kBAAkB,qCACxBvC,YADwB;EAE3BiC,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,SAAzB,EAAoC,aAApC,CAFmB;EAI3BO,EAAAA,UAAU,EAAE,OAAOC,MAAP,KAAkB,WAAlB,4BAAgCA,MAAM,CAACC,gBAAvC,yEAA2D,CAA3D,GAA+D;EAJhD;;ECjEhB,SAAS,kBAAkB,CAAC,GAAG,EAAE;EAChD,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO1G,iBAAgB,CAAC,GAAG,CAAC,CAAC;EACvD;;ECHe,SAAS,gBAAgB,CAAC,IAAI,EAAE;EAC/C,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAChG;;ECFe,SAAS,kBAAkB,GAAG;EAC7C,EAAE,MAAM,IAAI,SAAS,CAAC,sIAAsI,CAAC,CAAC;EAC9J;;ECEe,SAAS,kBAAkB,CAAC,GAAG,EAAE;EAChD,EAAE,OAAO2G,kBAAiB,CAAC,GAAG,CAAC,IAAIC,gBAAe,CAAC,GAAG,CAAC,IAAIzG,2BAA0B,CAAC,GAAG,CAAC,IAAI0G,kBAAiB,EAAE,CAAC;EAClH;;ECDO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CACzB9H,IADyB,EAEzB+H,QAFyB,EAGzBnC,OAHyB,EAIzBF,UAJyB,EAKzBlF,IALyB,EAMzBwH,IANyB,EAOxB;EACD,SAAQC,mBAAY,CAChBvC,UADgB,EAEhB;EAAEwC,IAAAA,GAAG,EAAElI,IAAI,CAACY,GAAL,CAASmH,QAAT,CAAP;EAA2BI,IAAAA,GAAG,EAAE,CAAhC;EAAmCzH,IAAAA,GAAG,EAAE;EAAxC,GAFgB,EAGhBF,IAHgB,EAIhBwH,IAJgB,CAAb,CAKiBpC,OALjB,CAKyBA,OALzB,CAAP;EAMH,CAdM;EAmBA,IAAMwC,aAAa,GAAG,SAAhBA,aAAgB,CAAWpI,IAAX,EAA6BkF,IAA7B;EAAA,SACzBlF,IAAI,CAACY,GAAL,CACI,UAAAyH,IAAI;EAAA,6CAEOnD,IAAI,CAACoD,MAAL,CAAqC,UAACC,GAAD,EAAMC,GAAN,EAAc;EAClDD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAW,IAAX;EACA,aAAOD,GAAP;EACH,KAHE,EAGA,EAHA,CAFP,GAMOF,IANP;EAAA,GADR,CADyB;EAAA,CAAtB;EAYA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAA2CzI,IAA3C;EAAA,SAC5B0I,MAAM,CAACxD,IAAP,CAAYlF,IAAZ,EAAkBsI,MAAlB,CAAkD,UAACC,GAAD,EAAMC,GAAN,EAAc;EAC5D,QAAIxI,IAAI,CAACwI,GAAD,CAAR,EAAe;EACXD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWxI,IAAI,CAACwI,GAAD,CAAf;EACH;;EACD,WAAOD,GAAP;EACH,GALD,EAKG,EALH,CAD4B;EAAA,CAAzB;EAQA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAInE,KAAJ;EAAA,SAAiB,CAACA,KAAD,EAAQoE,MAAM,CAACpE,KAAD,CAAd,CAAjB;EAAA,CAApB;;ECzBP,IAAMqE,EAAE,GAAG,SAALA,EAAK,CAACrE,KAAD,EAAgBsE,KAAhB;EAAA,SAAkCtE,KAAK,GAAGsE,KAA1C;EAAA,CAAX;;EACA,IAAMC,EAAE,GAAG,SAALA,EAAK,CAACvE,KAAD,EAAgBsE,KAAhB;EAAA,SAAkCtE,KAAK,GAAGsE,KAA1C;EAAA,CAAX;;EAEA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAgBC,GAAhB;EAAA,SACVC,KAAK,CAAC7C,IAAN,CAAW,IAAI8C,MAAJ,CAAWF,GAAG,GAAGD,KAAjB,CAAX,EAAoC,UAACI,CAAD,EAAIC,KAAJ;EAAA,WAAcL,KAAK,GAAGK,KAAtB;EAAA,GAApC,CADU;EAAA,CAAd;;EAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAC/E,KAAD;EAAA,SAAoBqE,EAAE,CAACrE,KAAD,EAAQ,CAAR,CAAF,GAAe,CAAf,GAAmBA,KAAvC;EAAA,CAApB;;EACA,IAAMgF,eAAe,GAAG,SAAlBA,eAAkB,CAAChF,KAAD;EAAA,SAAoBiF,QAAQ,CAACjF,KAAD,CAAR,GAAkBA,KAAlB,GAA0B,CAA9C;EAAA,CAAxB;;EAKA,IAAMkF,2BAA2B,GAAG,SAA9BA,2BAA8B,OAahCC,QAbgC,EAchCtE,OAdgC,EAehCuE,IAfgC,EAgBD;EAAA,MAd3B5J,IAc2B,QAd3BA,IAc2B;EAAA,MAb3B6J,WAa2B,QAb3BA,WAa2B;EAAA,MAZ3BC,QAY2B,QAZ3BA,QAY2B;EAAA,MAX3B/B,QAW2B,QAX3BA,QAW2B;EAAA,MAV3BgC,eAU2B,QAV3BA,eAU2B;EAAA,+BAT3BlE,YAS2B;EAAA,MAT3BA,YAS2B,kCATZ,CASY;EAAA,MAR3BX,IAQ2B,QAR3BA,IAQ2B;EAAA,MAP3B8E,MAO2B,QAP3BA,MAO2B;EAAA,MAN3BC,MAM2B,QAN3BA,MAM2B;EAAA,MAL3BC,MAK2B,QAL3BA,MAK2B;EAC/B,MAAMC,OAAO,GAAG9E,OAAO,GAAG0D,EAAH,GAAQF,EAA/B;;EACA,MAAMuB,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD;EAAA;;EAAA,WAAgBF,OAAO,CAACE,CAAD,EAAI,CAAJ,CAAP,cAAgBJ,MAAM,CAACI,CAAD,CAAtB,6CAA6B,CAA7B,GAAiCT,IAAjD;EAAA,GAAb;;EACA,MAAMU,SAAS,GAAG,SAAZA,SAAY,CAACD,CAAD,EAAYhK,CAAZ;EAAA;;EAAA,WAA2B8J,OAAO,CAACE,CAAD,EAAI,CAAJ,CAAP,GAAgBT,IAAI,GAAGvJ,CAAvB,GAA2B,aAAC4J,MAAM,CAACI,CAAD,CAAP,+CAAc,CAAd,IAAmBT,IAAzE;EAAA,GAAlB;;EACA,MAAMW,WAAW,GAAGvK,IAAI,CAACY,GAAL,CAAS6H,gBAAT,CAApB;EAEA,MAAM7I,IAAkC,GAAG,EAA3C;EACAsF,EAAAA,IAAI,CAACsF,OAAL,CAAa,UAAChC,GAAD,EAAM1H,CAAN;EAAA,WACTkI,KAAK,CAAC,CAAD,EAAIgB,MAAM,CAACS,MAAP,GAAgBC,MAApB,CAAL,CAAiCF,OAAjC,CAAyC,UAAAlB,KAAK,EAAI;EAAA;;EAAA,yBACpBX,WAAW,CAAC3I,IAAI,CAACsJ,KAAD,CAAJ,CAAYd,GAAZ,CAAD,CADS;EAAA;EAAA,UACvCmC,QADuC;EAAA,UAC7BnG,KAD6B;;EAE9C,UAAMqC,UAAU,GAAGkB,QAAQ,CAAC/H,IAAI,CAACsJ,KAAD,CAAL,CAA3B;EACA,UAAMnJ,CAAC,GAAG,YAAC6J,MAAM,CAACnD,UAAD,CAAP,6CAAuB,CAAvB,IAA4B8C,QAAQ,GAAG7I,CAAvC,GAA2C+E,YAAY,GAAG/E,CAApE;EACA,UAAMT,CAAC,GAAG+J,IAAI,CAAC5F,KAAD,CAAd;EACA,UAAMoG,SAAS,GAAGN,SAAS,CAAC9F,KAAD,EAAQnE,CAAR,CAA3B;EACA,UAAMwK,OAAgC,GAAG;EACrCjE,QAAAA,EAAE,EAAE4B,GADiC;EAErChE,QAAAA,KAAK,EAAEmG,QAAQ,KAAK,IAAb,GAAoBA,QAApB,GAA+BnG,KAFD;EAGrCO,QAAAA,cAAc,EAAE8E,WAAW,CAACrF,KAAD,CAHU;EAIrCsG,QAAAA,MAAM,EAAE,KAJ6B;EAKrCxB,QAAAA,KAAK,EAALA,KALqC;EAMrCzC,QAAAA,UAAU,EAAVA,UANqC;EAOrC7G,QAAAA,IAAI,EAAEuK,WAAW,CAACjB,KAAD;EAPoB,OAAzC;EAUA1J,MAAAA,IAAI,CAACmL,IAAL,CAAU;EACNvC,QAAAA,GAAG,YAAKA,GAAL,cAAYqC,OAAO,CAAChE,UAApB,CADG;EAENyC,QAAAA,KAAK,EAAE1J,IAAI,CAAC8K,MAFN;EAGN1K,QAAAA,IAAI,EAAE6K,OAHA;EAIN1K,QAAAA,CAAC,EAADA,CAJM;EAKNE,QAAAA,CAAC,EAADA,CALM;EAMN6D,QAAAA,IAAI,EAAEgG,MAAM,CAACc,IAAP,GAAc7K,CANd;EAONgE,QAAAA,IAAI,EAAE+F,MAAM,CAACe,GAAP,GAAa5K,CAPb;EAQND,QAAAA,KAAK,EAAEuJ,QARD;EASNrJ,QAAAA,MAAM,EAAEsK,SATF;EAUN7I,QAAAA,KAAK,EAAE+H,QAAQ,CAACe,OAAD,CAVT;EAWNtI,QAAAA,KAAK,EAAEwH,eAAe,CAACc,OAAD;EAXhB,OAAV;EAaH,KA7BD,CADS;EAAA,GAAb;EAiCA,SAAOjL,IAAP;EACH,CAzDD;;EA8DA,IAAMsL,6BAA6B,GAAG,SAAhCA,6BAAgC,QAalCN,SAbkC,EAclCvF,OAdkC,EAelC8F,IAfkC,EAgBH;EAAA,MAd3BnL,IAc2B,SAd3BA,IAc2B;EAAA,MAb3B6J,WAa2B,SAb3BA,WAa2B;EAAA,MAZ3B9B,QAY2B,SAZ3BA,QAY2B;EAAA,MAX3B+B,QAW2B,SAX3BA,QAW2B;EAAA,MAV3BC,eAU2B,SAV3BA,eAU2B;EAAA,MAT3B7E,IAS2B,SAT3BA,IAS2B;EAAA,iCAR3BW,YAQ2B;EAAA,MAR3BA,YAQ2B,mCARZ,CAQY;EAAA,MAP3BmE,MAO2B,SAP3BA,MAO2B;EAAA,MAN3BC,MAM2B,SAN3BA,MAM2B;EAAA,MAL3BC,MAK2B,SAL3BA,MAK2B;EAC/B,MAAMC,OAAO,GAAG9E,OAAO,GAAG0D,EAAH,GAAQF,EAA/B;;EACA,MAAMuC,IAAI,GAAG,SAAPA,IAAO,CAACf,CAAD;EAAA;;EAAA,WAAgBF,OAAO,CAACE,CAAD,EAAI,CAAJ,CAAP,GAAgBc,IAAhB,eAAuBnB,MAAM,CAACK,CAAD,CAA7B,+CAAoC,CAApD;EAAA,GAAb;;EACA,MAAMgB,QAAQ,GAAG,SAAXA,QAAW,CAAChB,CAAD,EAAYlK,CAAZ;EAAA;;EAAA,WAA2BgK,OAAO,CAACE,CAAD,EAAI,CAAJ,CAAP,GAAgB,aAACL,MAAM,CAACK,CAAD,CAAP,+CAAc,CAAd,IAAmBc,IAAnC,GAA0CA,IAAI,GAAGhL,CAA5E;EAAA,GAAjB;;EACA,MAAMoK,WAAW,GAAGvK,IAAI,CAACY,GAAL,CAAS6H,gBAAT,CAApB;EAEA,MAAM7I,IAAkC,GAAG,EAA3C;EACAsF,EAAAA,IAAI,CAACsF,OAAL,CAAa,UAAChC,GAAD,EAAM1H,CAAN;EAAA,WACTkI,KAAK,CAAC,CAAD,EAAIiB,MAAM,CAACQ,MAAP,GAAgBC,MAApB,CAAL,CAAiCF,OAAjC,CAAyC,UAAAlB,KAAK,EAAI;EAAA;;EAAA,0BACpBX,WAAW,CAAC3I,IAAI,CAACsJ,KAAD,CAAJ,CAAYd,GAAZ,CAAD,CADS;EAAA;EAAA,UACvCmC,QADuC;EAAA,UAC7BnG,KAD6B;;EAE9C,UAAMqC,UAAU,GAAGkB,QAAQ,CAAC/H,IAAI,CAACsJ,KAAD,CAAL,CAA3B;EACA,UAAMnJ,CAAC,GAAGiL,IAAI,CAAC5G,KAAD,CAAd;EACA,UAAMnE,CAAC,GAAG,aAAC4J,MAAM,CAACpD,UAAD,CAAP,+CAAuB,CAAvB,IAA4B+D,SAAS,GAAG9J,CAAxC,GAA4C+E,YAAY,GAAG/E,CAArE;EACA,UAAM6I,QAAQ,GAAG0B,QAAQ,CAAC7G,KAAD,EAAQrE,CAAR,CAAzB;EACA,UAAM0K,OAAgC,GAAG;EACrCjE,QAAAA,EAAE,EAAE4B,GADiC;EAErChE,QAAAA,KAAK,EAAEmG,QAAQ,KAAK,IAAb,GAAoBA,QAApB,GAA+BnG,KAFD;EAGrCO,QAAAA,cAAc,EAAE8E,WAAW,CAACrF,KAAD,CAHU;EAIrCsG,QAAAA,MAAM,EAAE,KAJ6B;EAKrCxB,QAAAA,KAAK,EAALA,KALqC;EAMrCzC,QAAAA,UAAU,EAAVA,UANqC;EAOrC7G,QAAAA,IAAI,EAAEuK,WAAW,CAACjB,KAAD;EAPoB,OAAzC;EAUA1J,MAAAA,IAAI,CAACmL,IAAL,CAAU;EACNvC,QAAAA,GAAG,YAAKA,GAAL,cAAYqC,OAAO,CAAChE,UAApB,CADG;EAENyC,QAAAA,KAAK,EAAE1J,IAAI,CAAC8K,MAFN;EAGN1K,QAAAA,IAAI,EAAE6K,OAHA;EAIN1K,QAAAA,CAAC,EAADA,CAJM;EAKNE,QAAAA,CAAC,EAADA,CALM;EAMN6D,QAAAA,IAAI,EAAEgG,MAAM,CAACc,IAAP,GAAc7K,CANd;EAONgE,QAAAA,IAAI,EAAE+F,MAAM,CAACe,GAAP,GAAa5K,CAPb;EAQND,QAAAA,KAAK,EAAEuJ,QARD;EASNrJ,QAAAA,MAAM,EAAEsK,SATF;EAUN7I,QAAAA,KAAK,EAAE+H,QAAQ,CAACe,OAAD,CAVT;EAWNtI,QAAAA,KAAK,EAAEwH,eAAe,CAACc,OAAD;EAXhB,OAAV;EAaH,KA7BD,CADS;EAAA,GAAb;EAiCA,SAAOjL,IAAP;EACH,CAzDD;;EA8DO,IAAM0L,mBAAmB,GAAG,SAAtBA,mBAAsB,QAkC7B;EAAA;;EAAA,MAjCFlG,MAiCE,SAjCFA,MAiCE;EAAA,MAhCFE,QAgCE,SAhCFA,QAgCE;EAAA,MA/BFC,QA+BE,SA/BFA,QA+BE;EAAA,MA9BFF,OA8BE,SA9BFA,OA8BE;EAAA,MA7BFjF,KA6BE,SA7BFA,KA6BE;EAAA,MA5BFE,MA4BE,SA5BFA,MA4BE;EAAA,4BA3BFsF,OA2BE;EAAA,MA3BFA,OA2BE,8BA3BQ,CA2BR;EAAA,iCA1BFC,YA0BE;EAAA,MA1BFA,YA0BE,mCA1Ba,CA0Bb;EAAA,MAzBFL,UAyBE,SAzBFA,UAyBE;EAAA,MAxBU+F,gBAwBV,SAxBF7F,UAwBE;EAAA,8BAvBF8F,SAuBE;EAAA,MAvBFA,SAuBE,gCAvBU,EAuBV;EAAA,MAtBCC,KAsBD;;EACF,MAAMvG,IAAI,GAAGuG,KAAK,CAACvG,IAAN,CAAWwG,MAAX,CAAkB,UAAAlD,GAAG;EAAA,WAAI,CAACgD,SAAS,CAACG,QAAV,CAAmBnD,GAAnB,CAAL;EAAA,GAArB,CAAb;EACA,MAAMxI,IAAI,GAAGoI,aAAa,CAACqD,KAAK,CAACzL,IAAP,EAAakF,IAAb,CAA1B;;EAFE,cAIEE,MAAM,KAAK,UAAX,GAAyB,CAAC,GAAD,EAAM,GAAN,EAAWhF,KAAX,CAAzB,GAAwD,CAAC,GAAD,EAAM,GAAN,EAAWE,MAAX,CAJ1D;EAAA;EAAA,MAGK0H,IAHL;EAAA,MAGW4D,SAHX;EAAA,MAGsBpL,IAHtB;;EAKF,MAAMkF,UAAU,GAAGoC,aAAa,CAC5B9H,IAD4B,EAE5ByL,KAAK,CAAC1D,QAFsB,EAG5BnC,OAH4B,EAI5B2F,gBAJ4B,EAK5B/K,IAL4B,EAM5BoL,SAN4B,CAAhC;;EASA,MAAMC,SAAS;EACXnL,IAAAA,GAAG,EAAE6E,QADM;EAEX4C,IAAAA,GAAG,EAAE7C,QAFM;EAGXD,IAAAA,OAAO,EAAPA;EAHW,KAIRG,UAJQ,CAAf;;EAOA,MAAMsG,QAAQ,GAAGD,SAAS,CAAC1D,GAAV,KAAkB,MAAlB,GAA2BoB,WAA3B,GAAyC,UAAC/E,KAAD;EAAA,WAAmBA,KAAnB;EAAA,GAA1D;EAEA,MAAMuH,MAAM,GAAG/L,IAAI,CACdsI,MADU,CACO,UAACC,GAAD,EAAMyD,KAAN;EAAA,wCAAoBzD,GAApB,sBAA4BrD,IAAI,CAACtE,GAAL,CAAS,UAAAqL,CAAC;EAAA,aAAID,KAAK,CAACC,CAAD,CAAT;EAAA,KAAV,CAA5B;EAAA,GADP,EACuE,EADvE,EAEVP,MAFU,CAEHQ,OAFG,CAAf;EAGA,MAAM/D,GAAG,GAAG2D,QAAQ,CAACrL,IAAI,CAAC0H,GAAL,OAAA1H,IAAI,qBAAQsL,MAAR,EAAL,CAApB;EACA,MAAMrL,GAAG,GAAG8I,eAAe,CAAC/I,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQsL,MAAR,EAAL,CAA3B;EAEA,MAAMI,KAAK,GAAGlE,mBAAY,CACtB4D,SADsB,EAEtB;EAAE3D,IAAAA,GAAG,EAAE6D,MAAP;EAAe5D,IAAAA,GAAG,EAAHA,GAAf;EAAoBzH,IAAAA,GAAG,EAAHA;EAApB,GAFsB,EAGtBsH,IAAI,KAAK,GAAT,GAAe5H,KAAf,GAAuBE,MAHD,EAItB0H,IAJsB,CAA1B;;EA7BE,cAoCuB5C,MAAM,KAAK,UAAX,GAAwB,CAACM,UAAD,EAAayG,KAAb,CAAxB,GAA8C,CAACA,KAAD,EAAQzG,UAAR,CApCrE;EAAA;EAAA,MAoCKsE,MApCL;EAAA,MAoCaC,MApCb;;EAsCF,MAAMmC,SAAS,GAAG,CAAC1G,UAAU,CAAC0G,SAAX,KAAyBvG,YAAY,IAAIX,IAAI,CAACwF,MAAL,GAAc,CAAlB,CAAtC,IAA8DxF,IAAI,CAACwF,MAArF;EACA,MAAM2B,MAAM,GAAG,mCACNZ,KADM;EACCzL,IAAAA,IAAI,EAAJA,IADD;EACOkF,IAAAA,IAAI,EAAJA,IADP;EACaW,IAAAA,YAAY,EAAZA,YADb;EAC2BmE,IAAAA,MAAM,EAANA,MAD3B;EACmCC,IAAAA,MAAM,EAANA;EADnC,MAEXmC,SAFW,EAGXP,SAAS,CAACxG,OAHC,YAIX8G,KAAK,CAAC,CAAD,CAJM,2CAIC,CAJD,CAAf;EAOA,MAAMvM,IAAkC,GACpCwM,SAAS,GAAG,CAAZ,GACMhH,MAAM,KAAK,UAAX,GACIsE,2BAA2B,MAA3B,SAA+B2C,MAA/B,CADJ,GAEInB,6BAA6B,MAA7B,SAAiCmB,MAAjC,CAHV,GAIM,EALV;EAOA,SAAO;EAAErC,IAAAA,MAAM,EAANA,MAAF;EAAUC,IAAAA,MAAM,EAANA,MAAV;EAAkBrK,IAAAA,IAAI,EAAJA;EAAlB,GAAP;EACH,CAxFM;;ECtIP,IAAM0M,WAAW,GAAG,SAAdA,WAAc,CAAIC,GAAJ;EAAA;;EAAA,SAChBA,GAAG,CAACC,IAAJ,CAASrD,KAAK,CAACsD,OAAf,IAA0BH,WAAW,CAAC,QAAC,EAAD,EAAYI,MAAZ,gCAAsBH,GAAtB,EAAD,CAArC,GAAsEA,GADtD;EAAA,CAApB;;EAGA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAkBnH,IAAlB;EAAA,SACrBA,IAAI,KAAK,KAAT,GAAiBmH,KAAK,CAAClB,MAAN,CAAa,UAAAmB,GAAG;EAAA,WAAIA,GAAG,KAAK,CAAZ;EAAA,GAAhB,CAAjB,GAAkDD,KAD7B;EAAA,CAAzB;;EAMA,IAAME,2BAA2B,GAAG,SAA9BA,2BAA8B,QAYhCnD,QAZgC,EAahCtE,OAbgC,EAcD;EAAA,MAZ3BwE,WAY2B,SAZ3BA,WAY2B;EAAA,MAX3BC,QAW2B,SAX3BA,QAW2B;EAAA,MAV3B/B,QAU2B,SAV3BA,QAU2B;EAAA,MAT3BgC,eAS2B,SAT3BA,eAS2B;EAAA,MAR3BlE,YAQ2B,SAR3BA,YAQ2B;EAAA,MAP3BkH,WAO2B,SAP3BA,WAO2B;EAAA,MAN3B/C,MAM2B,SAN3BA,MAM2B;EAAA,MAL3BC,MAK2B,SAL3BA,MAK2B;EAAA,MAJ3BC,MAI2B,SAJ3BA,MAI2B;;EAC/B,MAAME,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD;EAAA,WAA6BJ,MAAM,CAACI,CAAC,CAAChF,OAAO,GAAG,CAAH,GAAO,CAAf,CAAF,CAAnC;EAAA,GAAb;;EACA,MAAMiF,SAAS,GAAG,SAAZA,SAAY,CAACD,CAAD,EAA0BhK,CAA1B;EAAA;;EAAA,WAAwC,YAAC4J,MAAM,CAACI,CAAC,CAAChF,OAAO,GAAG,CAAH,GAAO,CAAf,CAAF,CAAP,6CAA+B,CAA/B,IAAoChF,CAA5E;EAAA,GAAlB;;EAEA,MAAMT,IAAkC,GAAG,EAA3C;EACAmN,EAAAA,WAAW,CAACvC,OAAZ,CAAoB,UAAAwC,eAAe;EAAA,WAC/BhD,MAAM,CAACS,MAAP,GAAgBD,OAAhB,CAAwB,UAAClB,KAAD,EAAQxI,CAAR,EAAc;EAAA;;EAClC,UAAMuJ,CAAC,GAAG2C,eAAe,CAAClM,CAAD,CAAzB;EACA,UAAMX,CAAC,cAAG6J,MAAM,CAACjC,QAAQ,CAACsC,CAAC,CAACrK,IAAH,CAAT,CAAT,6CAA+B,CAAtC;EACA,UAAMK,CAAC,GAAG,UAAC+J,IAAI,CAACC,CAAD,CAAL,yCAAY,CAAZ,IAAiBxE,YAAY,GAAG,GAA1C;EACA,UAAM+E,SAAS,GAAGN,SAAS,CAACD,CAAD,EAAIhK,CAAJ,CAAT,GAAkBwF,YAApC;;EAJkC,yBAKR8C,WAAW,CAAC0B,CAAC,CAACrK,IAAF,CAAOgN,eAAe,CAACxE,GAAvB,CAAD,CALH;EAAA;EAAA,UAK3BmC,QAL2B;EAAA,UAKjBnG,KALiB;;EAOlC,UAAMqG,OAAgC,GAAG;EACrCjE,QAAAA,EAAE,EAAEoG,eAAe,CAACxE,GADiB;EAErChE,QAAAA,KAAK,EAAEmG,QAAQ,KAAK,IAAb,GAAoBA,QAApB,GAA+BnG,KAFD;EAGrCO,QAAAA,cAAc,EAAE8E,WAAW,CAACrF,KAAD,CAHU;EAIrCsG,QAAAA,MAAM,EAAE,KAJ6B;EAKrCxB,QAAAA,KAAK,EAAExI,CAL8B;EAMrC+F,QAAAA,UAAU,EAAEyC,KANyB;EAOrCtJ,QAAAA,IAAI,EAAEyI,gBAAgB,CAAC4B,CAAC,CAACrK,IAAH;EAPe,OAAzC;EAUAJ,MAAAA,IAAI,CAACmL,IAAL,CAAU;EACNvC,QAAAA,GAAG,YAAKwE,eAAe,CAACxE,GAArB,cAA4Bc,KAA5B,CADG;EAENA,QAAAA,KAAK,EAAE1J,IAAI,CAAC8K,MAFN;EAGN1K,QAAAA,IAAI,EAAE6K,OAHA;EAIN1K,QAAAA,CAAC,EAADA,CAJM;EAKNE,QAAAA,CAAC,EAADA,CALM;EAMN6D,QAAAA,IAAI,EAAEgG,MAAM,CAACc,IAAP,GAAc7K,CANd;EAONgE,QAAAA,IAAI,EAAE+F,MAAM,CAACe,GAAP,GAAa5K,CAPb;EAQND,QAAAA,KAAK,EAAEuJ,QARD;EASNrJ,QAAAA,MAAM,EAAEsK,SATF;EAUN7I,QAAAA,KAAK,EAAE+H,QAAQ,CAACe,OAAD,CAVT;EAWNtI,QAAAA,KAAK,EAAEwH,eAAe,CAACc,OAAD;EAXhB,OAAV;EAaH,KA9BD,CAD+B;EAAA,GAAnC;EAkCA,SAAOjL,IAAP;EACH,CAtDD;;EA2DA,IAAMqN,6BAA6B,GAAG,SAAhCA,6BAAgC,QAYlCrC,SAZkC,EAalCvF,OAbkC,EAcH;EAAA,MAZ3BwE,WAY2B,SAZ3BA,WAY2B;EAAA,MAX3BC,QAW2B,SAX3BA,QAW2B;EAAA,MAV3B/B,QAU2B,SAV3BA,QAU2B;EAAA,MAT3BgC,eAS2B,SAT3BA,eAS2B;EAAA,MAR3BlE,YAQ2B,SAR3BA,YAQ2B;EAAA,MAP3BkH,WAO2B,SAP3BA,WAO2B;EAAA,MAN3B/C,MAM2B,SAN3BA,MAM2B;EAAA,MAL3BC,MAK2B,SAL3BA,MAK2B;EAAA,MAJ3BC,MAI2B,SAJ3BA,MAI2B;;EAC/B,MAAMkB,IAAI,GAAG,SAAPA,IAAO,CAACf,CAAD;EAAA,WAA6BL,MAAM,CAACK,CAAC,CAAChF,OAAO,GAAG,CAAH,GAAO,CAAf,CAAF,CAAnC;EAAA,GAAb;;EACA,MAAMgG,QAAQ,GAAG,SAAXA,QAAW,CAAChB,CAAD,EAA0BlK,CAA1B;EAAA;;EAAA,WAAwC,aAAC6J,MAAM,CAACK,CAAC,CAAChF,OAAO,GAAG,CAAH,GAAO,CAAf,CAAF,CAAP,+CAA+B,CAA/B,IAAoClF,CAA5E;EAAA,GAAjB;;EAEA,MAAMP,IAAkC,GAAG,EAA3C;EACAmN,EAAAA,WAAW,CAACvC,OAAZ,CAAoB,UAAAwC,eAAe;EAAA,WAC/B/C,MAAM,CAACQ,MAAP,GAAgBD,OAAhB,CAAwB,UAAClB,KAAD,EAAQxI,CAAR,EAAc;EAAA;;EAClC,UAAMuJ,CAAC,GAAG2C,eAAe,CAAClM,CAAD,CAAzB;EACA,UAAMT,CAAC,eAAG4J,MAAM,CAAClC,QAAQ,CAACsC,CAAC,CAACrK,IAAH,CAAT,CAAT,+CAA+B,CAAtC;EACA,UAAMG,CAAC,GAAG,UAACiL,IAAI,CAACf,CAAD,CAAL,yCAAY,CAAZ,IAAiBxE,YAAY,GAAG,GAA1C;EACA,UAAM8D,QAAQ,GAAG0B,QAAQ,CAAChB,CAAD,EAAIlK,CAAJ,CAAR,GAAiB0F,YAAlC;;EAJkC,0BAKR8C,WAAW,CAAC0B,CAAC,CAACrK,IAAF,CAAOgN,eAAe,CAACxE,GAAvB,CAAD,CALH;EAAA;EAAA,UAK3BmC,QAL2B;EAAA,UAKjBnG,KALiB;;EAOlC,UAAMqG,OAAgC,GAAG;EACrCjE,QAAAA,EAAE,EAAEoG,eAAe,CAACxE,GADiB;EAErChE,QAAAA,KAAK,EAAEmG,QAAQ,KAAK,IAAb,GAAoBA,QAApB,GAA+BnG,KAFD;EAGrCO,QAAAA,cAAc,EAAE8E,WAAW,CAACrF,KAAD,CAHU;EAIrCsG,QAAAA,MAAM,EAAE,KAJ6B;EAKrCxB,QAAAA,KAAK,EAAExI,CAL8B;EAMrC+F,QAAAA,UAAU,EAAEyC,KANyB;EAOrCtJ,QAAAA,IAAI,EAAEyI,gBAAgB,CAAC4B,CAAC,CAACrK,IAAH;EAPe,OAAzC;EAUAJ,MAAAA,IAAI,CAACmL,IAAL,CAAU;EACNvC,QAAAA,GAAG,YAAKwE,eAAe,CAACxE,GAArB,cAA4Bc,KAA5B,CADG;EAENA,QAAAA,KAAK,EAAE1J,IAAI,CAAC8K,MAFN;EAGN1K,QAAAA,IAAI,EAAE6K,OAHA;EAIN1K,QAAAA,CAAC,EAADA,CAJM;EAKNE,QAAAA,CAAC,EAADA,CALM;EAMN6D,QAAAA,IAAI,EAAEgG,MAAM,CAACc,IAAP,GAAc7K,CANd;EAONgE,QAAAA,IAAI,EAAE+F,MAAM,CAACe,GAAP,GAAa5K,CAPb;EAQND,QAAAA,KAAK,EAAEuJ,QARD;EASNrJ,QAAAA,MAAM,EAAEsK,SATF;EAUN7I,QAAAA,KAAK,EAAE+H,QAAQ,CAACe,OAAD,CAVT;EAWNtI,QAAAA,KAAK,EAAEwH,eAAe,CAACc,OAAD;EAXhB,OAAV;EAaH,KA9BD,CAD+B;EAAA,GAAnC;EAkCA,SAAOjL,IAAP;EACH,CAtDD;;EA2DO,IAAMsN,mBAAmB,GAAG,SAAtBA,mBAAsB,QAkC7B;EAAA,MAjCFlN,IAiCE,SAjCFA,IAiCE;EAAA,MAhCFoF,MAgCE,SAhCFA,MAgCE;EAAA,MA/BFE,QA+BE,SA/BFA,QA+BE;EAAA,MA9BFC,QA8BE,SA9BFA,QA8BE;EAAA,MA7BFF,OA6BE,SA7BFA,OA6BE;EAAA,MA5BFjF,KA4BE,SA5BFA,KA4BE;EAAA,MA3BFE,MA2BE,SA3BFA,MA2BE;EAAA,4BA1BFsF,OA0BE;EAAA,MA1BFA,OA0BE,8BA1BQ,CA0BR;EAAA,MAzBFJ,UAyBE,SAzBFA,UAyBE;EAAA,MAxBU+F,gBAwBV,SAxBF7F,UAwBE;EAAA,8BAvBF8F,SAuBE;EAAA,MAvBFA,SAuBE,gCAvBU,EAuBV;EAAA,MAtBCC,KAsBD;;EACF,MAAMvG,IAAI,GAAGuG,KAAK,CAACvG,IAAN,CAAWwG,MAAX,CAAkB,UAAAlD,GAAG;EAAA,WAAI,CAACgD,SAAS,CAACG,QAAV,CAAmBnD,GAAnB,CAAL;EAAA,GAArB,CAAb;EACA,MAAMuE,WAAW,GAAGI,aAAK,GAAqBjI,IAA1B,CAA+BA,IAA/B,EAAqCkI,MAArC,CAA4CC,4BAA5C,EAChBjF,aAAa,CAACpI,IAAD,EAAOkF,IAAP,CADG,CAApB;;EAFE,cAOEE,MAAM,KAAK,UAAX,GAAyB,CAAC,GAAD,EAAM,GAAN,EAAWhF,KAAX,CAAzB,GAAwD,CAAC,GAAD,EAAM,GAAN,EAAWE,MAAX,CAP1D;EAAA;EAAA,MAMK0H,IANL;EAAA,MAMW4D,SANX;EAAA,MAMsBpL,IANtB;;EAQF,MAAMkF,UAAU,GAAGoC,aAAa,CAC5B9H,IAD4B,EAE5ByL,KAAK,CAAC1D,QAFsB,EAG5BnC,OAH4B,EAI5B2F,gBAJ4B,EAK5B/K,IAL4B,EAM5BoL,SAN4B,CAAhC;;EASA,MAAMC,SAAS;EACXnL,IAAAA,GAAG,EAAE6E,QADM;EAEX4C,IAAAA,GAAG,EAAE7C,QAFM;EAGXD,IAAAA,OAAO,EAAPA;EAHW,KAIRG,UAJQ,CAAf;;EAOA,MAAMuG,MAAM,GAAGY,gBAAgB,CAC3BL,WAAW,CAAES,WAAF,CADgB,EAE3BvH,UAAU,CAACC,IAFgB,CAA/B;EAIA,MAAM0C,GAAG,GAAG1H,IAAI,CAAC0H,GAAL,OAAA1H,IAAI,qBAAQsL,MAAR,EAAhB;EACA,MAAMrL,GAAG,GAAGD,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQsL,MAAR,EAAhB;EAEA,MAAMI,KAAK,GAAGlE,mBAAY,CACtB4D,SADsB,EAEtB;EAAE3D,IAAAA,GAAG,EAAE6D,MAAP;EAAe5D,IAAAA,GAAG,EAAHA,GAAf;EAAoBzH,IAAAA,GAAG,EAAHA;EAApB,GAFsB,EAGtBsH,IAAI,KAAK,GAAT,GAAe5H,KAAf,GAAuBE,MAHD,EAItB0H,IAJsB,CAA1B;;EA/BE,cAsCuB5C,MAAM,KAAK,UAAX,GAAwB,CAACM,UAAD,EAAayG,KAAb,CAAxB,GAA8C,CAACA,KAAD,EAAQzG,UAAR,CAtCrE;EAAA;EAAA,MAsCKsE,MAtCL;EAAA,MAsCaC,MAtCb;;EAwCF,MAAMpE,YAAY,GAAG4F,KAAK,CAAC5F,YAAN,GAAqB,CAArB,GAAyB4F,KAAK,CAAC5F,YAA/B,GAA8C,CAAnE;EACA,MAAMuG,SAAS,GAAG1G,UAAU,CAAC0G,SAAX,EAAlB;EACA,MAAMC,MAAM,GAAG,mCACNZ,KADM;EACC5F,IAAAA,YAAY,EAAZA,YADD;EACekH,IAAAA,WAAW,EAAXA,WADf;EAC4B/C,IAAAA,MAAM,EAANA,MAD5B;EACoCC,IAAAA,MAAM,EAANA;EADpC,MAEXmC,SAFW,EAGXP,SAAS,CAACxG,OAHC,CAAf;EAMA,MAAMzF,IAAkC,GACpCwM,SAAS,GAAG,CAAZ,GACMhH,MAAM,KAAK,UAAX,GACI0H,2BAA2B,MAA3B,SAA+BT,MAA/B,CADJ,GAEIY,6BAA6B,MAA7B,SAAiCZ,MAAjC,CAHV,GAIM,EALV;EAOA,SAAO;EAAErC,IAAAA,MAAM,EAANA,MAAF;EAAUC,IAAAA,MAAM,EAANA,MAAV;EAAkBrK,IAAAA,IAAI,EAAJA;EAAlB,GAAP;EACH,CA1FM;;ECzIA,IAAM0N,oBAAoB,GAAG,SAAvBA,oBAAuB,CAChC1N,IADgC,EAEhCwF,MAFgC,EAGhCmI,SAHgC,EAIhCpI,SAJgC,EAKhCE,OALgC,EAMhCmI,cANgC,EAOjB;EACf,MAAMxN,IAAI,GAAG,QACTJ,IAAI,CAACgB,GAAL,CAAS,UAAAV,GAAG;EAAA;;EAAA,WAAK;EACb0G,MAAAA,EAAE,EAAE1G,GAAG,CAACF,IAAJ,CAAS4G,EADA;EAEbrE,MAAAA,KAAK,EAAEiL,cAAc,CAACtN,GAAG,CAACF,IAAL,CAFR;EAGb8K,MAAAA,MAAM,EAAE5K,GAAG,CAACF,IAAJ,CAAS8K,MAHJ;EAIb/I,MAAAA,KAAK,gBAAE7B,GAAG,CAAC6B,KAAN,mDAAe;EAJP,KAAL;EAAA,GAAZ,CADS,EAOT;EAAA,QAAG6E,EAAH,QAAGA,EAAH;EAAA,WAAYA,EAAZ;EAAA,GAPS,CAAb;;EAUA,MACKxB,MAAM,KAAK,UAAX,IACGD,SAAS,KAAK,SADjB,IAEGoI,SAAS,KAAK,QAFjB,IAGGlI,OAAO,KAAK,IAHhB,IAICD,MAAM,KAAK,YAAX,IAA2BD,SAAS,KAAK,SAAzC,IAAsDE,OAAO,KAAK,IALvE,EAME;EACErF,IAAAA,IAAI,CAACqF,OAAL;EACH;;EAED,SAAOrF,IAAP;EACH,CA7BM;EA+BA,IAAMyN,uBAAuB,GAAG,SAA1BA,uBAA0B,CACnC7N,IADmC,EAEnCwF,MAFmC,EAGnCoI,cAHmC,EAIpB;EACf,MAAMxN,IAAI,GAAG,QACTJ,IAAI,CAACgB,GAAL,CAAS,UAAAV,GAAG;EAAA;;EAAA,WAAK;EACb0G,MAAAA,EAAE,0BAAE1G,GAAG,CAACF,IAAJ,CAAS6G,UAAX,uEAAyB,EADd;EAEbtE,MAAAA,KAAK,EAAEiL,cAAc,CAACtN,GAAG,CAACF,IAAL,CAFR;EAGb8K,MAAAA,MAAM,EAAE5K,GAAG,CAACF,IAAJ,CAAS8K,MAHJ;EAIb/I,MAAAA,KAAK,iBAAE7B,GAAG,CAAC6B,KAAN,qDAAe;EAJP,KAAL;EAAA,GAAZ,CADS,EAOT;EAAA,QAAG6E,EAAH,SAAGA,EAAH;EAAA,WAAYA,EAAZ;EAAA,GAPS,CAAb;;EAUA,MAAIxB,MAAM,KAAK,YAAf,EAA6B;EACzBpF,IAAAA,IAAI,CAACqF,OAAL;EACH;;EAED,SAAOrF,IAAP;EACH,CApBM;EAsBA,IAAM0N,aAAa,GAAG,SAAhBA,aAAgB,QAavB;EAAA,MAZF9N,IAYE,SAZFA,IAYE;EAAA,MAXF2N,SAWE,SAXFA,SAWE;EAAA,MAVFjH,IAUE,SAVFA,IAUE;EAAA,MATFnB,SASE,SATFA,SASE;EAAA,MARFC,MAQE,SARFA,MAQE;EAAA,MAPFuI,WAOE,SAPFA,WAOE;EAAA,MANFtI,OAME,SANFA,OAME;EACF,MAAMmI,cAAc,GAAGI,wBAAmB,CACtCD,WADsC,aACtCA,WADsC,cACtCA,WADsC,GACtBrH,IAAI,KAAK,SAAT,GAAqB,YAArB,GAAoC,IADd,CAA1C;;EAIA,MAAIA,IAAI,KAAK,SAAb,EAAwB;EACpB,WAAOmH,uBAAuB,CAAC7N,IAAD,EAAOwF,MAAP,EAAeoI,cAAf,CAA9B;EACH;;EAED,SAAOF,oBAAoB,CAAC1N,IAAD,EAAOwF,MAAP,EAAemI,SAAf,EAA0BpI,SAA1B,EAAqCE,OAArC,EAA8CmI,cAA9C,CAA3B;EACH,CAvBM;;EClDA,IAAMK,MAAM,GAAG,SAATA,MAAS,OA0DhB;EAAA,0BAzDF5I,OAyDE;EAAA,MAzDFA,OAyDE,6BAzDQD,YAAY,CAACC,OAyDrB;EAAA,uBAxDFC,IAwDE;EAAA,MAxDFA,IAwDE,0BAxDKF,YAAY,CAACE,IAwDlB;EAAA,wBAvDF3C,KAuDE;EAAA,MAvDFA,KAuDE,2BAvDMyC,YAAY,CAACzC,KAuDnB;EAAA,+BAtDFmE,YAsDE;EAAA,MAtDFA,YAsDE,kCAtDa1B,YAAY,CAAC0B,YAsD1B;EAAA,MArDFoH,WAqDE,QArDFA,WAqDE;EAAA,yBApDFtH,MAoDE;EAAA,MApDFA,QAoDE,4BApDOxB,YAAY,CAACwB,MAoDpB;EAAA,0BAnDFD,OAmDE;EAAA,MAnDFA,OAmDE,6BAnDQvB,YAAY,CAACuB,OAmDrB;EAAA,8BAlDFzE,WAkDE;EAAA,MAlDFA,WAkDE,iCAlDYkD,YAAY,CAAClD,WAkDzB;EAAA,iCAjDFuE,cAiDE;EAAA,MAjDFA,cAiDE,oCAjDerB,YAAY,CAACqB,cAiD5B;EAAA,4BAhDFlB,SAgDE;EAAA,MAhDFA,SAgDE,+BAhDUH,YAAY,CAACG,SAgDvB;EAAA,yBA/CFC,MA+CE;EAAA,MA/CFA,MA+CE,4BA/COJ,YAAY,CAACI,MA+CpB;EAAA,0BA9CFC,OA8CE;EAAA,MA9CFA,OA8CE,6BA9CQL,YAAY,CAACK,OA8CrB;EAAA,MA7CFrF,IA6CE,QA7CFA,IA6CE;EAAA,2BA5CFsF,QA4CE;EAAA,MA5CFA,QA4CE,8BA5CSN,YAAY,CAACM,QA4CtB;EAAA,2BA3CFC,QA2CE;EAAA,MA3CFA,QA2CE,8BA3CSP,YAAY,CAACO,QA2CtB;EAAA,MA1CF2E,MA0CE,QA1CFA,MA0CE;EAAA,MAzCF9J,KAyCE,QAzCFA,KAyCE;EAAA,MAxCFE,MAwCE,QAxCFA,MAwCE;EAAA,0BAvCFsF,OAuCE;EAAA,MAvCFA,OAuCE,6BAvCQZ,YAAY,CAACY,OAuCrB;EAAA,+BAtCFC,YAsCE;EAAA,MAtCFA,YAsCE,kCAtCab,YAAY,CAACa,YAsC1B;EAAA,6BArCFL,UAqCE;EAAA,MArCFA,UAqCE,gCArCWR,YAAY,CAACQ,UAqCxB;EAAA,6BApCFE,UAoCE;EAAA,MApCFA,UAoCE,gCApCWV,YAAY,CAACU,UAoCxB;EAAA,mCAnCFoB,gBAmCE;EAAA,MAnCFA,gBAmCE,sCAnCiB9B,YAAY,CAAC8B,gBAmC9B;EAAA,8BAlCFZ,WAkCE;EAAA,MAlCFA,WAkCE,iCAlCYlB,YAAY,CAACkB,WAkCzB;EAAA,iCAjCFC,cAiCE;EAAA,MAjCFA,cAiCE,oCAjCenB,YAAY,CAACmB,cAiC5B;EAAA,kCAhCFC,eAgCE;EAAA,MAhCFA,eAgCE,qCAhCgBpB,YAAY,CAACoB,eAgC7B;EAAA,0BA/BF9E,OA+BE;EAAA,MA/BFA,OA+BE,6BA/BQ0D,YAAY,CAAC1D,OA+BrB;EAAA,MA9BFqM,WA8BE,QA9BFA,WA8BE;;EAAA,kBACgCI,cAAQ,CAACjH,gBAAD,aAACA,gBAAD,cAACA,gBAAD,GAAqB,EAArB,CADxC;EAAA;EAAA,MACK0E,SADL;EAAA,MACgBwC,YADhB;;EAEF,MAAMzM,WAAW,GAAGqC,iBAAW,CAAC,UAAAgD,EAAE,EAAI;EAClCoH,IAAAA,YAAY,CAAC,UAAAC,KAAK;EAAA,aACdA,KAAK,CAACC,OAAN,CAActH,EAAd,IAAoB,CAAC,CAArB,GAAyBqH,KAAK,CAACvC,MAAN,CAAa,UAAArD,IAAI;EAAA,eAAIA,IAAI,KAAKzB,EAAb;EAAA,OAAjB,CAAzB,gCAAiEqH,KAAjE,IAAwErH,EAAxE,EADc;EAAA,KAAN,CAAZ;EAGH,GAJ8B,EAI5B,EAJ4B,CAA/B;EAMA,MAAMmB,QAAQ,GAAGoG,wBAAmB,CAAClJ,OAAD,CAApC;EACA,MAAMmJ,QAAQ,GAAGD,wBAAmB,CAAC5L,KAAD,CAApC;EACA,MAAMwH,eAAe,GAAGoE,wBAAmB,CAACzH,YAAD,CAA3C;EACA,MAAMmD,WAAW,GAAGwE,sBAAiB,CAACP,WAAD,CAArC;EAEA,MAAM5K,KAAK,GAAGC,aAAQ,EAAtB;EACA,MAAM2G,QAAQ,GAAGwE,2BAAoB,CAAC9H,QAAD,EAASD,OAAT,CAArC;EACA,MAAMgI,cAAc,GAAGC,wBAAiB,CACpC1M,WADoC,EAEpCoB,KAFoC,CAAxC;EAIA,MAAMuL,aAAa,GAAGD,wBAAiB,CACnCnI,cADmC,EAEnCnD,KAFmC,CAAvC;EAKA,MAAMwL,YAAY,GAAGvJ,SAAS,KAAK,SAAd,GAA0BmG,mBAA1B,GAAgD4B,mBAArE;;EAxBE,sBAyB+BwB,YAAY,CAAC;EAC1CtJ,IAAAA,MAAM,EAANA,MAD0C;EAE1CC,IAAAA,OAAO,EAAPA,OAF0C;EAG1CrF,IAAAA,IAAI,EAAJA,IAH0C;EAI1C+H,IAAAA,QAAQ,EAARA,QAJ0C;EAK1C7C,IAAAA,IAAI,EAAJA,IAL0C;EAM1CI,IAAAA,QAAQ,EAARA,QAN0C;EAO1CC,IAAAA,QAAQ,EAARA,QAP0C;EAQ1CnF,IAAAA,KAAK,EAALA,KAR0C;EAS1CE,IAAAA,MAAM,EAANA,MAT0C;EAU1CwJ,IAAAA,QAAQ,EAARA,QAV0C;EAW1ClE,IAAAA,OAAO,EAAPA,OAX0C;EAY1CC,IAAAA,YAAY,EAAZA,YAZ0C;EAa1CL,IAAAA,UAAU,EAAVA,UAb0C;EAc1CE,IAAAA,UAAU,EAAVA,UAd0C;EAe1C8F,IAAAA,SAAS,EAATA,SAf0C;EAgB1C3B,IAAAA,WAAW,EAAXA,WAhB0C;EAiB1CE,IAAAA,eAAe,EAAfA,eAjB0C;EAkB1CG,IAAAA,MAAM,EAANA;EAlB0C,GAAD,CAzB3C;EAAA,MAyBMtK,IAzBN,iBAyBMA,IAzBN;EAAA,MAyBYoK,MAzBZ,iBAyBYA,MAzBZ;EAAA,MAyBoBC,MAzBpB,iBAyBoBA,MAzBpB;;EA8CF,MAAM0E,aAAa,GAAGlL,aAAO,CACzB;EAAA,WACI7D,IAAI,CACC8L,MADL,CAEQ,UAACxL,GAAD;EAAA,aAAqDA,GAAG,CAACF,IAAJ,CAASwE,KAAT,KAAmB,IAAxE;EAAA,KAFR,EAIK5D,GAJL,CAIS,UAACV,GAAD,EAAMoJ,KAAN;EAAA,+CACEpJ,GADF;EAEDoJ,QAAAA,KAAK,EAALA;EAFC;EAAA,KAJT,CADJ;EAAA,GADyB,EAUzB,CAAC1J,IAAD,CAVyB,CAA7B;EAaA,MAAMgP,oBAAoB,GAAGhL,iBAAW,CACpC,iBAA0D;EAAA,QAAvDxD,KAAuD,SAAvDA,KAAuD;EAAA,QAAhDE,MAAgD,SAAhDA,MAAgD;EACtD,QAAI,CAAC4F,WAAL,EAAkB,OAAO,KAAP;EAClB,QAAIC,cAAc,GAAG,CAAjB,IAAsB/F,KAAK,GAAG+F,cAAlC,EAAkD,OAAO,KAAP;EAClD,QAAIC,eAAe,GAAG,CAAlB,IAAuB9F,MAAM,GAAG8F,eAApC,EAAqD,OAAO,KAAP;EACrD,WAAO,IAAP;EACH,GANmC,EAOpC,CAACF,WAAD,EAAcC,cAAd,EAA8BC,eAA9B,CAPoC,CAAxC;EAUA,MAAMyI,UAAU,GAAGpL,aAAO,CACtB;EAAA,WACIyB,IAAI,CAACtE,GAAL,CAAS,UAAA4H,GAAG,EAAI;EACZ,UAAMtI,GAAG,GAAGN,IAAI,CAACkP,IAAL,CAAU,UAAA5O,GAAG;EAAA,eAAIA,GAAG,CAACF,IAAJ,CAAS4G,EAAT,KAAgB4B,GAApB;EAAA,OAAb,CAAZ;EAEA,+CAAYtI,GAAZ;EAAiBF,QAAAA,IAAI;EAAI4G,UAAAA,EAAE,EAAE4B;EAAR,WAAgBtI,GAAhB,aAAgBA,GAAhB,uBAAgBA,GAAG,CAAEF,IAArB;EAA2B8K,UAAAA,MAAM,EAAEU,SAAS,CAACG,QAAV,CAAmBnD,GAAnB;EAAnC;EAArB;EACH,KAJD,CADJ;EAAA,GADsB,EAOtB,CAACgD,SAAD,EAAYtG,IAAZ,EAAkBtF,IAAlB,CAPsB,CAA1B;EAUA,MAAMmP,eAAiD,GAAGtL,aAAO,CAC7D;EAAA,WACInC,OAAO,CAACV,GAAR,CAAY,UAAAY,MAAM,EAAI;EAClB,UAAMxB,IAAI,GAAG0N,aAAa,CAAC;EACvB9N,QAAAA,IAAI,EAAE4B,MAAM,CAACE,QAAP,KAAoB,MAApB,GAA6BmN,UAA7B,GAA0CjP,IADzB;EAEvB2N,QAAAA,SAAS,EAAE/L,MAAM,CAAC+L,SAFK;EAGvBjH,QAAAA,IAAI,EAAE9E,MAAM,CAACE,QAHU;EAIvByD,QAAAA,SAAS,EAATA,SAJuB;EAKvBC,QAAAA,MAAM,EAANA,MALuB;EAMvBuI,QAAAA,WAAW,EAAXA,WANuB;EAOvBtI,QAAAA,OAAO,EAAPA;EAPuB,OAAD,CAA1B;EAUA,aAAO,CAAC7D,MAAD,EAASxB,IAAT,CAAP;EACH,KAZD,CADJ;EAAA,GAD6D,EAe7D,CAACsB,OAAD,EAAUuN,UAAV,EAAsBjP,IAAtB,EAA4BuF,SAA5B,EAAuCC,MAAvC,EAA+CuI,WAA/C,EAA4DtI,OAA5D,CAf6D,CAAjE;EAkBA,SAAO;EACHzF,IAAAA,IAAI,EAAJA,IADG;EAEH+O,IAAAA,aAAa,EAAbA,aAFG;EAGH3E,IAAAA,MAAM,EAANA,MAHG;EAIHC,IAAAA,MAAM,EAANA,MAJG;EAKHlC,IAAAA,QAAQ,EAARA,QALG;EAMHqG,IAAAA,QAAQ,EAARA,QANG;EAOHrE,IAAAA,eAAe,EAAfA,eAPG;EAQHF,IAAAA,WAAW,EAAXA,WARG;EASHC,IAAAA,QAAQ,EAARA,QATG;EAUHyE,IAAAA,cAAc,EAAdA,cAVG;EAWHE,IAAAA,aAAa,EAAbA,aAXG;EAYHG,IAAAA,oBAAoB,EAApBA,oBAZG;EAaHpD,IAAAA,SAAS,EAATA,SAbG;EAcHjK,IAAAA,WAAW,EAAXA,WAdG;EAeHwN,IAAAA,eAAe,EAAfA;EAfG,GAAP;EAiBH,CA5KM;;ECSP,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OA0Ec;EAAA,MAzE3BhP,IAyE2B,QAzE3BA,IAyE2B;EAAA,MAxE3BiF,OAwE2B,QAxE3BA,OAwE2B;EAAA,MAvE3BC,IAuE2B,QAvE3BA,IAuE2B;EAAA,MArEnB+J,aAqEmB,QArE3B/E,MAqE2B;EAAA,MApE3B9J,KAoE2B,QApE3BA,KAoE2B;EAAA,MAnE3BE,MAmE2B,QAnE3BA,MAmE2B;EAAA,MAjE3B6E,SAiE2B,QAjE3BA,SAiE2B;EAAA,MAhE3BC,MAgE2B,QAhE3BA,MAgE2B;EAAA,MA/D3BC,OA+D2B,QA/D3BA,OA+D2B;EAAA,MA9D3BC,QA8D2B,QA9D3BA,QA8D2B;EAAA,MA7D3BC,QA6D2B,QA7D3BA,QA6D2B;EAAA,MA3D3BC,UA2D2B,QA3D3BA,UA2D2B;EAAA,MA1D3BE,UA0D2B,QA1D3BA,UA0D2B;EAAA,MAxD3BE,OAwD2B,QAxD3BA,OAwD2B;EAAA,MAvD3BC,YAuD2B,QAvD3BA,YAuD2B;EAAA,MArD3BqJ,OAqD2B,QArD3BA,OAqD2B;EAAA,MApD3BC,SAoD2B,QApD3BA,SAoD2B;EAAA,6BAnD3BrJ,UAmD2B;EAAA,MAnD3BA,UAmD2B,gCAnDdkB,eAAe,CAAClB,UAmDF;EAAA,2BAlD3BC,QAkD2B;EAAA,MAlD3BA,QAkD2B,8BAlDhBiB,eAAe,CAACjB,QAkDA;EAAA,8BAjD3BC,WAiD2B;EAAA,MAjD3BA,WAiD2B,iCAjDbgB,eAAe,CAAChB,WAiDH;EAAA,8BAhD3BC,WAgD2B;EAAA,MAhD3BA,WAgD2B,iCAhDbe,eAAe,CAACf,WAgDH;EAAA,MA/C3BmJ,WA+C2B,QA/C3BA,WA+C2B;EAAA,MA9C3BC,WA8C2B,QA9C3BA,WA8C2B;EAAA,yBA5C3BpI,MA4C2B;EAAA,MA5C3BA,MA4C2B,4BA5ClBD,eAAe,CAACC,MA4CE;EAAA,+BA3C3BC,YA2C2B;EAAA,MA3C3BA,YA2C2B,kCA3CZF,eAAe,CAACE,YA2CJ;EAAA,MAzC3BhB,WAyC2B,QAzC3BA,WAyC2B;EAAA,MAxC3B3D,KAwC2B,QAxC3BA,KAwC2B;EAAA,MAvC3B4D,cAuC2B,QAvC3BA,cAuC2B;EAAA,MAtC3BC,eAsC2B,QAtC3BA,eAsC2B;EAAA,MArC3BC,cAqC2B,QArC3BA,cAqC2B;EAAA,0BAnC3BU,OAmC2B;EAAA,MAnC3BA,OAmC2B,6BAnCjBC,eAAe,CAACD,OAmCC;EAAA,MAjC3BR,OAiC2B,QAjC3BA,OAiC2B;EAAA,MAhC3BC,MAgC2B,QAhC3BA,MAgC2B;EAAA,uBA/B3BW,IA+B2B;EAAA,MA/B3BA,IA+B2B,0BA/BpBH,eAAe,CAACG,IA+BI;EAAA,uBA9B3B1C,IA8B2B;EAAA,MA9B3BA,IA8B2B,0BA9BpBuC,eAAe,CAACvC,IA8BI;EAAA,+BA7B3BpC,YA6B2B;EAAA,MA7B3BA,YA6B2B,kCA7BZ2E,eAAe,CAAC3E,YA6BJ;EAAA,8BA5B3BC,WA4B2B;EAAA,MA5B3BA,WA4B2B,iCA5Bb0E,eAAe,CAAC1E,WA4BH;EAAA,MA3B3BR,WA2B2B,QA3B3BA,WA2B2B;EAAA,8BAzB3BjC,WAyB2B;EAAA,MAzB3BA,WAyB2B,iCAzBbmH,eAAe,CAACnH,WAyBH;EAAA,MAvB3B8N,WAuB2B,QAvB3BA,WAuB2B;EAAA,MAtB3BjH,YAsB2B,QAtB3BA,YAsB2B;EAAA,MApB3BoH,WAoB2B,QApB3BA,WAoB2B;EAAA,gCAlB3BrL,aAkB2B;EAAA,MAlB3BA,aAkB2B,mCAlBXuE,eAAe,CAACvE,aAkBL;EAAA,0BAjB3BI,OAiB2B;EAAA,MAjB3BA,OAiB2B,6BAjBjBmE,eAAe,CAACnE,OAiBC;EAAA,MAhB3BH,OAgB2B,QAhB3BA,OAgB2B;EAAA,MAf3BC,YAe2B,QAf3BA,YAe2B;EAAA,MAd3BC,YAc2B,QAd3BA,YAc2B;EAAA,MAZ3BtB,OAY2B,QAZ3BA,OAY2B;EAAA,uBAV3BgG,IAU2B;EAAA,MAV3BA,IAU2B,0BAVpBN,eAAe,CAACM,IAUI;EAAA,MAT3BvE,SAS2B,QAT3BA,SAS2B;EAAA,MAR3BC,cAQ2B,QAR3BA,cAQ2B;EAAA,MAP3BC,eAO2B,QAP3BA,eAO2B;EAAA,8BAN3BH,WAM2B;EAAA,MAN3BA,WAM2B,iCANbkE,eAAe,CAAClE,WAMH;EAAA,MAL3BwM,YAK2B,QAL3BA,YAK2B;EAAA,MAJ3BC,iBAI2B,QAJ3BA,iBAI2B;EAAA,MAH3BC,kBAG2B,QAH3BA,kBAG2B;EAAA,MAD3B1I,gBAC2B,QAD3BA,gBAC2B;;EAAA,yBACe2I,oBAAe,EAD9B;EAAA,MACnBrI,OADmB,oBACnBA,OADmB;EAAA,MACFsI,YADE,oBACVC,MADU;;EAAA,uBAE0CC,kBAAa,CAC9ExP,KAD8E,EAE9EE,MAF8E,EAG9E2O,aAH8E,CAFvD;EAAA,MAEnBY,UAFmB,kBAEnBA,UAFmB;EAAA,MAEPC,WAFO,kBAEPA,WAFO;EAAA,MAEM5F,MAFN,kBAEMA,MAFN;EAAA,MAEc6F,UAFd,kBAEcA,UAFd;EAAA,MAE0BC,WAF1B,kBAE0BA,WAF1B;;EAAA,gBAoBvBnC,MAAM,CAAW;EACjB5I,IAAAA,OAAO,EAAPA,OADiB;EAEjB1C,IAAAA,KAAK,EAALA,KAFiB;EAGjBmE,IAAAA,YAAY,EAAZA,YAHiB;EAIjBoH,IAAAA,WAAW,EAAXA,WAJiB;EAKjBtH,IAAAA,MAAM,EAANA,MALiB;EAMjBD,IAAAA,OAAO,EAAPA,OANiB;EAOjBzE,IAAAA,WAAW,EAAXA,WAPiB;EAQjBuE,IAAAA,cAAc,EAAdA,cARiB;EASjBlB,IAAAA,SAAS,EAATA,SATiB;EAUjBC,IAAAA,MAAM,EAANA,MAViB;EAWjBC,IAAAA,OAAO,EAAPA,OAXiB;EAYjBrF,IAAAA,IAAI,EAAJA,IAZiB;EAajBkF,IAAAA,IAAI,EAAJA,IAbiB;EAcjBI,IAAAA,QAAQ,EAARA,QAdiB;EAejBC,IAAAA,QAAQ,EAARA,QAfiB;EAgBjB2E,IAAAA,MAAM,EAANA,MAhBiB;EAiBjB9J,IAAAA,KAAK,EAAE2P,UAjBU;EAkBjBzP,IAAAA,MAAM,EAAE0P,WAlBS;EAmBjBpK,IAAAA,OAAO,EAAPA,OAnBiB;EAoBjBC,IAAAA,YAAY,EAAZA,YApBiB;EAqBjBL,IAAAA,UAAU,EAAVA,UArBiB;EAsBjBE,IAAAA,UAAU,EAAVA,UAtBiB;EAuBjBQ,IAAAA,WAAW,EAAXA,WAvBiB;EAwBjBC,IAAAA,cAAc,EAAdA,cAxBiB;EAyBjBC,IAAAA,eAAe,EAAfA,eAzBiB;EA0BjB9E,IAAAA,OAAO,EAAPA,OA1BiB;EA2BjBqM,IAAAA,WAAW,EAAXA,WA3BiB;EA4BjB7G,IAAAA,gBAAgB,EAAhBA;EA5BiB,GAAX,CApBiB;EAAA,MASvBlH,IATuB,WASvBA,IATuB;EAAA,MAUvB+O,aAVuB,WAUvBA,aAVuB;EAAA,MAWvB3E,MAXuB,WAWvBA,MAXuB;EAAA,MAYvBC,MAZuB,WAYvBA,MAZuB;EAAA,MAavBmE,QAbuB,WAavBA,QAbuB;EAAA,MAcvBrE,eAduB,WAcvBA,eAduB;EAAA,MAevBwE,cAfuB,WAevBA,cAfuB;EAAA,MAgBvBE,aAhBuB,WAgBvBA,aAhBuB;EAAA,MAiBvBG,oBAjBuB,WAiBvBA,oBAjBuB;EAAA,MAkBvBrN,WAlBuB,WAkBvBA,WAlBuB;EAAA,MAmBvBwN,eAnBuB,WAmBvBA,eAnBuB;;EAmD3B,MAAMkB,UAAU,GAAGC,iBAAa,CAc9BvB,aAd8B,EAcf;EACbzJ,IAAAA,IAAI,EAAE,cAAAhF,GAAG;EAAA,aAAIA,GAAG,CAACsI,GAAR;EAAA,KADI;EAEblC,IAAAA,IAAI,EAAE,cAAApG,GAAG;EAAA;EACL4B,QAAAA,WAAW,EAAEyM,cAAc,CAACrO,GAAD,CADtB;EAEL6B,QAAAA,KAAK,EAAE7B,GAAG,CAAC6B,KAFN;EAGLzB,QAAAA,MAAM,EAAE,CAHH;EAIL0B,QAAAA,UAAU,EAAEyM,aAAa,CAACvO,GAAD,CAJpB;EAKL+B,QAAAA,YAAY,EAAE,CALT;EAMLC,QAAAA,MAAM,EAAEhC,GAAG,CAACE,KAAJ,GAAY,CANf;EAOL+B,QAAAA,MAAM,EAAEjC,GAAG,CAACI,MAAJ,GAAa,CAPhB;EAQL8B,QAAAA,SAAS,sBAAelC,GAAG,CAACC,CAAnB,eAAyBD,GAAG,CAACG,CAAJ,GAAQH,GAAG,CAACI,MAArC,MARJ;EASLF,QAAAA,KAAK,EAAEF,GAAG,CAACE;EATN,SAUDgF,MAAM,KAAK,UAAX,GACE,EADF,GAEE;EACI9E,QAAAA,MAAM,EAAEJ,GAAG,CAACI,MADhB;EAEI8B,QAAAA,SAAS,sBAAelC,GAAG,CAACC,CAAnB,eAAyBD,GAAG,CAACG,CAA7B,MAFb;EAGID,QAAAA,KAAK,EAAE;EAHX,OAZD;EAAA,KAFI;EAoBb+P,IAAAA,KAAK,EAAE,eAAAjQ,GAAG;EAAA,aAAK;EACX4B,QAAAA,WAAW,EAAEyM,cAAc,CAACrO,GAAD,CADhB;EAEX6B,QAAAA,KAAK,EAAE7B,GAAG,CAAC6B,KAFA;EAGXzB,QAAAA,MAAM,EAAEJ,GAAG,CAACI,MAHD;EAIX0B,QAAAA,UAAU,EAAEyM,aAAa,CAACvO,GAAD,CAJd;EAKX+B,QAAAA,YAAY,EAAE,CALH;EAMXC,QAAAA,MAAM,EAAEhC,GAAG,CAACE,KAAJ,GAAY,CANT;EAOX+B,QAAAA,MAAM,EAAEjC,GAAG,CAACI,MAAJ,GAAa,CAPV;EAQX8B,QAAAA,SAAS,sBAAelC,GAAG,CAACC,CAAnB,eAAyBD,GAAG,CAACG,CAA7B,MARE;EASXD,QAAAA,KAAK,EAAEF,GAAG,CAACE;EATA,OAAL;EAAA,KApBG;EA+BbgQ,IAAAA,MAAM,EAAE,gBAAAlQ,GAAG;EAAA,aAAK;EACZ4B,QAAAA,WAAW,EAAEyM,cAAc,CAACrO,GAAD,CADf;EAEZ6B,QAAAA,KAAK,EAAE7B,GAAG,CAAC6B,KAFC;EAGZzB,QAAAA,MAAM,EAAEJ,GAAG,CAACI,MAHA;EAIZ0B,QAAAA,UAAU,EAAEyM,aAAa,CAACvO,GAAD,CAJb;EAKZ+B,QAAAA,YAAY,EAAE,CALF;EAMZC,QAAAA,MAAM,EAAEhC,GAAG,CAACE,KAAJ,GAAY,CANR;EAOZ+B,QAAAA,MAAM,EAAEjC,GAAG,CAACI,MAAJ,GAAa,CAPT;EAQZ8B,QAAAA,SAAS,sBAAelC,GAAG,CAACC,CAAnB,eAAyBD,GAAG,CAACG,CAA7B,MARG;EASZD,QAAAA,KAAK,EAAEF,GAAG,CAACE;EATC,OAAL;EAAA,KA/BE;EA0CbiQ,IAAAA,KAAK,EAAE,eAAAnQ,GAAG;EAAA;EACN4B,QAAAA,WAAW,EAAEyM,cAAc,CAACrO,GAAD,CADrB;EAEN6B,QAAAA,KAAK,EAAE7B,GAAG,CAAC6B,KAFL;EAGNzB,QAAAA,MAAM,EAAE,CAHF;EAIN0B,QAAAA,UAAU,EAAEyM,aAAa,CAACvO,GAAD,CAJnB;EAKN+B,QAAAA,YAAY,EAAE,CALR;EAMNC,QAAAA,MAAM,EAAEhC,GAAG,CAACE,KAAJ,GAAY,CANd;EAON+B,QAAAA,MAAM,EAAE,CAPF;EAQNC,QAAAA,SAAS,sBAAelC,GAAG,CAACC,CAAnB,eAAyBD,GAAG,CAACG,CAAJ,GAAQH,GAAG,CAACI,MAArC,MARH;EASNF,QAAAA,KAAK,EAAEF,GAAG,CAACE;EATL,SAUFgF,MAAM,KAAK,UAAX,GACE,EADF,GAEE;EACIlD,QAAAA,MAAM,EAAE,CADZ;EAEIC,QAAAA,MAAM,EAAEjC,GAAG,CAACI,MAAJ,GAAa,CAFzB;EAGIA,QAAAA,MAAM,EAAEJ,GAAG,CAACI,MAHhB;EAII8B,QAAAA,SAAS,sBAAelC,GAAG,CAACC,CAAnB,eAAyBD,GAAG,CAACG,CAA7B,MAJb;EAKID,QAAAA,KAAK,EAAE;EALX,OAZA;EAAA,KA1CG;EA8DbuP,IAAAA,MAAM,EAAED,YA9DK;EA+DbY,IAAAA,SAAS,EAAE,CAAClJ;EA/DC,GAde,CAAhC;EAgFA,MAAMmJ,WAAW,GAAG9M,aAAO,CACvB;EAAA,WAAO;EACHpB,MAAAA,YAAY,EAAZA,YADG;EAEHC,MAAAA,WAAW,EAAXA,WAFG;EAGH4D,MAAAA,WAAW,EAAXA,WAHG;EAIHzD,MAAAA,aAAa,EAAbA,aAJG;EAKH0D,MAAAA,cAAc,EAAdA,cALG;EAMHC,MAAAA,eAAe,EAAfA,eANG;EAOH1D,MAAAA,OAAO,EAAPA,OAPG;EAQHC,MAAAA,YAAY,EAAZA,YARG;EASHC,MAAAA,YAAY,EAAZA,YATG;EAUHmH,MAAAA,eAAe,EAAfA,eAVG;EAWHlH,MAAAA,OAAO,EAAPA,OAXG;EAYHC,MAAAA,WAAW,EAAXA,WAZG;EAaHC,MAAAA,SAAS,EAAEuM,YAbR;EAcHtM,MAAAA,cAAc,EAAEuM,iBAdb;EAeHtM,MAAAA,eAAe,EAAEuM;EAfd,KAAP;EAAA,GADuB,EAkBvB,CACInN,YADJ,EAEIC,WAFJ,EAGI4D,WAHJ,EAII6D,eAJJ,EAKItH,aALJ,EAMI2D,eANJ,EAOID,cAPJ,EAQIzD,OARJ,EASIC,YATJ,EAUIC,YAVJ,EAWIC,OAXJ,EAYIC,WAZJ,EAaIwM,YAbJ,EAcIC,iBAdJ,EAeIC,kBAfJ,CAlBuB,CAA3B;EAqCA,MAAMgB,SAAS,GAAGC,aAAQ,CAACtJ,IAAD,EAAOvH,IAAP,EAAa6E,IAAb,EAAmB;EACzCiM,IAAAA,OAAO,EAAE,MADgC;EAEzCC,IAAAA,SAAS,EAAE;EAF8B,GAAnB,CAA1B;EAKA,MAAMC,SAAwC,GAAG;EAC7C/Q,IAAAA,WAAW,EAAE,IADgC;EAE7CgR,IAAAA,IAAI,EAAE,IAFuC;EAG7CjR,IAAAA,IAAI,EAAE,IAHuC;EAI7CkR,IAAAA,IAAI,EAAE,IAJuC;EAK7CxP,IAAAA,OAAO,EAAE,IALoC;EAM7CyF,IAAAA,OAAO,EAAE;EANoC,GAAjD;;EASA,MAAIE,MAAM,CAAC0E,QAAP,CAAgB,aAAhB,CAAJ,EAAoC;EAChCiF,IAAAA,SAAS,CAAC/Q,WAAV,GACIc,eAAC,cAAD;EAAkC,MAAA,IAAI,EAAEf,IAAxC;EAA8C,MAAA,WAAW,EAAEC;EAA3D,OAAoB,aAApB,CADJ;EAGH;;EAED,MAAIoH,MAAM,CAAC0E,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;EACzBiF,IAAAA,SAAS,CAACC,IAAV,GACIlQ,eAACoQ,SAAD;EAEI,MAAA,MAAM,EAAE/G,MAFZ;EAGI,MAAA,MAAM,EAAEC,MAHZ;EAII,MAAA,KAAK,EAAE8F,UAJX;EAKI,MAAA,MAAM,EAAEC,WALZ;EAMI,MAAA,GAAG,EAAEd,OANT;EAOI,MAAA,KAAK,EAAEC,SAPX;EAQI,MAAA,MAAM,EAAErJ,UARZ;EASI,MAAA,IAAI,EAAEC;EATV,OACQ,MADR,CADJ;EAaH;;EAED,MAAIkB,MAAM,CAAC0E,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;EACzBiF,IAAAA,SAAS,CAAChR,IAAV,GACIe,eAACqQ,cAAD;EAAA,gBACKf,UAAU,CAAC,UAACpO,KAAD,EAAQ3B,GAAR;EAAA,eACRwD,mBAAa,CAACwD,YAAD,oCACNqJ,WADM;EAETrQ,UAAAA,GAAG,EAAHA,GAFS;EAGT2B,UAAAA,KAAK,EAALA,KAHS;EAITW,UAAAA,iBAAiB,EAAEoM,oBAAoB,CAAC1O,GAAD,CAJ9B;EAKTqC,UAAAA,KAAK,EAAE6L,QAAQ,CAAClO,GAAG,CAACF,IAAL;EALN,WADL;EAAA,OAAD;EADf,OAAc,MAAd,CADJ;EAaH;;EAED,MAAIiH,MAAM,CAAC0E,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;EACzBiF,IAAAA,SAAS,CAACE,IAAV,GACInQ,eAACsQ,SAAD;EAEI,MAAA,KAAK,EAAElB,UAFX;EAGI,MAAA,MAAM,EAAEC,WAHZ;EAII,MAAA,MAAM,EAAEhK,WAAW,GAAIgE,MAAJ,GAAqB,IAJ5C;EAKI,MAAA,MAAM,EAAE/D,WAAW,GAAIgE,MAAJ,GAAqB,IAL5C;EAMI,MAAA,OAAO,EAAEmF,WANb;EAOI,MAAA,OAAO,EAAEC;EAPb,OACQ,MADR,CADJ;EAWH;;EAED,MAAIpI,MAAM,CAAC0E,QAAP,CAAgB,SAAhB,CAAJ,EAAgC;EAC5BiF,IAAAA,SAAS,CAACtP,OAAV,GACIX,eAAC,UAAD;EAEI,MAAA,KAAK,EAAEoP,UAFX;EAGI,MAAA,MAAM,EAAEC,WAHZ;EAII,MAAA,OAAO,EAAEjB,eAJb;EAKI,MAAA,WAAW,EAAExN;EALjB,OACQ,SADR,CADJ;EASH;;EAED,MAAI0F,MAAM,CAAC0E,QAAP,CAAgB,SAAhB,CAAJ,EAAgC;EAC5BiF,IAAAA,SAAS,CAAC7J,OAAV,GACIpG,eAACuQ,qBAAD;EAEI,MAAA,OAAO,EAAEnK,OAFb;EAGI,MAAA,KAAK,EAAEgJ,UAHX;EAII,MAAA,MAAM,EAAEC,WAJZ;EAKI,MAAA,MAAM,EAAEhG,MALZ;EAMI,MAAA,MAAM,EAAEC;EANZ,OACQ,SADR,CADJ;EAUH;;EAGD,MAAMkH,YAAiB,GAAG1N,aAAO,CAC7B;EAAA,6CACO8M,WADP;EAEIrG,MAAAA,MAAM,EAANA,MAFJ;EAGI6F,MAAAA,UAAU,EAAVA,UAHJ;EAIIC,MAAAA,WAAW,EAAXA,WAJJ;EAKI5P,MAAAA,KAAK,EAALA,KALJ;EAMIE,MAAAA,MAAM,EAANA,MANJ;EAOIV,MAAAA,IAAI,EAAJA,IAPJ;EAQIoK,MAAAA,MAAM,EAANA,MARJ;EASIC,MAAAA,MAAM,EAANA;EATJ;EAAA,GAD6B,EAY7B,CAACsG,WAAD,EAAcrG,MAAd,EAAsB6F,UAAtB,EAAkCC,WAAlC,EAA+C5P,KAA/C,EAAsDE,MAAtD,EAA8DV,IAA9D,EAAoEoK,MAApE,EAA4EC,MAA5E,CAZ6B,CAAjC;EAeA,SACItJ,eAACyQ,eAAD;EACI,IAAA,KAAK,EAAEvB,UADX;EAEI,IAAA,MAAM,EAAEC,WAFZ;EAGI,IAAA,MAAM,EAAE5F,MAHZ;EAII,IAAA,IAAI,EAAEsG,SAJV;EAKI,IAAA,IAAI,EAAElJ,IALV;EAMI,IAAA,SAAS,EAAEvE,SANf;EAOI,IAAA,cAAc,EAAEC,cAPpB;EAQI,IAAA,eAAe,EAAEC,eARrB;EASI,IAAA,WAAW,EAAEH,WATjB;EAAA,cAWKmE,MAAM,CAACrG,GAAP,CAAW,UAACyQ,KAAD,EAAQvQ,CAAR,EAAc;EAAA;;EACtB,UAAI,OAAOuQ,KAAP,KAAiB,UAArB,EAAiC;EAC7B,eAAO1Q,eAACqQ,cAAD;EAAA,oBAAmBtN,mBAAa,CAAC2N,KAAD,EAAQF,YAAR;EAAhC,WAAerQ,CAAf,CAAP;EACH;;EAED,iCAAO8P,SAAP,aAAOA,SAAP,uBAAOA,SAAS,CAAGS,KAAH,CAAhB,+DAA6B,IAA7B;EACH,KANA;EAXL,IADJ;EAqBH,CAlXD;;MAoXaC,GAAG,GAAG,SAANA,GAAM;EAAA,kCACf7O,aADe;EAAA,MACfA,aADe,oCACCuE,eAAe,CAACvE,aADjB;EAAA,4BAEf2E,OAFe;EAAA,MAEfA,OAFe,8BAELJ,eAAe,CAACI,OAFX;EAAA,iCAGfC,YAHe;EAAA,MAGfA,YAHe,mCAGAL,eAAe,CAACK,YAHhB;EAAA,MAIfnE,KAJe,SAIfA,KAJe;EAAA,MAKfqO,aALe,SAKfA,aALe;EAAA,MAMZC,UANY;;EAAA,SAQf7Q,eAAC8Q,cAAD;EAEQrK,IAAAA,OAAO,EAAPA,OAFR;EAGQ3E,IAAAA,aAAa,EAAbA,aAHR;EAIQ4E,IAAAA,YAAY,EAAZA,YAJR;EAKQkK,IAAAA,aAAa,EAAbA,aALR;EAMQrO,IAAAA,KAAK,EAALA,KANR;EAAA,cASIvC,eAAC,QAAD;EAAoB,MAAA,aAAa,EAAE8B;EAAnC,OAAsD+O,UAAtD;EATJ,IARe;EAAA;;EChWnB,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CACvBC,KADuB,EAEvBzH,MAFuB,EAGvB/J,CAHuB,EAIvBE,CAJuB;EAAA,SAMvBsR,KAAK,CAAC7C,IAAN,CAAW,UAAA8C,IAAI;EAAA,WACXC,mBAAc,CAACD,IAAI,CAACzR,CAAL,GAAS+J,MAAM,CAACc,IAAjB,EAAuB4G,IAAI,CAACvR,CAAL,GAAS6J,MAAM,CAACe,GAAvC,EAA4C2G,IAAI,CAACxR,KAAjD,EAAwDwR,IAAI,CAACtR,MAA7D,EAAqEH,CAArE,EAAwEE,CAAxE,CADH;EAAA,GAAf,CANuB;EAAA,CAA3B;;EAUA,IAAMyR,QAAQ,GAAG,SAAXA,QAAW,CAACtN,KAAD;EAAA,SAAqC,OAAOA,KAAP,KAAiB,QAAtD;EAAA,CAAjB;;EAEA,IAAMuN,cAAc,GAAG,SAAjBA,cAAiB,OAkHc;EAAA,MAjHjC/R,IAiHiC,QAjHjCA,IAiHiC;EAAA,MAhHjCiF,OAgHiC,QAhHjCA,OAgHiC;EAAA,MA/GjCC,IA+GiC,QA/GjCA,IA+GiC;EAAA,MA7GzB+J,aA6GyB,QA7GjC/E,MA6GiC;EAAA,MA5GjC9J,KA4GiC,QA5GjCA,KA4GiC;EAAA,MA3GjCE,MA2GiC,QA3GjCA,MA2GiC;EAAA,MAzGjC6E,SAyGiC,QAzGjCA,SAyGiC;EAAA,MAxGjCC,MAwGiC,QAxGjCA,MAwGiC;EAAA,MAvGjCC,OAuGiC,QAvGjCA,OAuGiC;EAAA,MAtGjCC,QAsGiC,QAtGjCA,QAsGiC;EAAA,MArGjCC,QAqGiC,QArGjCA,QAqGiC;EAAA,MAnGjCC,UAmGiC,QAnGjCA,UAmGiC;EAAA,MAlGjCE,UAkGiC,QAlGjCA,UAkGiC;EAAA,MAhGjCE,OAgGiC,QAhGjCA,OAgGiC;EAAA,MA/FjCC,YA+FiC,QA/FjCA,YA+FiC;EAAA,MA7FjCqJ,OA6FiC,QA7FjCA,OA6FiC;EAAA,MA5FjCC,SA4FiC,QA5FjCA,SA4FiC;EAAA,6BA3FjCrJ,UA2FiC;EAAA,MA3FjCA,UA2FiC,gCA3FpByB,kBAAkB,CAACzB,UA2FC;EAAA,2BA1FjCC,QA0FiC;EAAA,MA1FjCA,QA0FiC,8BA1FtBwB,kBAAkB,CAACxB,QA0FG;EAAA,8BAzFjCC,WAyFiC;EAAA,MAzFjCA,WAyFiC,iCAzFnBuB,kBAAkB,CAACvB,WAyFA;EAAA,8BAxFjCC,WAwFiC;EAAA,MAxFjCA,WAwFiC,iCAxFnBsB,kBAAkB,CAACtB,WAwFA;EAAA,MAvFjCmJ,WAuFiC,QAvFjCA,WAuFiC;EAAA,MAtFjCC,WAsFiC,QAtFjCA,WAsFiC;EAAA,yBApFjCpI,MAoFiC;EAAA,MApFjCA,MAoFiC,4BApFxBM,kBAAkB,CAACN,MAoFK;EAAA,4BAnFjC+K,SAmFiC;EAAA,MAnFjCA,SAmFiC,+BAnFrB,UACRC,GADQ,SAYP;EAAA,0BATG/R,GASH;EAAA,QATU6B,KASV,aATUA,KASV;EAAA,QATiBzB,MASjB,aATiBA,MASjB;EAAA,QATyBF,KASzB,aATyBA,KASzB;EAAA,QATgCD,CAShC,aATgCA,CAShC;EAAA,QATmCE,CASnC,aATmCA,CASnC;EAAA,QAPGyB,WAOH,SAPGA,WAOH;EAAA,QANGO,YAMH,SANGA,YAMH;EAAA,QALGC,WAKH,SALGA,WAKH;EAAA,QAJGC,KAIH,SAJGA,KAIH;EAAA,QAHGP,UAGH,SAHGA,UAGH;EAAA,QAFGQ,iBAEH,SAFGA,iBAEH;EACDyP,IAAAA,GAAG,CAACC,SAAJ,GAAgBnQ,KAAhB;;EAEA,QAAIO,WAAW,GAAG,CAAlB,EAAqB;EACjB2P,MAAAA,GAAG,CAACE,WAAJ,GAAkBrQ,WAAlB;EACAmQ,MAAAA,GAAG,CAACG,SAAJ,GAAgB9P,WAAhB;EACH;;EAED2P,IAAAA,GAAG,CAACI,SAAJ;;EAEA,QAAIhQ,YAAY,GAAG,CAAnB,EAAsB;EAClB,UAAMiQ,MAAM,GAAG7R,IAAI,CAAC0H,GAAL,CAAS9F,YAAT,EAAuB/B,MAAvB,CAAf;EAEA2R,MAAAA,GAAG,CAACM,MAAJ,CAAWpS,CAAC,GAAGmS,MAAf,EAAuBjS,CAAvB;EACA4R,MAAAA,GAAG,CAACO,MAAJ,CAAWrS,CAAC,GAAGC,KAAJ,GAAYkS,MAAvB,EAA+BjS,CAA/B;EACA4R,MAAAA,GAAG,CAACQ,gBAAJ,CAAqBtS,CAAC,GAAGC,KAAzB,EAAgCC,CAAhC,EAAmCF,CAAC,GAAGC,KAAvC,EAA8CC,CAAC,GAAGiS,MAAlD;EACAL,MAAAA,GAAG,CAACO,MAAJ,CAAWrS,CAAC,GAAGC,KAAf,EAAsBC,CAAC,GAAGC,MAAJ,GAAagS,MAAnC;EACAL,MAAAA,GAAG,CAACQ,gBAAJ,CAAqBtS,CAAC,GAAGC,KAAzB,EAAgCC,CAAC,GAAGC,MAApC,EAA4CH,CAAC,GAAGC,KAAJ,GAAYkS,MAAxD,EAAgEjS,CAAC,GAAGC,MAApE;EACA2R,MAAAA,GAAG,CAACO,MAAJ,CAAWrS,CAAC,GAAGmS,MAAf,EAAuBjS,CAAC,GAAGC,MAA3B;EACA2R,MAAAA,GAAG,CAACQ,gBAAJ,CAAqBtS,CAArB,EAAwBE,CAAC,GAAGC,MAA5B,EAAoCH,CAApC,EAAuCE,CAAC,GAAGC,MAAJ,GAAagS,MAApD;EACAL,MAAAA,GAAG,CAACO,MAAJ,CAAWrS,CAAX,EAAcE,CAAC,GAAGiS,MAAlB;EACAL,MAAAA,GAAG,CAACQ,gBAAJ,CAAqBtS,CAArB,EAAwBE,CAAxB,EAA2BF,CAAC,GAAGmS,MAA/B,EAAuCjS,CAAvC;EACA4R,MAAAA,GAAG,CAACS,SAAJ;EACH,KAbD,MAaO;EACHT,MAAAA,GAAG,CAACU,IAAJ,CAASxS,CAAT,EAAYE,CAAZ,EAAeD,KAAf,EAAsBE,MAAtB;EACH;;EAED2R,IAAAA,GAAG,CAACxN,IAAJ;;EAEA,QAAInC,WAAW,GAAG,CAAlB,EAAqB;EACjB2P,MAAAA,GAAG,CAACW,MAAJ;EACH;;EAED,QAAIpQ,iBAAJ,EAAuB;EACnByP,MAAAA,GAAG,CAACY,YAAJ,GAAmB,QAAnB;EACAZ,MAAAA,GAAG,CAACa,SAAJ,GAAgB,QAAhB;EACAb,MAAAA,GAAG,CAACC,SAAJ,GAAgBlQ,UAAhB;EACAiQ,MAAAA,GAAG,CAACc,QAAJ,CAAaxQ,KAAb,EAAoBpC,CAAC,GAAGC,KAAK,GAAG,CAAhC,EAAmCC,CAAC,GAAGC,MAAM,GAAG,CAAhD;EACH;EACJ,GAgCgC;EAAA,MA9BjC4F,WA8BiC,QA9BjCA,WA8BiC;EAAA,MA7BjC3D,KA6BiC,QA7BjCA,KA6BiC;EAAA,MA5BjC4D,cA4BiC,QA5BjCA,cA4BiC;EAAA,MA3BjCC,eA2BiC,QA3BjCA,eA2BiC;EAAA,MA1BjCC,cA0BiC,QA1BjCA,cA0BiC;EAAA,MAxBjCE,OAwBiC,QAxBjCA,OAwBiC;EAAA,MAvBjCC,MAuBiC,QAvBjCA,MAuBiC;EAAA,+BAtBjCnE,YAsBiC;EAAA,MAtBjCA,YAsBiC,kCAtBlBkF,kBAAkB,CAAClF,YAsBD;EAAA,8BArBjCC,WAqBiC;EAAA,MArBjCA,WAqBiC,iCArBnBiF,kBAAkB,CAACjF,WAqBA;EAAA,MApBjCR,WAoBiC,QApBjCA,WAoBiC;EAAA,8BAlBjCjC,WAkBiC;EAAA,MAlBjCA,aAkBiC,iCAlBnB0H,kBAAkB,CAAC1H,WAkBA;EAAA,MAhBjC8N,WAgBiC,QAhBjCA,WAgBiC;EAAA,MAfjCjH,YAeiC,QAfjCA,YAeiC;EAAA,MAbjCoH,WAaiC,QAbjCA,WAaiC;EAAA,gCAXjCrL,aAWiC;EAAA,MAXjCA,aAWiC,mCAXjB8E,kBAAkB,CAAC9E,aAWF;EAAA,0BAVjCI,OAUiC;EAAA,MAVjCA,SAUiC,6BAVvB0E,kBAAkB,CAAC1E,OAUI;EAAA,MATjCH,OASiC,QATjCA,OASiC;EAAA,MARjCC,YAQiC,QARjCA,YAQiC;EAAA,MAPjCC,YAOiC,QAPjCA,YAOiC;EAAA,MALjCtB,SAKiC,QALjCA,OAKiC;EAAA,6BAHjCkG,UAGiC;EAAA,MAHjCA,UAGiC,gCAHpBD,kBAAkB,CAACC,UAGC;EAAA,MADjCwL,SACiC,QADjCA,SACiC;EACjC,MAAMC,QAAQ,GAAGC,YAAM,CAA2B,IAA3B,CAAvB;EAEA,MAAMhQ,KAAK,GAAGC,aAAQ,EAAtB;;EAHiC,uBAIoCyM,kBAAa,CAC9ExP,KAD8E,EAE9EE,MAF8E,EAG9E2O,aAH8E,CAJjD;EAAA,MAIzB/E,MAJyB,kBAIzBA,MAJyB;EAAA,MAIjB6F,UAJiB,kBAIjBA,UAJiB;EAAA,MAILC,WAJK,kBAILA,WAJK;EAAA,MAIQH,UAJR,kBAIQA,UAJR;EAAA,MAIoBC,WAJpB,kBAIoBA,WAJpB;;EAAA,gBAqB7BjC,MAAM,CAAW;EACjB5I,IAAAA,OAAO,EAAPA,OADiB;EAEjB1C,IAAAA,KAAK,EAALA,KAFiB;EAGjBmE,IAAAA,YAAY,EAAZA,YAHiB;EAIjBoH,IAAAA,WAAW,EAAXA,WAJiB;EAKjBtH,IAAAA,MAAM,EAANA,MALiB;EAMjBD,IAAAA,OAAO,EAAPA,OANiB;EAOjBzE,IAAAA,WAAW,EAAXA,WAPiB;EAQjBuE,IAAAA,cAAc,EAAdA,cARiB;EASjBlB,IAAAA,SAAS,EAATA,SATiB;EAUjBC,IAAAA,MAAM,EAANA,MAViB;EAWjBC,IAAAA,OAAO,EAAPA,OAXiB;EAYjBrF,IAAAA,IAAI,EAAJA,IAZiB;EAajBkF,IAAAA,IAAI,EAAJA,IAbiB;EAcjBI,IAAAA,QAAQ,EAARA,QAdiB;EAejBC,IAAAA,QAAQ,EAARA,QAfiB;EAgBjB2E,IAAAA,MAAM,EAANA,MAhBiB;EAiBjB9J,IAAAA,KAAK,EAAE2P,UAjBU;EAkBjBzP,IAAAA,MAAM,EAAE0P,WAlBS;EAmBjBpK,IAAAA,OAAO,EAAPA,OAnBiB;EAoBjBC,IAAAA,YAAY,EAAZA,YApBiB;EAqBjBL,IAAAA,UAAU,EAAVA,UArBiB;EAsBjBE,IAAAA,UAAU,EAAVA,UAtBiB;EAuBjBQ,IAAAA,WAAW,EAAXA,WAvBiB;EAwBjBC,IAAAA,cAAc,EAAdA,cAxBiB;EAyBjBC,IAAAA,eAAe,EAAfA,eAzBiB;EA0BjB9E,IAAAA,OAAO,EAAPA,SA1BiB;EA2BjBqM,IAAAA,WAAW,EAAXA;EA3BiB,GAAX,CArBuB;EAAA,MAW7B/N,IAX6B,WAW7BA,IAX6B;EAAA,MAY7B+O,aAZ6B,WAY7BA,aAZ6B;EAAA,MAa7B3E,MAb6B,WAa7BA,MAb6B;EAAA,MAc7BC,MAd6B,WAc7BA,MAd6B;EAAA,MAe7BmE,QAf6B,WAe7BA,QAf6B;EAAA,MAgB7BrE,eAhB6B,WAgB7BA,eAhB6B;EAAA,MAiB7BwE,cAjB6B,WAiB7BA,cAjB6B;EAAA,MAkB7BE,aAlB6B,WAkB7BA,aAlB6B;EAAA,MAmB7BG,oBAnB6B,WAmB7BA,oBAnB6B;EAAA,MAoB7BG,eApB6B,WAoB7BA,eApB6B;;EAAA,oBAmDa3L,kBAAU,EAnDvB;EAAA,MAmDzBC,oBAnDyB,eAmDzBA,oBAnDyB;EAAA,MAmDHE,WAnDG,eAmDHA,WAnDG;;EAsDjC,MAAMzD,gBAAqB,GAAGqT,kCAAsB,CAAC;EACjDtT,IAAAA,WAAW,EAAEE,0BAAc,CAAC;EACxBC,MAAAA,IAAI,EAAEJ,IADkB;EAExBC,MAAAA,WAAW,EAAXA,aAFwB;EAGxBI,MAAAA,WAAW,EAAE,qBAAA2R,IAAI;EAAA,eAAK;EAClBzR,UAAAA,CAAC,EAAEyR,IAAI,CAACzR,CADU;EAElBE,UAAAA,CAAC,EAAEuR,IAAI,CAACvR;EAFU,SAAL;EAAA,OAHO;EAOxBE,MAAAA,aAAa,EAAE;EAAA,YAAGH,KAAH,SAAGA,KAAH;EAAA,YAAUE,MAAV,SAAUA,MAAV;EAAA,eAAwB;EACnCF,UAAAA,KAAK,EAALA,KADmC;EAEnCE,UAAAA,MAAM,EAANA,MAFmC;EAGnCE,UAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,CAASN,KAAT,EAAgBE,MAAhB;EAH6B,SAAxB;EAAA;EAPS,KAAD;EADsB,GAAD,CAApD;EAiBA,MAAM6Q,YAAiB,GAAG1N,aAAO,CAC7B;EAAA,WAAO;EACHpB,MAAAA,YAAY,EAAZA,YADG;EAEHC,MAAAA,WAAW,EAAXA,WAFG;EAGH4D,MAAAA,WAAW,EAAXA,WAHG;EAIHzD,MAAAA,aAAa,EAAbA,aAJG;EAKH0D,MAAAA,cAAc,EAAdA,cALG;EAMHC,MAAAA,eAAe,EAAfA,eANG;EAOH1D,MAAAA,OAAO,EAAPA,OAPG;EAQHC,MAAAA,YAAY,EAAZA,YARG;EASHC,MAAAA,YAAY,EAAZA,YATG;EAUHmH,MAAAA,eAAe,EAAfA,eAVG;EAWHlH,MAAAA,OAAO,EAAPA,SAXG;EAYHqH,MAAAA,MAAM,EAANA,MAZG;EAaH6F,MAAAA,UAAU,EAAVA,UAbG;EAcHC,MAAAA,WAAW,EAAXA,WAdG;EAeH5P,MAAAA,KAAK,EAALA,KAfG;EAgBHE,MAAAA,MAAM,EAANA,MAhBG;EAiBHV,MAAAA,IAAI,EAAJA,IAjBG;EAkBHoK,MAAAA,MAAM,EAANA,MAlBG;EAmBHC,MAAAA,MAAM,EAANA;EAnBG,KAAP;EAAA,GAD6B,EAsB7B,CACI5H,YADJ,EAEIC,WAFJ,EAGI4D,WAHJ,EAII6D,eAJJ,EAKIzJ,MALJ,EAMI0P,WANJ,EAOID,UAPJ,EAQItN,aARJ,EASI2D,eATJ,EAUID,cAVJ,EAWI+D,MAXJ,EAYIxH,OAZJ,EAaIC,YAbJ,EAcIC,YAdJ,EAeIhD,IAfJ,EAgBIoK,MAhBJ,EAiBIC,MAjBJ,EAkBIpH,SAlBJ,EAmBIzC,KAnBJ,CAtB6B,CAAjC;EA6CAgT,EAAAA,eAAS,CAAC,YAAM;EAAA;;EACZ,QAAMnB,GAAG,wBAAGgB,QAAQ,CAACI,OAAZ,sDAAG,kBAAkBC,UAAlB,CAA6B,IAA7B,CAAZ;EAEA,QAAI,CAACL,QAAQ,CAACI,OAAd,EAAuB;EACvB,QAAI,CAACpB,GAAL,EAAU;EAEVgB,IAAAA,QAAQ,CAACI,OAAT,CAAiBjT,KAAjB,GAAyByP,UAAU,GAAGrI,UAAtC;EACAyL,IAAAA,QAAQ,CAACI,OAAT,CAAiB/S,MAAjB,GAA0BwP,WAAW,GAAGtI,UAAxC;EAEAyK,IAAAA,GAAG,CAAC9F,KAAJ,CAAU3E,UAAV,EAAsBA,UAAtB;EAEAyK,IAAAA,GAAG,CAACC,SAAJ,GAAgBhP,KAAK,CAACqQ,UAAtB;EACAtB,IAAAA,GAAG,CAACuB,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB3D,UAAnB,EAA+BC,WAA/B;EACAmC,IAAAA,GAAG,CAACwB,SAAJ,CAAcvJ,MAAM,CAACc,IAArB,EAA2Bd,MAAM,CAACe,GAAlC;EAEAhE,IAAAA,MAAM,CAACuD,OAAP,CAAe,UAAA6G,KAAK,EAAI;EACpB,UAAIA,KAAK,KAAK,MAAd,EAAsB;EAClB,YAAIS,QAAQ,CAAC5O,KAAK,CAAC4N,IAAN,CAAW4C,IAAX,CAAgBC,WAAjB,CAAR,IAAyCzQ,KAAK,CAAC4N,IAAN,CAAW4C,IAAX,CAAgBC,WAAhB,GAA8B,CAA3E,EAA8E;EAC1E1B,UAAAA,GAAG,CAACG,SAAJ,GAAgBlP,KAAK,CAAC4N,IAAN,CAAW4C,IAAX,CAAgBC,WAAhC;EACA1B,UAAAA,GAAG,CAACE,WAAJ,GAAkBjP,KAAK,CAAC4N,IAAN,CAAW4C,IAAX,CAAgBd,MAAlC;;EAEA,cAAI5M,WAAJ,EAAiB;EACb4N,YAAAA,4BAAuB,CAAkB3B,GAAlB,EAAuB;EAC1C7R,cAAAA,KAAK,EAALA,KAD0C;EAE1CE,cAAAA,MAAM,EAANA,MAF0C;EAG1C6L,cAAAA,KAAK,EAAEnC,MAHmC;EAI1ChC,cAAAA,IAAI,EAAE,GAJoC;EAK1C+D,cAAAA,MAAM,EAAEqD;EALkC,aAAvB,CAAvB;EAOH;;EAED,cAAInJ,WAAJ,EAAiB;EACb2N,YAAAA,4BAAuB,CAAkB3B,GAAlB,EAAuB;EAC1C7R,cAAAA,KAAK,EAALA,KAD0C;EAE1CE,cAAAA,MAAM,EAANA,MAF0C;EAG1C6L,cAAAA,KAAK,EAAElC,MAHmC;EAI1CjC,cAAAA,IAAI,EAAE,GAJoC;EAK1C+D,cAAAA,MAAM,EAAEsD;EALkC,aAAvB,CAAvB;EAOH;EACJ;EACJ,OAzBD,MAyBO,IAAIgC,KAAK,KAAK,MAAd,EAAsB;EACzBwC,QAAAA,uBAAkB,CAAC5B,GAAD,EAAM;EACpBjI,UAAAA,MAAM,EAAEA,MADY;EAEpBC,UAAAA,MAAM,EAAEA,MAFY;EAGpB7J,UAAAA,KAAK,EAAE2P,UAHa;EAIpBzP,UAAAA,MAAM,EAAE0P,WAJY;EAKpB/E,UAAAA,GAAG,EAAEiE,OALe;EAMpB4E,UAAAA,KAAK,EAAE3E,SANa;EAOpB4E,UAAAA,MAAM,EAAEjO,UAPY;EAQpBkF,UAAAA,IAAI,EAAEjF,QARc;EASpB7C,UAAAA,KAAK,EAALA;EAToB,SAAN,CAAlB;EAWH,OAZM,MAYA,IAAImO,KAAK,KAAK,MAAd,EAAsB;EACzB1C,QAAAA,aAAa,CAACnE,OAAd,CAAsB,UAAAtK,GAAG,EAAI;EACzB8R,UAAAA,SAAS,CAACC,GAAD,EAAM;EACX/R,YAAAA,GAAG,EAAHA,GADW;EAEX4B,YAAAA,WAAW,EAAEyM,cAAc,CAACrO,GAAD,CAFhB;EAGXmC,YAAAA,YAAY,EAAZA,YAHW;EAIXC,YAAAA,WAAW,EAAXA,WAJW;EAKXC,YAAAA,KAAK,EAAE6L,QAAQ,CAAClO,GAAG,CAACF,IAAL,CALJ;EAMXgC,YAAAA,UAAU,EAAEyM,aAAa,CAACvO,GAAD,CANd;EAOXsC,YAAAA,iBAAiB,EAAEoM,oBAAoB,CAAC1O,GAAD;EAP5B,WAAN,CAAT;EASH,SAVD;EAWH,OAZM,MAYA,IAAImR,KAAK,KAAK,SAAd,EAAyB;EAC5BtC,QAAAA,eAAe,CAACvE,OAAhB,CAAwB,iBAAoB;EAAA;EAAA,cAAlBhJ,MAAkB;EAAA,cAAVxB,IAAU;;EACxCgU,UAAAA,4BAAoB,CAAC/B,GAAD,oCACbzQ,MADa;EAEhBxB,YAAAA,IAAI,EAAJA,IAFgB;EAGhBiU,YAAAA,cAAc,EAAElE,UAHA;EAIhBmE,YAAAA,eAAe,EAAElE,WAJD;EAKhB9M,YAAAA,KAAK,EAALA;EALgB,aAApB;EAOH,SARD;EASH,OAVM,MAUA,IAAImO,KAAK,KAAK,aAAd,EAA6B;EAChC8C,QAAAA,qCAAyB,CAAClC,GAAD,EAAM;EAAEpS,UAAAA,WAAW,EAAEC,gBAAf;EAAiCoD,UAAAA,KAAK,EAALA;EAAjC,SAAN,CAAzB;EACH,OAFM,MAEA,IAAI,OAAOmO,KAAP,KAAiB,UAArB,EAAiC;EACpCA,QAAAA,KAAK,CAACY,GAAD,EAAMd,YAAN,CAAL;EACH;EACJ,KAjED;EAmEAc,IAAAA,GAAG,CAACmC,IAAJ;EACH,GAnFQ,EAmFN,CACCtO,UADD,EAECC,QAFD,EAGCoJ,SAHD,EAICD,OAJD,EAKCP,aALD,EAMCtM,YAND,EAOCC,WAPD,EAQCxC,gBARD,EASCkG,WATD,EAUCC,WAVD,EAWCsI,cAXD,EAYCH,QAZD,EAaCK,aAbD,EAcCW,WAdD,EAeCC,WAfD,EAgBClK,SAhBD,EAiBC7E,MAjBD,EAkBC0P,WAlBD,EAmBCD,UAnBD,EAoBCoB,YApBD,EAqBClK,MArBD,EAsBC7B,MAtBD,EAuBC2J,eAvBD,EAwBC7E,MAAM,CAACc,IAxBR,EAyBCd,MAAM,CAACe,GAzBR,EA0BC6E,WA1BD,EA2BCD,UA3BD,EA4BCrI,UA5BD,EA6BCwK,SA7BD,EA8BChI,MA9BD,EA+BCC,MA/BD,EAgCC5E,OAhCD,EAiCCuJ,oBAjCD,EAkCC1L,KAlCD,EAmCC9C,KAnCD,CAnFM,CAAT;EAyHA,MAAMiU,gBAAgB,GAAGzQ,iBAAW,CAChC,UAACC,KAAD,EAAgD;EAC5C,QAAI,CAACjE,IAAL,EAAW;EACX,QAAI,CAACqT,QAAQ,CAACI,OAAd,EAAuB;;EAFqB,6BAI7BiB,sBAAiB,CAACrB,QAAQ,CAACI,OAAV,EAAmBxP,KAAnB,CAJY;EAAA;EAAA,QAIrC1D,CAJqC;EAAA,QAIlCE,CAJkC;;EAK5C,QAAMH,GAAG,GAAGwR,kBAAkB,CAAC9R,IAAD,EAAOsK,MAAP,EAAe/J,CAAf,EAAkBE,CAAlB,CAA9B;;EAEA,QAAIH,GAAG,KAAKyB,SAAZ,EAAuB;EACnB0B,MAAAA,oBAAoB,CAChBK,mBAAa,CAACb,SAAD,oCACN3C,GAAG,CAACF,IADE;EAET+B,QAAAA,KAAK,EAAE7B,GAAG,CAAC6B,KAFF;EAGTQ,QAAAA,KAAK,EAAErC,GAAG,CAACqC,KAHF;EAITiC,QAAAA,KAAK,EAAEoE,MAAM,CAAC1I,GAAG,CAACF,IAAJ,CAASwE,KAAV;EAJJ,SADG,EAOhBX,KAPgB,CAApB;;EAUA,UAAIA,KAAK,CAAC4B,IAAN,KAAe,YAAnB,EAAiC;EAC7B9C,QAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGzC,GAAG,CAACF,IAAP,EAAa6D,KAAb,CAAZ;EACH;EACJ,KAdD,MAcO;EACHN,MAAAA,WAAW;EACd;EACJ,GAzB+B,EA0BhC,CAACA,WAAD,EAAc2G,MAAd,EAAsBvH,YAAtB,EAAoC/C,IAApC,EAA0CyD,oBAA1C,EAAgER,SAAhE,CA1BgC,CAApC;EA6BA,MAAMmB,gBAAgB,GAAGJ,iBAAW,CAChC,UAACC,KAAD,EAAgD;EAC5C,QAAI,CAACjE,IAAL,EAAW;EACX,QAAI,CAACqT,QAAQ,CAACI,OAAd,EAAuB;EAEvB9P,IAAAA,WAAW;;EAJiC,8BAM7B+Q,sBAAiB,CAACrB,QAAQ,CAACI,OAAV,EAAmBxP,KAAnB,CANY;EAAA;EAAA,QAMrC1D,CANqC;EAAA,QAMlCE,CANkC;;EAO5C,QAAMH,GAAG,GAAGwR,kBAAkB,CAAC9R,IAAD,EAAOsK,MAAP,EAAe/J,CAAf,EAAkBE,CAAlB,CAA9B;;EAEA,QAAIH,GAAJ,EAAS;EACL0C,MAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAG1C,GAAG,CAACF,IAAP,EAAa6D,KAAb,CAAZ;EACH;EACJ,GAb+B,EAchC,CAACN,WAAD,EAAc2G,MAAd,EAAsBtH,YAAtB,EAAoChD,IAApC,CAdgC,CAApC;EAiBA,MAAM+D,WAAW,GAAGC,iBAAW,CAC3B,UAACC,KAAD,EAAgD;EAC5C,QAAI,CAACjE,IAAL,EAAW;EACX,QAAI,CAACqT,QAAQ,CAACI,OAAd,EAAuB;;EAFqB,8BAI7BiB,sBAAiB,CAACrB,QAAQ,CAACI,OAAV,EAAmBxP,KAAnB,CAJY;EAAA;EAAA,QAIrC1D,CAJqC;EAAA,QAIlCE,CAJkC;;EAK5C,QAAMH,GAAG,GAAGwR,kBAAkB,CAAC9R,IAAD,EAAOsK,MAAP,EAAe/J,CAAf,EAAkBE,CAAlB,CAA9B;;EAEA,QAAIH,GAAG,KAAKyB,SAAZ,EAAuB;EACnBe,MAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,mCAAQxC,GAAG,CAACF,IAAZ;EAAkB+B,QAAAA,KAAK,EAAE7B,GAAG,CAAC6B;EAA7B,UAAsC8B,KAAtC,CAAP;EACH;EACJ,GAX0B,EAY3B,CAACqG,MAAD,EAASxH,OAAT,EAAkB9C,IAAlB,CAZ2B,CAA/B;EAeA,SACIe;EACI,IAAA,GAAG,EAAE,aAAA4T,MAAM,EAAI;EACXtB,MAAAA,QAAQ,CAACI,OAAT,GAAmBkB,MAAnB;EACA,UAAIvB,SAAS,IAAI,aAAaA,SAA9B,EAAyCA,SAAS,CAACK,OAAV,GAAoBkB,MAApB;EAC5C,KAJL;EAKI,IAAA,KAAK,EAAE1E,UAAU,GAAGrI,UALxB;EAMI,IAAA,MAAM,EAAEsI,WAAW,GAAGtI,UAN1B;EAOI,IAAA,KAAK,EAAE;EACHpH,MAAAA,KAAK,EAAEyP,UADJ;EAEHvP,MAAAA,MAAM,EAAEwP,WAFL;EAGH0E,MAAAA,MAAM,EAAE/R,aAAa,GAAG,MAAH,GAAY;EAH9B,KAPX;EAYI,IAAA,YAAY,EAAEA,aAAa,GAAG4R,gBAAH,GAAsB1S,SAZrD;EAaI,IAAA,WAAW,EAAEc,aAAa,GAAG4R,gBAAH,GAAsB1S,SAbpD;EAcI,IAAA,YAAY,EAAEc,aAAa,GAAGuB,gBAAH,GAAsBrC,SAdrD;EAeI,IAAA,OAAO,EAAEc,aAAa,GAAGkB,WAAH,GAAiBhC;EAf3C,IADJ;EAmBH,CA/aD;;MAiba8S,SAAS,GAAGC,gBAAU,CAC/B,iBAEIC,GAFJ;EAAA,MACMlS,aADN,SACMA,aADN;EAAA,MACqB8O,aADrB,SACqBA,aADrB;EAAA,MACoCrO,KADpC,SACoCA,KADpC;EAAA,MAC8CuI,KAD9C;;EAAA,SAII9K,eAAC8Q,cAAD;EAAiBhP,IAAAA,aAAa,EAAbA,aAAjB;EAAgC8O,IAAAA,aAAa,EAAbA,aAAhC;EAA+CrO,IAAAA,KAAK,EAALA,KAA/C;EAAwD,IAAA,OAAO,EAAE,KAAjE;EAAA,cACIvC,eAAC,cAAD,oCAA8B8K,KAA9B;EAAqC,MAAA,SAAS,EAAEkJ;EAAhD;EADJ,IAJJ;EAAA,CAD+B;;MCpetBC,aAAa,GAAG,SAAhBA,aAAgB,CACzBnJ,KADyB;EAAA,SAGzB9K,eAACkU,sBAAD;EAAA,cACK;EAAA,UAAGzU,KAAH,QAAGA,KAAH;EAAA,UAAUE,MAAV,QAAUA,MAAV;EAAA,aAAuBK,eAAC,GAAD;EAAe,QAAA,KAAK,EAAEP,KAAtB;EAA6B,QAAA,MAAM,EAAEE;EAArC,SAAiDmL,KAAjD,EAAvB;EAAA;EADL,IAHyB;EAAA;;MCChBqJ,mBAAmB,GAAGJ,gBAAU,CAAC,SAASI,mBAAT,CAE5CrJ,KAF4C,EAEekJ,GAFf,EAEqD;EAC/F,SACIhU,eAACkU,sBAAD;EAAA,cACK;EAAA,UAAGzU,KAAH,QAAGA,KAAH;EAAA,UAAUE,MAAV,QAAUA,MAAV;EAAA,aACGK,eAAC,SAAD;EAAW,QAAA,KAAK,EAAEP,KAAlB;EAAyB,QAAA,MAAM,EAAEE;EAAjC,SAA6CmL,KAA7C;EAAoD,QAAA,GAAG,EAAEkJ;EAAzD,SADH;EAAA;EADL,IADJ;EAOH,CAV4C;;;;;;;;;;;;;;;;;;;"}