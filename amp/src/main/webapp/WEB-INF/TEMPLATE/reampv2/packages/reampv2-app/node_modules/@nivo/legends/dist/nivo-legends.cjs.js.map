{"version":3,"file":"nivo-legends.cjs.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/compute.ts","../src/svg/symbols/SymbolCircle.tsx","../src/svg/symbols/SymbolDiamond.tsx","../src/svg/symbols/SymbolSquare.tsx","../src/svg/symbols/SymbolTriangle.tsx","../src/svg/LegendSvgItem.tsx","../src/svg/LegendSvg.tsx","../src/svg/BoxLegendSvg.tsx","../src/canvas.ts","../src/hooks.ts","../src/props.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { BoxLegendSvgProps, LegendAnchor, LegendItemDirection } from './types'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","import { computeDimensions, computePositionFromAnchor, computeItemLayout } from './compute'\nimport { LegendCanvasProps } from './types'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n","import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n        if (reverse === true) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse])\n}\n","import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","isObject","item","Array","isArray","zeroPadding","top","right","bottom","left","computeDimensions","direction","itemsSpacing","_padding","padding","itemCount","itemWidth","itemHeight","Error","horizontalPadding","verticalPadding","width","height","spacing","computePositionFromAnchor","anchor","translateX","translateY","containerWidth","containerHeight","x","y","computeItemLayout","justify","symbolSize","symbolSpacing","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","SymbolCircle","size","fill","opacity","borderWidth","borderColor","_jsx","pointerEvents","SymbolDiamond","SymbolSquare","SymbolTriangle","symbolByShape","circle","diamond","square","triangle","LegendSvgItem","data","textColor","background","symbolShape","symbolBorderWidth","symbolBorderColor","onClick","onMouseEnter","onMouseLeave","toggleSerie","effects","useState","style","setStyle","theme","useTheme","handleMouseEnter","useCallback","event","applyEffects","filter","on","reduce","acc","effect","handleMouseLeave","isInteractive","some","handler","undefined","SymbolShape","_jsxs","itemOpacity","itemBackground","cursor","id","React","color","hidden","legends","symbol","text","itemTextColor","dominantBaseline","userSelect","label","LegendSvg","itemDirection","length","xStep","yStep","map","i","BoxLegendSvg","textAlignMapping","start","middle","end","renderLegendToCanvas","ctx","save","translate","font","fontSize","fontFamily","forEach","d","itemX","itemY","fillStyle","fillRect","textAlign","textBaseline","fillText","String","restore","useQuantizeColorScaleLegendData","scale","overriddenDomain","domain","reverse","valueFormat","v","separator","useMemo","range","items","domainValue","index","invertExtent","extent","value","LegendPropShape","PropTypes","arrayOf","object","oneOf","isRequired","number","string","oneOfType","func","shape"],"mappings":";;;;;;;;;;;AAAe,SAAS,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACzD,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;AAClB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,GAAG,MAAM;AACT,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,GAAG,CAAC;AACb;;ACXA,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,EAAE;AACzC,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAEjC,EAAE,IAAI,MAAM,CAAC,qBAAqB,EAAE;AACpC,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACvD,IAAI,IAAI,cAAc,EAAE,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;AAChE,MAAM,OAAO,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC;AACrE,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACnC,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd,CAAC;AAEc,SAAS,cAAc,CAAC,MAAM,EAAE;AAC/C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAE1D,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;AACf,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AAC3D,QAAQA,eAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,OAAO,CAAC,CAAC;AACT,KAAK,MAAM,IAAI,MAAM,CAAC,yBAAyB,EAAE;AACjD,MAAM,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC;AAChF,KAAK,MAAM;AACX,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AACrD,QAAQ,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;AACzF,OAAO,CAAC,CAAC;AACT,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,MAAM,CAAC;AAChB;;AClCe,SAAS,eAAe,CAAC,GAAG,EAAE;AAC7C,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC;AACrC;;ACFe,SAAS,qBAAqB,CAAC,GAAG,EAAE,CAAC,EAAE;AACtD,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,EAAE,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO;AACjF,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC;AAChB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AAChB,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;AACjB,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC;AAErB,EAAE,IAAI;AACN,IAAI,KAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE;AACxF,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AAE1B,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM;AACxC,KAAK;AACL,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,EAAE,GAAG,IAAI,CAAC;AACd,IAAI,EAAE,GAAG,GAAG,CAAC;AACb,GAAG,SAAS;AACZ,IAAI,IAAI;AACR,MAAM,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;AACtD,KAAK,SAAS;AACd,MAAM,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC;AACvB,KAAK;AACL,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd;;ACzBe,SAAS,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE;AACpD,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;AAExD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACvD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACrB,GAAG;AAEH,EAAE,OAAO,IAAI,CAAC;AACd;;ACPe,SAAS,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE;AAC/D,EAAE,IAAI,CAAC,CAAC,EAAE,OAAO;AACjB,EAAE,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,OAAOC,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAChE,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzD,EAAE,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;AAC9D,EAAE,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,EAAE,IAAI,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAOA,iBAAgB,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAClH;;ACRe,SAAS,gBAAgB,GAAG;AAC3C,EAAE,MAAM,IAAI,SAAS,CAAC,2IAA2I,CAAC,CAAC;AACnK;;ACEe,SAAS,cAAc,CAAC,GAAG,EAAE,CAAC,EAAE;AAC/C,EAAE,OAAOC,eAAc,CAAC,GAAG,CAAC,IAAIC,qBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,2BAA0B,CAAC,GAAG,EAAE,CAAC,CAAC,IAAIC,gBAAe,EAAE,CAAC;AACxH;;ACJA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAIC,IAAJ;AAAA,SACb,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAA7B,IAAoDA,IAAI,KAAK,IADhD;AAAA,CAAjB;;AAGA,IAAMG,WAAW,GAAG;AAChBC,EAAAA,GAAG,EAAE,CADW;AAEhBC,EAAAA,KAAK,EAAE,CAFS;AAGhBC,EAAAA,MAAM,EAAE,CAHQ;AAIhBC,EAAAA,IAAI,EAAE;AAJU,CAApB;AAOO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAQiD;AAAA,MAP9EC,SAO8E,QAP9EA,SAO8E;AAAA,MAN9EC,YAM8E,QAN9EA,YAM8E;AAAA,MALrEC,QAKqE,QAL9EC,OAK8E;AAAA,MAJ9EC,SAI8E,QAJ9EA,SAI8E;AAAA,MAH9EC,SAG8E,QAH9EA,SAG8E;AAAA,MAF9EC,UAE8E,QAF9EA,UAE8E;;AAC9E,MAAI,OAAOJ,QAAP,KAAoB,QAApB,IAAgC,CAACZ,QAAQ,CAACY,QAAD,CAA7C,EAAyD;AACrD,UAAM,IAAIK,KAAJ,CAAU,0DAAV,CAAN;AACH;;AAED,MAAMJ,OAAO,GACT,OAAOD,QAAP,KAAoB,QAApB,GACM;AACIP,IAAAA,GAAG,EAAEO,QADT;AAEIN,IAAAA,KAAK,EAAEM,QAFX;AAGIL,IAAAA,MAAM,EAAEK,QAHZ;AAIIJ,IAAAA,IAAI,EAAEI;AAJV,GADN,qCAQaR,WARb,GASaQ,QATb,CADJ;AAaA,MAAMM,iBAAiB,GAAGL,OAAO,CAACL,IAAR,GAAeK,OAAO,CAACP,KAAjD;AACA,MAAMa,eAAe,GAAGN,OAAO,CAACR,GAAR,GAAcQ,OAAO,CAACN,MAA9C;AACA,MAAIa,KAAK,GAAGL,SAAS,GAAGG,iBAAxB;AACA,MAAIG,MAAM,GAAGL,UAAU,GAAGG,eAA1B;AACA,MAAMG,OAAO,GAAG,CAACR,SAAS,GAAG,CAAb,IAAkBH,YAAlC;;AACA,MAAID,SAAS,KAAK,KAAlB,EAAyB;AACrBU,IAAAA,KAAK,GAAGL,SAAS,GAAGD,SAAZ,GAAwBQ,OAAxB,GAAkCJ,iBAA1C;AACH,GAFD,MAEO,IAAIR,SAAS,KAAK,QAAlB,EAA4B;AAC/BW,IAAAA,MAAM,GAAGL,UAAU,GAAGF,SAAb,GAAyBQ,OAAzB,GAAmCH,eAA5C;AACH;;AAED,SAAO;AAAEC,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,MAAM,EAANA,MAAT;AAAiBR,IAAAA,OAAO,EAAPA;AAAjB,GAAP;AACH,CAtCM;AAwCA,IAAMU,yBAAyB,GAAG,SAA5BA,yBAA4B,QAWnC;AAAA,MAVFC,MAUE,SAVFA,MAUE;AAAA,MATFC,UASE,SATFA,UASE;AAAA,MARFC,UAQE,SARFA,UAQE;AAAA,MAPFC,cAOE,SAPFA,cAOE;AAAA,MANFC,eAME,SANFA,eAME;AAAA,MALFR,KAKE,SALFA,KAKE;AAAA,MAJFC,MAIE,SAJFA,MAIE;AACF,MAAIQ,CAAC,GAAGJ,UAAR;AACA,MAAIK,CAAC,GAAGJ,UAAR;;AAEA,UAAQF,MAAR;AACI,SAAK,KAAL;AACIK,MAAAA,CAAC,IAAI,CAACF,cAAc,GAAGP,KAAlB,IAA2B,CAAhC;AACA;;AAEJ,SAAK,WAAL;AACIS,MAAAA,CAAC,IAAIF,cAAc,GAAGP,KAAtB;AACA;;AAEJ,SAAK,OAAL;AACIS,MAAAA,CAAC,IAAIF,cAAc,GAAGP,KAAtB;AACAU,MAAAA,CAAC,IAAI,CAACF,eAAe,GAAGP,MAAnB,IAA6B,CAAlC;AACA;;AAEJ,SAAK,cAAL;AACIQ,MAAAA,CAAC,IAAIF,cAAc,GAAGP,KAAtB;AACAU,MAAAA,CAAC,IAAIF,eAAe,GAAGP,MAAvB;AACA;;AAEJ,SAAK,QAAL;AACIQ,MAAAA,CAAC,IAAI,CAACF,cAAc,GAAGP,KAAlB,IAA2B,CAAhC;AACAU,MAAAA,CAAC,IAAIF,eAAe,GAAGP,MAAvB;AACA;;AAEJ,SAAK,aAAL;AACIS,MAAAA,CAAC,IAAIF,eAAe,GAAGP,MAAvB;AACA;;AAEJ,SAAK,MAAL;AACIS,MAAAA,CAAC,IAAI,CAACF,eAAe,GAAGP,MAAnB,IAA6B,CAAlC;AACA;;AAEJ,SAAK,QAAL;AACIQ,MAAAA,CAAC,IAAI,CAACF,cAAc,GAAGP,KAAlB,IAA2B,CAAhC;AACAU,MAAAA,CAAC,IAAI,CAACF,eAAe,GAAGP,MAAnB,IAA6B,CAAlC;AACA;AAnCR;;AAsCA,SAAO;AAAEQ,IAAAA,CAAC,EAADA,CAAF;AAAKC,IAAAA,CAAC,EAADA;AAAL,GAAP;AACH,CAtDM;AAwDA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,QAU2C;AAAA,MATxErB,SASwE,SATxEA,SASwE;AAAA,MARxEsB,OAQwE,SARxEA,OAQwE;AAAA,MAPxEC,UAOwE,SAPxEA,UAOwE;AAAA,MANxEC,aAMwE,SANxEA,aAMwE;AAAA,MALxEd,KAKwE,SALxEA,KAKwE;AAAA,MAJxEC,MAIwE,SAJxEA,MAIwE;AACxE,MAAIc,OAAJ;AACA,MAAIC,OAAJ;AAEA,MAAIC,MAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,cAAJ;;AAEA,UAAQ9B,SAAR;AACI,SAAK,eAAL;AACIyB,MAAAA,OAAO,GAAG,CAAV;AACAC,MAAAA,OAAO,GAAG,CAACf,MAAM,GAAGY,UAAV,IAAwB,CAAlC;AAEAK,MAAAA,MAAM,GAAGjB,MAAM,GAAG,CAAlB;AACAmB,MAAAA,cAAc,GAAG,SAAjB;;AACA,UAAIR,OAAO,KAAK,IAAhB,EAAsB;AAClBK,QAAAA,MAAM,GAAGjB,KAAT;AACAmB,QAAAA,WAAW,GAAG,KAAd;AACH,OAHD,MAGO;AACHF,QAAAA,MAAM,GAAGJ,UAAU,GAAGC,aAAtB;AACAK,QAAAA,WAAW,GAAG,OAAd;AACH;;AACD;;AAEJ,SAAK,eAAL;AACIJ,MAAAA,OAAO,GAAGf,KAAK,GAAGa,UAAlB;AACAG,MAAAA,OAAO,GAAG,CAACf,MAAM,GAAGY,UAAV,IAAwB,CAAlC;AAEAK,MAAAA,MAAM,GAAGjB,MAAM,GAAG,CAAlB;AACAmB,MAAAA,cAAc,GAAG,SAAjB;;AACA,UAAIR,OAAO,KAAK,IAAhB,EAAsB;AAClBK,QAAAA,MAAM,GAAG,CAAT;AACAE,QAAAA,WAAW,GAAG,OAAd;AACH,OAHD,MAGO;AACHF,QAAAA,MAAM,GAAGjB,KAAK,GAAGa,UAAR,GAAqBC,aAA9B;AACAK,QAAAA,WAAW,GAAG,KAAd;AACH;;AACD;;AAEJ,SAAK,eAAL;AACIJ,MAAAA,OAAO,GAAG,CAACf,KAAK,GAAGa,UAAT,IAAuB,CAAjC;AACAG,MAAAA,OAAO,GAAG,CAAV;AAEAC,MAAAA,MAAM,GAAGjB,KAAK,GAAG,CAAjB;AAEAmB,MAAAA,WAAW,GAAG,QAAd;;AACA,UAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBM,QAAAA,MAAM,GAAGjB,MAAT;AACAmB,QAAAA,cAAc,GAAG,YAAjB;AACH,OAHD,MAGO;AACHF,QAAAA,MAAM,GAAGL,UAAU,GAAGC,aAAtB;AACAM,QAAAA,cAAc,GAAG,kBAAjB;AACH;;AACD;;AAEJ,SAAK,eAAL;AACIL,MAAAA,OAAO,GAAG,CAACf,KAAK,GAAGa,UAAT,IAAuB,CAAjC;AACAG,MAAAA,OAAO,GAAGf,MAAM,GAAGY,UAAnB;AAEAI,MAAAA,MAAM,GAAGjB,KAAK,GAAG,CAAjB;AACAmB,MAAAA,WAAW,GAAG,QAAd;;AACA,UAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClBM,QAAAA,MAAM,GAAG,CAAT;AACAE,QAAAA,cAAc,GAAG,kBAAjB;AACH,OAHD,MAGO;AACHF,QAAAA,MAAM,GAAGjB,MAAM,GAAGY,UAAT,GAAsBC,aAA/B;AACAM,QAAAA,cAAc,GAAG,YAAjB;AACH;;AACD;AA5DR;;AA+DA,SAAO;AACHL,IAAAA,OAAO,EAAPA,OADG;AAEHC,IAAAA,OAAO,EAAPA,OAFG;AAIHC,IAAAA,MAAM,EAANA,MAJG;AAKHC,IAAAA,MAAM,EAANA,MALG;AAMHC,IAAAA,WAAW,EAAXA,WANG;AAOHC,IAAAA,cAAc,EAAdA;AAPG,GAAP;AASH,CA3FM;;AC1GA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAQT;AAAA,MAPfZ,CAOe,QAPfA,CAOe;AAAA,MANfC,CAMe,QANfA,CAMe;AAAA,MALfY,IAKe,QALfA,IAKe;AAAA,MAJfC,IAIe,QAJfA,IAIe;AAAA,0BAHfC,OAGe;AAAA,MAHfA,OAGe,6BAHL,CAGK;AAAA,8BAFfC,WAEe;AAAA,MAFfA,WAEe,iCAFD,CAEC;AAAA,8BADfC,WACe;AAAA,MADfA,WACe,iCADD,aACC;AACf,SACIC;AACI,IAAA,CAAC,EAAEL,IAAI,GAAG,CADd;AAEI,IAAA,EAAE,EAAEb,CAAC,GAAGa,IAAI,GAAG,CAFnB;AAGI,IAAA,EAAE,EAAEZ,CAAC,GAAGY,IAAI,GAAG,CAHnB;AAII,IAAA,IAAI,EAAEC,IAJV;AAKI,IAAA,OAAO,EAAEC,OALb;AAMI,IAAA,WAAW,EAAEC,WANjB;AAOI,IAAA,MAAM,EAAEC,WAPZ;AAQI,IAAA,KAAK,EAAE;AACHE,MAAAA,aAAa,EAAE;AADZ;AARX,IADJ;AAcH,CAvBM;;ACAA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAQV;AAAA,MAPfpB,CAOe,QAPfA,CAOe;AAAA,MANfC,CAMe,QANfA,CAMe;AAAA,MALfY,IAKe,QALfA,IAKe;AAAA,MAJfC,IAIe,QAJfA,IAIe;AAAA,0BAHfC,OAGe;AAAA,MAHfA,OAGe,6BAHL,CAGK;AAAA,8BAFfC,WAEe;AAAA,MAFfA,WAEe,iCAFD,CAEC;AAAA,8BADfC,WACe;AAAA,MADfA,WACe,iCADD,aACC;AACf,SACIC;AAAG,IAAA,SAAS,sBAAelB,CAAf,cAAoBC,CAApB,MAAZ;AAAA,cACIiB;AACI,MAAA,CAAC,mCACML,IAAI,GAAG,CADb,sCAEMA,IAAI,GAAG,GAFb,cAEoBA,IAAI,GAAG,CAF3B,oCAGMA,IAAI,GAAG,CAHb,cAGkBA,IAHlB,oCAIMA,IAAI,GAAG,GAJb,cAIoBA,IAAI,GAAG,CAJ3B,oCAKMA,IAAI,GAAG,CALb,yBADL;AAQI,MAAA,IAAI,EAAEC,IARV;AASI,MAAA,OAAO,EAAEC,OATb;AAUI,MAAA,WAAW,EAAEC,WAVjB;AAWI,MAAA,MAAM,EAAEC,WAXZ;AAYI,MAAA,KAAK,EAAE;AACHE,QAAAA,aAAa,EAAE;AADZ;AAZX;AADJ,IADJ;AAoBH,CA7BM;;ACAA,IAAME,YAAY,GAAG,SAAfA,YAAe,OAQT;AAAA,MAPfrB,CAOe,QAPfA,CAOe;AAAA,MANfC,CAMe,QANfA,CAMe;AAAA,MALfY,IAKe,QALfA,IAKe;AAAA,MAJfC,IAIe,QAJfA,IAIe;AAAA,0BAHfC,OAGe;AAAA,MAHfA,OAGe,6BAHL,CAGK;AAAA,8BAFfC,WAEe;AAAA,MAFfA,WAEe,iCAFD,CAEC;AAAA,8BADfC,WACe;AAAA,MADfA,WACe,iCADD,aACC;AACf,SACIC;AACI,IAAA,CAAC,EAAElB,CADP;AAEI,IAAA,CAAC,EAAEC,CAFP;AAGI,IAAA,IAAI,EAAEa,IAHV;AAII,IAAA,OAAO,EAAEC,OAJb;AAKI,IAAA,WAAW,EAAEC,WALjB;AAMI,IAAA,MAAM,EAAEC,WANZ;AAOI,IAAA,KAAK,EAAEJ,IAPX;AAQI,IAAA,MAAM,EAAEA,IARZ;AASI,IAAA,KAAK,EAAE;AACHM,MAAAA,aAAa,EAAE;AADZ;AATX,IADJ;AAeH,CAxBM;;ACAA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,OAQX;AAAA,MAPftB,CAOe,QAPfA,CAOe;AAAA,MANfC,CAMe,QANfA,CAMe;AAAA,MALfY,IAKe,QALfA,IAKe;AAAA,MAJfC,IAIe,QAJfA,IAIe;AAAA,0BAHfC,OAGe;AAAA,MAHfA,OAGe,6BAHL,CAGK;AAAA,8BAFfC,WAEe;AAAA,MAFfA,WAEe,iCAFD,CAEC;AAAA,8BADfC,WACe;AAAA,MADfA,WACe,iCADD,aACC;AACf,SACIC;AAAG,IAAA,SAAS,sBAAelB,CAAf,cAAoBC,CAApB,MAAZ;AAAA,cACIiB;AACI,MAAA,CAAC,+BACEL,IAAI,GAAG,CADT,kCAEEA,IAFF,cAEUA,IAFV,kCAGIA,IAHJ,gCAIEA,IAAI,GAAG,CAJT,qBADL;AAOI,MAAA,IAAI,EAAEC,IAPV;AAQI,MAAA,OAAO,EAAEC,OARb;AASI,MAAA,WAAW,EAAEC,WATjB;AAUI,MAAA,MAAM,EAAEC,WAVZ;AAWI,MAAA,KAAK,EAAE;AACHE,QAAAA,aAAa,EAAE;AADZ;AAXX;AADJ,IADJ;AAmBH,CA5BM;;ACcP,IAAMI,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAEZ,YADU;AAElBa,EAAAA,OAAO,EAAEL,aAFS;AAGlBM,EAAAA,MAAM,EAAEL,YAHU;AAIlBM,EAAAA,QAAQ,EAAEL;AAJQ,CAAtB;IAOaM,aAAa,GAAG,SAAhBA,aAAgB,OAwBH;AAAA;;AAAA,MAvBtB5B,CAuBsB,QAvBtBA,CAuBsB;AAAA,MAtBtBC,CAsBsB,QAtBtBA,CAsBsB;AAAA,MArBtBV,KAqBsB,QArBtBA,KAqBsB;AAAA,MApBtBC,MAoBsB,QApBtBA,MAoBsB;AAAA,MAnBtBqC,IAmBsB,QAnBtBA,IAmBsB;AAAA,4BAlBtBhD,SAkBsB;AAAA,MAlBtBA,SAkBsB,+BAlBV,eAkBU;AAAA,0BAjBtBsB,OAiBsB;AAAA,MAjBtBA,OAiBsB,6BAjBZ,KAiBY;AAAA,MAhBtB2B,SAgBsB,QAhBtBA,SAgBsB;AAAA,6BAftBC,UAesB;AAAA,MAftBA,UAesB,gCAfT,aAeS;AAAA,0BAdtBhB,OAcsB;AAAA,MAdtBA,OAcsB,6BAdZ,CAcY;AAAA,8BAZtBiB,WAYsB;AAAA,MAZtBA,WAYsB,iCAZR,QAYQ;AAAA,6BAXtB5B,UAWsB;AAAA,MAXtBA,UAWsB,gCAXT,EAWS;AAAA,gCAVtBC,aAUsB;AAAA,MAVtBA,aAUsB,mCAVN,CAUM;AAAA,mCATtB4B,iBASsB;AAAA,MATtBA,iBASsB,sCATF,CASE;AAAA,mCARtBC,iBAQsB;AAAA,MARtBA,iBAQsB,sCARF,aAQE;AAAA,MANtBC,QAMsB,QANtBA,OAMsB;AAAA,MALtBC,YAKsB,QALtBA,YAKsB;AAAA,MAJtBC,YAIsB,QAJtBA,YAIsB;AAAA,MAHtBC,WAGsB,QAHtBA,WAGsB;AAAA,MADtBC,OACsB,QADtBA,OACsB;;AAAA,kBACIC,cAAQ,CAAQ,EAAR,CADZ;AAAA;AAAA,MACfC,KADe;AAAA,MACRC,QADQ;;AAEtB,MAAMC,KAAK,GAAGC,aAAQ,EAAtB;AAEA,MAAMC,gBAAgB,GAAGC,iBAAW,CAChC,UAACC,KAAD,EAA6C;AACzC,QAAIR,OAAJ,EAAa;AACT,UAAMS,YAAY,GAAGT,OAAO,CAACU,MAAR,CAAe;AAAA,YAAGC,EAAH,SAAGA,EAAH;AAAA,eAAYA,EAAE,KAAK,OAAnB;AAAA,OAAf,CAArB;;AACA,UAAMT,MAAK,GAAGO,YAAY,CAACG,MAAb,CACV,UAACC,GAAD,EAAMC,MAAN;AAAA,iDACOD,GADP,GAEOC,MAAM,CAACZ,KAFd;AAAA,OADU,EAKV,EALU,CAAd;;AAOAC,MAAAA,QAAQ,CAACD,MAAD,CAAR;AACH;;AAEDL,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGP,IAAH,EAASkB,KAAT,CAAZ;AACH,GAf+B,EAgBhC,CAACX,YAAD,EAAeP,IAAf,EAAqBU,OAArB,CAhBgC,CAApC;AAkBA,MAAMe,gBAAgB,GAAGR,iBAAW,CAChC,UAACC,KAAD,EAA6C;AACzC,QAAIR,OAAJ,EAAa;AACT,UAAMS,YAAY,GAAGT,OAAO,CAACU,MAAR,CAAe;AAAA,YAAGC,EAAH,SAAGA,EAAH;AAAA,eAAYA,EAAE,KAAK,OAAnB;AAAA,OAAf,CAArB;;AACA,UAAMT,OAAK,GAAGO,YAAY,CAACG,MAAb,CACV,UAACC,GAAD,EAAMC,MAAN;AAAA,iDACOD,GADP,GAEOC,MAAM,CAACZ,KAFd;AAAA,OADU,EAKV,EALU,CAAd;;AAOAC,MAAAA,QAAQ,CAACD,OAAD,CAAR;AACH;;AAEDJ,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGR,IAAH,EAASkB,KAAT,CAAZ;AACH,GAf+B,EAgBhC,CAACV,YAAD,EAAeR,IAAf,EAAqBU,OAArB,CAhBgC,CAApC;;AAtBsB,2BAyCoDrC,iBAAiB,CAAC;AACxFrB,IAAAA,SAAS,EAATA,SADwF;AAExFsB,IAAAA,OAAO,EAAPA,OAFwF;AAGxFC,IAAAA,UAAU,uBAAEqC,KAAK,CAACrC,UAAR,iEAAsBA,UAHwD;AAIxFC,IAAAA,aAAa,EAAbA,aAJwF;AAKxFd,IAAAA,KAAK,EAALA,KALwF;AAMxFC,IAAAA,MAAM,EAANA;AANwF,GAAD,CAzCrE;AAAA,MAyCdc,OAzCc,sBAyCdA,OAzCc;AAAA,MAyCLC,OAzCK,sBAyCLA,OAzCK;AAAA,MAyCIC,MAzCJ,sBAyCIA,MAzCJ;AAAA,MAyCYC,MAzCZ,sBAyCYA,MAzCZ;AAAA,MAyCoBC,WAzCpB,sBAyCoBA,WAzCpB;AAAA,MAyCiCC,cAzCjC,sBAyCiCA,cAzCjC;;AAkDtB,MAAM4C,aAAa,GAAG,CAACpB,QAAD,EAAUC,YAAV,EAAwBC,YAAxB,EAAsCC,WAAtC,EAAmDkB,IAAnD,CAClB,UAAAC,OAAO;AAAA,WAAIA,OAAO,KAAKC,SAAhB;AAAA,GADW,CAAtB;AAIA,MAAMC,WAAW,GAAG,OAAO3B,WAAP,KAAuB,UAAvB,GAAoCA,WAApC,GAAkDT,aAAa,CAACS,WAAD,CAAnF;AAEA,SACI4B;AACI,IAAA,SAAS,sBAAe5D,CAAf,cAAoBC,CAApB,MADb;AAEI,IAAA,KAAK,EAAE;AACHc,MAAAA,OAAO,wBAAE0B,KAAK,CAACoB,WAAR,mEAAuB9C;AAD3B,KAFX;AAAA,eAMIG;AACI,MAAA,KAAK,EAAE3B,KADX;AAEI,MAAA,MAAM,EAAEC,MAFZ;AAGI,MAAA,IAAI,2BAAEiD,KAAK,CAACqB,cAAR,yEAA0B/B,UAHlC;AAII,MAAA,KAAK,EAAE;AACHgC,QAAAA,MAAM,EAAER,aAAa,GAAG,SAAH,GAAe;AADjC,OAJX;AAOI,MAAA,OAAO,EAAE,iBAAAR,KAAK,EAAI;AACdZ,QAAAA,QAAO,SAAP,IAAAA,QAAO,WAAP,YAAAA,QAAO,CAAGN,IAAH,EAASkB,KAAT,CAAP;AACAT,QAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAGT,IAAI,CAACmC,EAAR,CAAX;AACH,OAVL;AAWI,MAAA,YAAY,EAAEnB,gBAXlB;AAYI,MAAA,YAAY,EAAES;AAZlB,MANJ,EAoBKW,mBAAA,CAAoBN,WAApB;AACGK,MAAAA,EAAE,EAAEnC,IAAI,CAACmC,EADZ;AAEGhE,MAAAA,CAAC,EAAEM,OAFN;AAGGL,MAAAA,CAAC,EAAEM,OAHN;AAIGM,MAAAA,IAAI,wBAAE4B,KAAK,CAACrC,UAAR,mEAAsBA,UAJ7B;AAKGU,MAAAA,IAAI,yBAAEe,IAAI,CAACf,IAAP,mDAAee,IAAI,CAACqC,KAApB,yCAA6B,OALpC;AAMGlD,MAAAA,WAAW,2BAAEyB,KAAK,CAACR,iBAAR,yEAA6BA,iBAN3C;AAOGhB,MAAAA,WAAW,2BAAEwB,KAAK,CAACP,iBAAR,yEAA6BA;AAP3C,OAQOL,IAAI,CAACsC,MAAL,GAAcxB,KAAK,CAACyB,OAAN,CAAcD,MAAd,CAAqBE,MAAnC,GAA4CX,SARnD,EApBL,EA8BIxC;AACI,MAAA,UAAU,EAAER,WADhB;AAEI,MAAA,KAAK,oCACEiC,KAAK,CAACyB,OAAN,CAAcE,IADhB;AAEDxD,QAAAA,IAAI,4CAAE2B,KAAK,CAAC8B,aAAR,uEAAyBzC,SAAzB,yCAAsCa,KAAK,CAACyB,OAAN,CAAcE,IAAd,CAAmBxD,IAAzD,yCAAiE,OAFpE;AAGD0D,QAAAA,gBAAgB,EAAE7D,cAHjB;AAIDQ,QAAAA,aAAa,EAAE,MAJd;AAKDsD,QAAAA,UAAU,EAAE;AALX,SAMG5C,IAAI,CAACsC,MAAL,GAAcxB,KAAK,CAACyB,OAAN,CAAcD,MAAd,CAAqBG,IAAnC,GAA0CZ,SAN7C,CAFT;AAUI,MAAA,CAAC,EAAElD,MAVP;AAWI,MAAA,CAAC,EAAEC,MAXP;AAAA,gBAaKoB,IAAI,CAAC6C;AAbV,MA9BJ;AAAA,IADJ;AAgDH;;ICnJYC,SAAS,GAAG,SAAZA,SAAY,OA4BH;AAAA,MA3BlB9C,IA2BkB,QA3BlBA,IA2BkB;AAAA,MAzBlB7B,CAyBkB,QAzBlBA,CAyBkB;AAAA,MAxBlBC,CAwBkB,QAxBlBA,CAwBkB;AAAA,MAvBlBpB,SAuBkB,QAvBlBA,SAuBkB;AAAA,0BAtBlBG,OAsBkB;AAAA,MAtBTD,QAsBS,6BAtBE,CAsBF;AAAA,MArBlBoB,OAqBkB,QArBlBA,OAqBkB;AAAA,MApBlBoC,OAoBkB,QApBlBA,OAoBkB;AAAA,MAlBlBrD,SAkBkB,QAlBlBA,SAkBkB;AAAA,MAjBlBC,UAiBkB,QAjBlBA,UAiBkB;AAAA,gCAhBlByF,aAgBkB;AAAA,MAhBlBA,aAgBkB,mCAhBF,eAgBE;AAAA,+BAflB9F,YAekB;AAAA,MAflBA,YAekB,kCAfH,CAeG;AAAA,MAdlByF,aAckB,QAdlBA,aAckB;AAAA,iCAblBT,cAakB;AAAA,MAblBA,cAakB,oCAbD,aAaC;AAAA,8BAZlBD,WAYkB;AAAA,MAZlBA,WAYkB,iCAZJ,CAYI;AAAA,MAVlB7B,WAUkB,QAVlBA,WAUkB;AAAA,MATlB5B,UASkB,QATlBA,UASkB;AAAA,MARlBC,aAQkB,QARlBA,aAQkB;AAAA,MAPlB4B,iBAOkB,QAPlBA,iBAOkB;AAAA,MANlBC,iBAMkB,QANlBA,iBAMkB;AAAA,MAJlBC,OAIkB,QAJlBA,OAIkB;AAAA,MAHlBC,YAGkB,QAHlBA,YAGkB;AAAA,MAFlBC,YAEkB,QAFlBA,YAEkB;AAAA,MADlBC,WACkB,QADlBA,WACkB;;AAAA,2BACE1D,iBAAiB,CAAC;AAClCK,IAAAA,SAAS,EAAE4C,IAAI,CAACgD,MADkB;AAElC3F,IAAAA,SAAS,EAATA,SAFkC;AAGlCC,IAAAA,UAAU,EAAVA,UAHkC;AAIlCL,IAAAA,YAAY,EAAZA,YAJkC;AAKlCD,IAAAA,SAAS,EAATA,SALkC;AAMlCG,IAAAA,OAAO,EAAED;AANyB,GAAD,CADnB;AAAA,MACVC,OADU,sBACVA,OADU;;AAUlB,MAAM8F,KAAK,GAAGjG,SAAS,KAAK,KAAd,GAAsBK,SAAS,GAAGJ,YAAlC,GAAiD,CAA/D;AACA,MAAMiG,KAAK,GAAGlG,SAAS,KAAK,QAAd,GAAyBM,UAAU,GAAGL,YAAtC,GAAqD,CAAnE;AAEA,SACIoC;AAAG,IAAA,SAAS,sBAAelB,CAAf,cAAoBC,CAApB,MAAZ;AAAA,cACK4B,IAAI,CAACmD,GAAL,CAAS,UAACnD,IAAD,EAAOoD,CAAP;AAAA,aACN/D,eAAC,aAAD;AAEI,QAAA,IAAI,EAAEW,IAFV;AAGI,QAAA,CAAC,EAAEoD,CAAC,GAAGH,KAAJ,GAAY9F,OAAO,CAACL,IAH3B;AAII,QAAA,CAAC,EAAEsG,CAAC,GAAGF,KAAJ,GAAY/F,OAAO,CAACR,GAJ3B;AAKI,QAAA,KAAK,EAAEU,SALX;AAMI,QAAA,MAAM,EAAEC,UANZ;AAOI,QAAA,SAAS,EAAEyF,aAPf;AAQI,QAAA,OAAO,EAAEzE,OARb;AASI,QAAA,OAAO,EAAEoC,OATb;AAUI,QAAA,SAAS,EAAEgC,aAVf;AAWI,QAAA,UAAU,EAAET,cAXhB;AAYI,QAAA,OAAO,EAAED,WAZb;AAaI,QAAA,WAAW,EAAE7B,WAbjB;AAcI,QAAA,UAAU,EAAE5B,UAdhB;AAeI,QAAA,aAAa,EAAEC,aAfnB;AAgBI,QAAA,iBAAiB,EAAE4B,iBAhBvB;AAiBI,QAAA,iBAAiB,EAAEC,iBAjBvB;AAkBI,QAAA,OAAO,EAAEC,OAlBb;AAmBI,QAAA,YAAY,EAAEC,YAnBlB;AAoBI,QAAA,YAAY,EAAEC,YApBlB;AAqBI,QAAA,WAAW,EAAEC;AArBjB,SACS2C,CADT,CADM;AAAA,KAAT;AADL,IADJ;AA6BH;;ICtEYC,YAAY,GAAG,SAAfA,YAAe,OAgCH;AAAA,MA/BrBrD,IA+BqB,QA/BrBA,IA+BqB;AAAA,MA7BrB/B,cA6BqB,QA7BrBA,cA6BqB;AAAA,MA5BrBC,eA4BqB,QA5BrBA,eA4BqB;AAAA,6BA3BrBH,UA2BqB;AAAA,MA3BrBA,UA2BqB,gCA3BR,CA2BQ;AAAA,6BA1BrBC,UA0BqB;AAAA,MA1BrBA,UA0BqB,gCA1BR,CA0BQ;AAAA,MAzBrBF,MAyBqB,QAzBrBA,MAyBqB;AAAA,MAxBrBd,SAwBqB,QAxBrBA,SAwBqB;AAAA,0BAvBrBG,OAuBqB;AAAA,MAvBrBA,OAuBqB,6BAvBX,CAuBW;AAAA,MAtBrBmB,OAsBqB,QAtBrBA,OAsBqB;AAAA,+BApBrBrB,YAoBqB;AAAA,MApBrBA,YAoBqB,kCApBN,CAoBM;AAAA,MAnBrBI,SAmBqB,QAnBrBA,SAmBqB;AAAA,MAlBrBC,UAkBqB,QAlBrBA,UAkBqB;AAAA,MAjBrByF,aAiBqB,QAjBrBA,aAiBqB;AAAA,MAhBrBL,aAgBqB,QAhBrBA,aAgBqB;AAAA,MAfrBT,cAeqB,QAfrBA,cAeqB;AAAA,MAdrBD,WAcqB,QAdrBA,WAcqB;AAAA,MAZrB7B,WAYqB,QAZrBA,WAYqB;AAAA,MAXrB5B,UAWqB,QAXrBA,UAWqB;AAAA,MAVrBC,aAUqB,QAVrBA,aAUqB;AAAA,MATrB4B,iBASqB,QATrBA,iBASqB;AAAA,MARrBC,iBAQqB,QARrBA,iBAQqB;AAAA,MANrBC,OAMqB,QANrBA,OAMqB;AAAA,MALrBC,YAKqB,QALrBA,YAKqB;AAAA,MAJrBC,YAIqB,QAJrBA,YAIqB;AAAA,MAHrBC,WAGqB,QAHrBA,WAGqB;AAAA,MADrBC,OACqB,QADrBA,OACqB;;AAAA,2BACK3D,iBAAiB,CAAC;AACxCK,IAAAA,SAAS,EAAE4C,IAAI,CAACgD,MADwB;AAExC/F,IAAAA,YAAY,EAAZA,YAFwC;AAGxCI,IAAAA,SAAS,EAATA,SAHwC;AAIxCC,IAAAA,UAAU,EAAVA,UAJwC;AAKxCN,IAAAA,SAAS,EAATA,SALwC;AAMxCG,IAAAA,OAAO,EAAPA;AANwC,GAAD,CADtB;AAAA,MACbO,KADa,sBACbA,KADa;AAAA,MACNC,MADM,sBACNA,MADM;;AAAA,8BAUJE,yBAAyB,CAAC;AACvCC,IAAAA,MAAM,EAANA,MADuC;AAEvCC,IAAAA,UAAU,EAAVA,UAFuC;AAGvCC,IAAAA,UAAU,EAAVA,UAHuC;AAIvCC,IAAAA,cAAc,EAAdA,cAJuC;AAKvCC,IAAAA,eAAe,EAAfA,eALuC;AAMvCR,IAAAA,KAAK,EAALA,KANuC;AAOvCC,IAAAA,MAAM,EAANA;AAPuC,GAAD,CAVrB;AAAA,MAUbQ,CAVa,yBAUbA,CAVa;AAAA,MAUVC,CAVU,yBAUVA,CAVU;;AAoBrB,SACIiB,eAAC,SAAD;AACI,IAAA,IAAI,EAAEW,IADV;AAEI,IAAA,CAAC,EAAE7B,CAFP;AAGI,IAAA,CAAC,EAAEC,CAHP;AAII,IAAA,SAAS,EAAEpB,SAJf;AAKI,IAAA,OAAO,EAAEG,OALb;AAMI,IAAA,OAAO,EAAEmB,OANb;AAOI,IAAA,OAAO,EAAEoC,OAPb;AAQI,IAAA,YAAY,EAAEzD,YARlB;AASI,IAAA,SAAS,EAAEI,SATf;AAUI,IAAA,UAAU,EAAEC,UAVhB;AAWI,IAAA,aAAa,EAAEyF,aAXnB;AAYI,IAAA,aAAa,EAAEL,aAZnB;AAaI,IAAA,cAAc,EAAET,cAbpB;AAcI,IAAA,WAAW,EAAED,WAdjB;AAeI,IAAA,WAAW,EAAE7B,WAfjB;AAgBI,IAAA,UAAU,EAAE5B,UAhBhB;AAiBI,IAAA,aAAa,EAAEC,aAjBnB;AAkBI,IAAA,iBAAiB,EAAE4B,iBAlBvB;AAmBI,IAAA,iBAAiB,EAAEC,iBAnBvB;AAoBI,IAAA,OAAO,EAAEC,OApBb;AAqBI,IAAA,YAAY,EAAEC,YArBlB;AAsBI,IAAA,YAAY,EAAEC,YAtBlB;AAuBI,IAAA,WAAW,EAAE,OAAOC,WAAP,KAAuB,SAAvB,GAAmCoB,SAAnC,GAA+CpB;AAvBhE,IADJ;AA2BH;;AChFD,IAAM6C,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,MADc;AAErBC,EAAAA,MAAM,EAAE,QAFa;AAGrBC,EAAAA,GAAG,EAAE;AAHgB,CAAzB;IAMaC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAChCC,GADgC,QA6B/B;AAAA,MA1BG3D,IA0BH,QA1BGA,IA0BH;AAAA,MAxBG/B,cAwBH,QAxBGA,cAwBH;AAAA,MAvBGC,eAuBH,QAvBGA,eAuBH;AAAA,6BAtBGH,UAsBH;AAAA,MAtBGA,UAsBH,gCAtBgB,CAsBhB;AAAA,6BArBGC,UAqBH;AAAA,MArBGA,UAqBH,gCArBgB,CAqBhB;AAAA,MApBGF,MAoBH,QApBGA,MAoBH;AAAA,MAnBGd,SAmBH,QAnBGA,SAmBH;AAAA,0BAlBGG,OAkBH;AAAA,MAlBYD,QAkBZ,6BAlBuB,CAkBvB;AAAA,0BAjBGoB,OAiBH;AAAA,MAjBGA,OAiBH,6BAjBa,KAiBb;AAAA,+BAdGrB,YAcH;AAAA,MAdGA,YAcH,kCAdkB,CAclB;AAAA,MAbGI,SAaH,QAbGA,SAaH;AAAA,MAZGC,UAYH,QAZGA,UAYH;AAAA,gCAXGyF,aAWH;AAAA,MAXGA,aAWH,mCAXmB,eAWnB;AAAA,MAVGL,aAUH,QAVGA,aAUH;AAAA,6BAPGnE,UAOH;AAAA,MAPGA,UAOH,gCAPgB,EAOhB;AAAA,gCANGC,aAMH;AAAA,MANGA,aAMH,mCANmB,CAMnB;AAAA,MAFGsC,KAEH,QAFGA,KAEH;;AAAA,2BACkC/D,iBAAiB,CAAC;AACjDK,IAAAA,SAAS,EAAE4C,IAAI,CAACgD,MADiC;AAEjD3F,IAAAA,SAAS,EAATA,SAFiD;AAGjDC,IAAAA,UAAU,EAAVA,UAHiD;AAIjDL,IAAAA,YAAY,EAAZA,YAJiD;AAKjDD,IAAAA,SAAS,EAATA,SALiD;AAMjDG,IAAAA,OAAO,EAAED;AANwC,GAAD,CADnD;AAAA,MACOQ,KADP,sBACOA,KADP;AAAA,MACcC,MADd,sBACcA,MADd;AAAA,MACsBR,OADtB,sBACsBA,OADtB;;AAAA,8BAUgBU,yBAAyB,CAAC;AACvCC,IAAAA,MAAM,EAANA,MADuC;AAEvCC,IAAAA,UAAU,EAAVA,UAFuC;AAGvCC,IAAAA,UAAU,EAAVA,UAHuC;AAIvCC,IAAAA,cAAc,EAAdA,cAJuC;AAKvCC,IAAAA,eAAe,EAAfA,eALuC;AAMvCR,IAAAA,KAAK,EAALA,KANuC;AAOvCC,IAAAA,MAAM,EAANA;AAPuC,GAAD,CAVzC;AAAA,MAUOQ,CAVP,yBAUOA,CAVP;AAAA,MAUUC,CAVV,yBAUUA,CAVV;;AAoBD,MAAM6E,KAAK,GAAGjG,SAAS,KAAK,KAAd,GAAsBK,SAAS,GAAGJ,YAAlC,GAAiD,CAA/D;AACA,MAAMiG,KAAK,GAAGlG,SAAS,KAAK,QAAd,GAAyBM,UAAU,GAAGL,YAAtC,GAAqD,CAAnE;AAEA0G,EAAAA,GAAG,CAACC,IAAJ;AACAD,EAAAA,GAAG,CAACE,SAAJ,CAAc1F,CAAd,EAAiBC,CAAjB;AAEAuF,EAAAA,GAAG,CAACG,IAAJ,aAAchD,KAAK,CAACyB,OAAN,CAAcE,IAAd,CAAmBsB,QAAjC,gBAA+CjD,KAAK,CAACyB,OAAN,CAAcE,IAAd,CAAmBuB,UAAnB,IAAiC,YAAhF;AAEAhE,EAAAA,IAAI,CAACiE,OAAL,CAAa,UAACC,CAAD,EAAId,CAAJ,EAAU;AAAA;;AACnB,QAAMe,KAAK,GAAGf,CAAC,GAAGH,KAAJ,GAAY9F,OAAO,CAACL,IAAlC;AACA,QAAMsH,KAAK,GAAGhB,CAAC,GAAGF,KAAJ,GAAY/F,OAAO,CAACR,GAAlC;;AAFmB,6BAIuD0B,iBAAiB,CACvF;AACIrB,MAAAA,SAAS,EAAE+F,aADf;AAEIzE,MAAAA,OAAO,EAAPA,OAFJ;AAGIC,MAAAA,UAAU,EAAVA,UAHJ;AAIIC,MAAAA,aAAa,EAAbA,aAJJ;AAKId,MAAAA,KAAK,EAAEL,SALX;AAMIM,MAAAA,MAAM,EAAEL;AANZ,KADuF,CAJxE;AAAA,QAIXmB,OAJW,sBAIXA,OAJW;AAAA,QAIFC,OAJE,sBAIFA,OAJE;AAAA,QAIOC,MAJP,sBAIOA,MAJP;AAAA,QAIeC,MAJf,sBAIeA,MAJf;AAAA,QAIuBC,WAJvB,sBAIuBA,WAJvB;AAAA,QAIoCC,cAJpC,sBAIoCA,cAJpC;;AAenB6E,IAAAA,GAAG,CAACU,SAAJ,eAAgBH,CAAC,CAAC7B,KAAlB,+CAA2B,OAA3B;AACAsB,IAAAA,GAAG,CAACW,QAAJ,CAAaH,KAAK,GAAG1F,OAArB,EAA8B2F,KAAK,GAAG1F,OAAtC,EAA+CH,UAA/C,EAA2DA,UAA3D;AAEAoF,IAAAA,GAAG,CAACY,SAAJ,GAAgBjB,gBAAgB,CAACzE,WAAD,CAAhC;;AAEA,QAAIC,cAAc,KAAK,SAAvB,EAAkC;AAC9B6E,MAAAA,GAAG,CAACa,YAAJ,GAAmB,QAAnB;AACH;;AAEDb,IAAAA,GAAG,CAACU,SAAJ,YAAgB3B,aAAhB,aAAgBA,aAAhB,cAAgBA,aAAhB,GAAiC5B,KAAK,CAACyB,OAAN,CAAcE,IAAd,CAAmBxD,IAApD,yCAA4D,OAA5D;AACA0E,IAAAA,GAAG,CAACc,QAAJ,CAAaC,MAAM,CAACR,CAAC,CAACrB,KAAH,CAAnB,EAA8BsB,KAAK,GAAGxF,MAAtC,EAA8CyF,KAAK,GAAGxF,MAAtD;AACH,GA1BD;AA4BA+E,EAAAA,GAAG,CAACgB,OAAJ;AACH;;ICvFYC,+BAA+B,GAAG,SAAlCA,+BAAkC,OAYzC;AAAA,MAXFC,KAWE,QAXFA,KAWE;AAAA,MAVMC,gBAUN,QAVFC,MAUE;AAAA,0BATFC,OASE;AAAA,MATFA,OASE,6BATQ,KASR;AAAA,8BARFC,WAQE;AAAA,MARFA,WAQE,iCARY,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAQb;AAAA,4BAPFC,SAOE;AAAA,MAPFA,SAOE,+BAPU,KAOV;AACF,SAAOC,aAAO,CAAC,YAAM;AACjB,QAAML,MAAM,GAAGD,gBAAH,aAAGA,gBAAH,cAAGA,gBAAH,GAAuBD,KAAK,CAACQ,KAAN,EAAnC;AAEA,QAAMC,KAAK,GAAGP,MAAM,CAAC5B,GAAP,CAAW,UAACoC,WAAD,EAAcC,KAAd,EAAwB;AAAA,gCACxBX,KAAK,CAACY,YAAN,CAAmBF,WAAnB,CADwB;AAAA;AAAA,UACtChC,KADsC;AAAA,UAC/BE,GAD+B;;AAG7C,aAAO;AACHtB,QAAAA,EAAE,EAAEoD,WADD;AAEHC,QAAAA,KAAK,EAALA,KAFG;AAGHE,QAAAA,MAAM,EAAE,CAACnC,KAAD,EAAQE,GAAR,CAHL;AAIHZ,QAAAA,KAAK,YAAKoC,WAAW,CAAC1B,KAAD,CAAhB,SAA0B4B,SAA1B,SAAsCF,WAAW,CAACxB,GAAD,CAAjD,CAJF;AAKHkC,QAAAA,KAAK,EAAEd,KAAK,CAACtB,KAAD,CALT;AAMHlB,QAAAA,KAAK,EAAEkD;AANJ,OAAP;AAQH,KAXa,CAAd;AAYA,QAAIP,OAAO,KAAK,IAAhB,EAAsBM,KAAK,CAACN,OAAN;AAEtB,WAAOM,KAAP;AACH,GAlBa,EAkBX,CAACR,gBAAD,EAAmBD,KAAnB,EAA0BG,OAA1B,CAlBW,CAAd;AAmBH;;ICxBYY,eAAe,GAAG;AAC3B5F,EAAAA,IAAI,EAAE6F,SAAS,CAACC,OAAV,CAAkBD,SAAS,CAACE,MAA5B,CADqB;AAI3BjI,EAAAA,MAAM,EAAE+H,SAAS,CAACG,KAAV,CAAgB,CACpB,KADoB,EAEpB,WAFoB,EAGpB,OAHoB,EAIpB,cAJoB,EAKpB,QALoB,EAMpB,aANoB,EAOpB,MAPoB,EAQpB,UARoB,EASpB,QAToB,CAAhB,EAULC,UAdwB;AAe3BlI,EAAAA,UAAU,EAAE8H,SAAS,CAACK,MAfK;AAgB3BlI,EAAAA,UAAU,EAAE6H,SAAS,CAACK,MAhBK;AAiB3BlJ,EAAAA,SAAS,EAAE6I,SAAS,CAACG,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhB,EAAmCC,UAjBnB;AAoB3BhJ,EAAAA,YAAY,EAAE4I,SAAS,CAACK,MApBG;AAqB3B7I,EAAAA,SAAS,EAAEwI,SAAS,CAACK,MAAV,CAAiBD,UArBD;AAsB3B3I,EAAAA,UAAU,EAAEuI,SAAS,CAACK,MAAV,CAAiBD,UAtBF;AAuB3BlD,EAAAA,aAAa,EAAE8C,SAAS,CAACG,KAAV,CAAgB,CAC3B,eAD2B,EAE3B,eAF2B,EAG3B,eAH2B,EAI3B,eAJ2B,CAAhB,CAvBY;AA6B3BtD,EAAAA,aAAa,EAAEmD,SAAS,CAACM,MA7BE;AA8B3BlE,EAAAA,cAAc,EAAE4D,SAAS,CAACM,MA9BC;AA+B3BnE,EAAAA,WAAW,EAAE6D,SAAS,CAACK,MA/BI;AAiC3B/F,EAAAA,WAAW,EAAE0F,SAAS,CAACO,SAAV,CAAoB,CAC7BP,SAAS,CAACG,KAAV,CAAgB,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,EAAgC,UAAhC,CAAhB,CAD6B,EAE7BH,SAAS,CAACQ,IAFmB,CAApB,CAjCc;AAqC3B9H,EAAAA,UAAU,EAAEsH,SAAS,CAACK,MArCK;AAsC3B1H,EAAAA,aAAa,EAAEqH,SAAS,CAACK,MAtCE;AAuC3B9F,EAAAA,iBAAiB,EAAEyF,SAAS,CAACK,MAvCF;AAwC3B7F,EAAAA,iBAAiB,EAAEwF,SAAS,CAACM,MAxCF;AA0C3B7F,EAAAA,OAAO,EAAEuF,SAAS,CAACQ,IA1CQ;AA2C3B9F,EAAAA,YAAY,EAAEsF,SAAS,CAACQ,IA3CG;AA4C3B7F,EAAAA,YAAY,EAAEqF,SAAS,CAACQ,IA5CG;AA8C3B3F,EAAAA,OAAO,EAAEmF,SAAS,CAACC,OAAV,CACLD,SAAS,CAACS,KAAV,CAAgB;AACZjF,IAAAA,EAAE,EAAEwE,SAAS,CAACO,SAAV,CAAoB,CAACP,SAAS,CAACG,KAAV,CAAgB,CAAC,OAAD,CAAhB,CAAD,CAApB,EAAkDC,UAD1C;AAEZrF,IAAAA,KAAK,EAAEiF,SAAS,CAACS,KAAV,CAAgB;AACnB5D,MAAAA,aAAa,EAAEmD,SAAS,CAACM,MADN;AAEnBlE,MAAAA,cAAc,EAAE4D,SAAS,CAACM,MAFP;AAGnBnE,MAAAA,WAAW,EAAE6D,SAAS,CAACK,MAHJ;AAInB3H,MAAAA,UAAU,EAAEsH,SAAS,CAACK,MAJH;AAKnB9F,MAAAA,iBAAiB,EAAEyF,SAAS,CAACK,MALV;AAMnB7F,MAAAA,iBAAiB,EAAEwF,SAAS,CAACM;AANV,KAAhB,EAOJF;AATS,GAAhB,CADK;AA9CkB;;;;;;;;;"}