{"version":3,"file":"nivo-legends.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/compute.ts","../src/svg/symbols/SymbolCircle.tsx","../src/svg/symbols/SymbolDiamond.tsx","../src/svg/symbols/SymbolSquare.tsx","../src/svg/symbols/SymbolTriangle.tsx","../src/svg/LegendSvgItem.tsx","../src/svg/LegendSvg.tsx","../src/svg/BoxLegendSvg.tsx","../src/canvas.ts","../src/hooks.ts","../src/props.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { BoxLegendSvgProps, LegendAnchor, LegendItemDirection } from './types'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify === true) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify === true) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","import { computeDimensions, computePositionFromAnchor, computeItemLayout } from './compute'\nimport { LegendCanvasProps } from './types'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n","import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n        if (reverse === true) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse])\n}\n","import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","isObject","item","Array","isArray","zeroPadding","top","right","bottom","left","computeDimensions","direction","itemsSpacing","_padding","padding","itemCount","itemWidth","itemHeight","Error","horizontalPadding","verticalPadding","width","height","spacing","computePositionFromAnchor","anchor","translateX","translateY","containerWidth","containerHeight","x","y","computeItemLayout","justify","symbolSize","symbolSpacing","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","SymbolCircle","size","fill","opacity","borderWidth","borderColor","_jsx","pointerEvents","SymbolDiamond","SymbolSquare","SymbolTriangle","symbolByShape","circle","diamond","square","triangle","LegendSvgItem","data","textColor","background","symbolShape","symbolBorderWidth","symbolBorderColor","onClick","onMouseEnter","onMouseLeave","toggleSerie","effects","useState","style","setStyle","theme","useTheme","handleMouseEnter","useCallback","event","applyEffects","filter","on","reduce","acc","effect","handleMouseLeave","isInteractive","some","handler","undefined","SymbolShape","_jsxs","itemOpacity","itemBackground","cursor","id","React","color","hidden","legends","symbol","text","itemTextColor","dominantBaseline","userSelect","label","LegendSvg","itemDirection","length","xStep","yStep","map","i","BoxLegendSvg","textAlignMapping","start","middle","end","renderLegendToCanvas","ctx","save","translate","font","fontSize","fontFamily","forEach","d","itemX","itemY","fillStyle","fillRect","textAlign","textBaseline","fillText","String","restore","useQuantizeColorScaleLegendData","scale","overriddenDomain","domain","reverse","valueFormat","v","separator","useMemo","range","items","domainValue","index","invertExtent","extent","value","LegendPropShape","PropTypes","arrayOf","object","oneOf","isRequired","number","string","oneOfType","func","shape"],"mappings":"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"}