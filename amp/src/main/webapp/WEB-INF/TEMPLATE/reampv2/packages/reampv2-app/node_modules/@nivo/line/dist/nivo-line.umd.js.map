{"version":3,"file":"nivo-line.umd.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/PointTooltip.js","../src/SliceTooltip.js","../src/props.js","../src/hooks.js","../src/Areas.js","../src/LinesItem.js","../src/Lines.js","../src/SlicesItem.js","../src/Slices.js","../src/Points.js","../src/Mesh.js","../src/Line.js","../src/ResponsiveLine.js","../src/LineCanvas.js","../src/ResponsiveLineCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} style={theme.tooltip.chip} />,\n                point.serieId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: PropTypes.object.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: PropTypes.object.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useMemo, useState } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const [hiddenIds, setHiddenIds] = useState([])\n\n    const { xScale, yScale, series: rawSeries } = useMemo(\n        () =>\n            computeXYScalesForSeries(\n                data.filter(item => hiddenIds.indexOf(item.id) === -1),\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const { legendData, series } = useMemo(() => {\n        const dataWithColor = data.map(line => ({\n            id: line.id,\n            label: line.id,\n            color: getColor(line),\n        }))\n        const series = dataWithColor\n            .map(datum => ({\n                ...rawSeries.find(serie => serie.id === datum.id),\n                color: datum.color,\n            }))\n            .filter(item => Boolean(item.id))\n        const legendData = dataWithColor\n            .map(item => ({ ...item, hidden: !series.find(serie => serie.id === item.id) }))\n            .reverse()\n\n        return { legendData, series }\n    }, [data, rawSeries, getColor])\n\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .slice(0)\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({ slice, axis, debug, tooltip, isCurrent, setCurrent }) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n        setCurrent(null)\n    }, [hideTooltip])\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(SlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({ slices, axis, debug, height, tooltip, current, setCurrent }) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(Slices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points.reverse().map(point => {\n        const mappedPoint = {\n            id: point.id,\n            x: point.x,\n            y: point.y,\n            datum: point.data,\n            fill: point.color,\n            stroke: point.borderColor,\n            label: enableLabel ? getLabel(point.data) : null,\n        }\n\n        return mappedPoint\n    })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useState } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n                toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n\n    canvasRef,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","LinePointTooltip","point","_jsx","BasicTooltip","_jsxs","data","xFormatted","yFormatted","serieColor","memo","SliceTooltip","slice","axis","theme","useTheme","otherAxis","TableTooltip","points","map","Chip","tooltip","chip","serieId","tableCellValue","commonPropTypes","PropTypes","arrayOf","shape","id","oneOfType","string","number","isRequired","x","instanceOf","Date","y","xScale","object","xFormat","func","yScale","yFormat","layers","oneOf","curve","lineCurvePropType","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","bool","enableGridY","gridXValues","gridYValues","enablePoints","pointSymbol","pointSize","pointColor","any","pointBorderWidth","pointBorderColor","enablePointLabel","pointLabel","markers","value","style","colors","ordinalColorsPropType","enableArea","areaOpacity","areaBlendMode","blendModePropType","areaBaselineValue","lineWidth","legends","LegendPropShape","isInteractive","debugMesh","enableSlices","debugSlices","sliceTooltip","enableCrosshair","crosshairType","LinePropTypes","role","useMesh","motionPropTypes","defsPropTypes","LineCanvasPropTypes","pixelRatio","commonDefaultProps","type","min","max","from","scheme","PointTooltip","LineDefaultProps","animate","motionConfig","defs","fill","LineCanvasDefaultProps","window","devicePixelRatio","useLineGenerator","useMemo","line","defined","d","curveFromProp","useAreaGenerator","area","y1","y0","usePoints","series","getPointColor","getPointBorderColor","formatX","formatY","reduce","acc","serie","filter","datum","position","i","index","length","color","borderColor","useSlices","width","height","Map","forEach","has","set","get","push","Array","entries","sort","a","b","slices","slicePoints","prevSlice","nextSlice","x0","sliceWidth","reverse","sliceHeight","useLine","xScaleSpec","yScaleSpec","enableSlicesTooltip","useValueFormatter","getColor","useOrdinalColorScale","useInheritedColor","useState","hiddenIds","setHiddenIds","computeXYScalesForSeries","item","indexOf","rawSeries","dataWithColor","label","find","Boolean","legendData","hidden","toggleSerie","useCallback","state","lineGenerator","areaGenerator","AreaPath","path","useMotionConfig","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","animated","mixBlendMode","Areas","lines","computedLines","LinesItem","thickness","Lines","SlicesItem","debug","isCurrent","setCurrent","useTooltip","showTooltipFromEvent","hideTooltip","handleMouseEnter","event","createElement","handleMouseMove","handleMouseLeave","Slices","current","Points","symbol","size","borderWidth","enableLabel","labelYOffset","getLabel","getLabelGenerator","mappedPoints","mappedPoint","stroke","DotsItem","Mesh","margin","onMouseEnter","onMouseMove","onMouseLeave","onClick","showTooltipAt","left","top","handleClick","BaseMesh","Line","props","partialMargin","pointLabelYOffset","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","currentPoint","setCurrentPoint","currentSlice","setCurrentSlice","layerById","grid","Grid","CartesianMarkers","axes","Axes","areas","crosshair","mesh","legend","BoxLegendSvg","undefined","boundDefs","bindDefs","Crosshair","SvgWrapper","layer","Fragment","defaultProps","withContainer","ResponsiveLine","ResponsiveWrapper","LineCanvas","canvasRef","canvasEl","useRef","useVoronoiMesh","delaunay","voronoi","useEffect","ctx","getContext","scale","fillStyle","background","fillRect","translate","strokeWidth","strokeStyle","renderGridLinesToCanvas","values","renderAxesToCanvas","right","bottom","save","globalAlpha","context","beginPath","restore","arc","Math","PI","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderLegendToCanvas","containerWidth","containerHeight","getPointFromMouseEvent","getRelativeCursor","isCursorInRect","pointIndex","handleMouseHover","cursor","LineCanvasWithContainer","forwardRef","ref","ResponsiveLineCanvas"],"mappings":"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"}