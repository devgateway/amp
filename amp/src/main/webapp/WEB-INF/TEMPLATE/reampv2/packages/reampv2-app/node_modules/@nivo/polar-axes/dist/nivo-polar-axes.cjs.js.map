{"version":3,"file":"nivo-polar-axes.cjs.js","sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/CircularAxisTick.tsx","../src/CircularAxis.tsx","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/RadialGrid.tsx","../src/CircularGrid.tsx","../src/PolarGrid.tsx","../src/RadialAxisTick.tsx","../src/RadialAxis.tsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { CircularAxisTickProps } from './types'\n\nexport const CircularAxisTick = ({ label, animated: animatedProps }: CircularAxisTickProps) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={animatedProps.opacity}>\n            <animated.line\n                x1={animatedProps.x1}\n                y1={animatedProps.y1}\n                x2={animatedProps.x2}\n                y2={animatedProps.y2}\n                style={theme.axis.ticks.line}\n            />\n            <animated.text\n                dx={animatedProps.textX}\n                dy={animatedProps.textY}\n                dominantBaseline=\"central\"\n                style={theme.axis.ticks.text}\n                textAnchor=\"middle\"\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { createElement, SVGProps, useMemo } from 'react'\nimport { useSpring, useTransition } from '@react-spring/web'\nimport { useMotionConfig, useTheme, positionFromAngle, degreesToRadians } from '@nivo/core'\nimport { AnyScale, getScaleTicks } from '@nivo/scales'\nimport { ArcLine } from '@nivo/arcs'\nimport { CircularAxisConfig, CircularAxisTickAnimatedProps } from './types'\nimport { CircularAxisTick } from './CircularAxisTick'\n\ntype CircularAxisProps = {\n    type: 'inner' | 'outer'\n    center?: [number, number]\n    radius: number\n    startAngle: number\n    endAngle: number\n    scale: AnyScale\n} & CircularAxisConfig\n\nconst getLinePositions = (angle: number, innerRadius: number, outerRadius: number) => {\n    const start = positionFromAngle(degreesToRadians(angle), innerRadius)\n    const end = positionFromAngle(degreesToRadians(angle), outerRadius)\n\n    return {\n        x1: start.x,\n        y1: start.y,\n        x2: end.x,\n        y2: end.y,\n    }\n}\n\nconst getTextPosition = (angle: number, radius: number) => {\n    const position = positionFromAngle(degreesToRadians(angle), radius)\n\n    return {\n        textX: position.x,\n        textY: position.y,\n    }\n}\n\nexport const CircularAxis = ({\n    type,\n    center = [0, 0],\n    radius,\n    startAngle: originalStartAngle,\n    endAngle: originalEndAngle,\n    scale,\n    tickSize = 5,\n    tickPadding = 12,\n    tickComponent = CircularAxisTick,\n}: CircularAxisProps) => {\n    const startAngle = originalStartAngle - 90\n    const endAngle = originalEndAngle - 90\n\n    const theme = useTheme()\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const spring = useSpring<{\n        radius: number\n        startAngle: number\n        endAngle: number\n        opacity: number\n    }>({\n        radius,\n        startAngle,\n        endAngle,\n        opacity: 1,\n        immediate: !animate,\n        config: springConfig,\n    })\n\n    const ticks = useMemo(() => {\n        const values = getScaleTicks(scale)\n\n        return values.map((value, index) => ({\n            key: index,\n            label: value,\n            angle: scale(value) - 90,\n        }))\n    }, [scale])\n\n    const outerRadius = type === 'inner' ? radius - tickSize : radius + tickSize\n    const textRadius = type === 'inner' ? outerRadius - tickPadding : outerRadius + tickPadding\n\n    const transition = useTransition<typeof ticks[0], CircularAxisTickAnimatedProps>(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            ...getLinePositions(tick.angle, radius, outerRadius),\n            ...getTextPosition(tick.angle, textRadius),\n            opacity: 1,\n        }),\n        from: tick => ({\n            ...getLinePositions(tick.angle, radius, outerRadius),\n            ...getTextPosition(tick.angle, textRadius),\n            opacity: 0,\n        }),\n        enter: tick => ({\n            ...getLinePositions(tick.angle, radius, outerRadius),\n            ...getTextPosition(tick.angle, textRadius),\n            opacity: 1,\n        }),\n        update: tick => ({\n            ...getLinePositions(tick.angle, radius, outerRadius),\n            ...getTextPosition(tick.angle, textRadius),\n            opacity: 1,\n        }),\n        leave: tick => ({\n            ...getLinePositions(tick.angle, radius, outerRadius),\n            ...getTextPosition(tick.angle, textRadius),\n            opacity: 0,\n        }),\n        immediate: !animate,\n        config: springConfig,\n    })\n\n    return (\n        <g transform={`translate(${center[0]}, ${center[1]})`}>\n            <ArcLine\n                animated={spring}\n                {...(theme.axis.domain.line as Omit<SVGProps<SVGPathElement>, 'ref'>)}\n                fill=\"none\"\n            />\n            {transition((animatedProps, tick) =>\n                createElement(tickComponent, {\n                    key: tick.key,\n                    label: tick.label,\n                    animated: animatedProps,\n                })\n            )}\n        </g>\n    )\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { SVGProps, useMemo } from 'react'\nimport { useTransition, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { AnyScale, getScaleTicks } from '@nivo/scales'\n\ninterface PolarGridProps {\n    scale: AnyScale\n    ticks?: number | number[]\n    innerRadius: number\n    outerRadius: number\n}\n\nexport const RadialGrid = ({ scale, innerRadius, outerRadius }: PolarGridProps) => {\n    const theme = useTheme()\n\n    const angles = useMemo(() => {\n        const values = getScaleTicks(scale)\n\n        return values.map((angleValue, index) => ({\n            id: index,\n            angle: scale(angleValue) - 90,\n        }))\n    }, [scale])\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<\n        { id: number; angle: number },\n        { angle: number; opacity: number }\n    >(angles, {\n        keys: item => item.id,\n        initial: item => ({\n            angle: item.angle,\n            opacity: 1,\n        }),\n        from: item => ({\n            angle: item.angle,\n            opacity: 0,\n        }),\n        enter: item => ({\n            angle: item.angle,\n            opacity: 1,\n        }),\n        update: item => ({\n            angle: item.angle,\n            opacity: 1,\n        }),\n        leave: item => ({\n            angle: item.angle,\n            opacity: 0,\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((style, angle) => (\n                <animated.g\n                    key={angle.id}\n                    transform={style.angle.to(v => `rotate(${v})`)}\n                    opacity={style.opacity}\n                >\n                    <line\n                        x1={innerRadius}\n                        x2={outerRadius}\n                        {...(theme.grid.line as SVGProps<SVGLineElement>)}\n                    />\n                </animated.g>\n            ))}\n        </>\n    )\n}\n","import { SVGProps, useMemo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { AnyScale, getScaleTicks } from '@nivo/scales'\nimport { ArcLine } from '@nivo/arcs'\n\ninterface CircularGridProps {\n    scale: AnyScale\n    startAngle: number\n    endAngle: number\n}\n\nexport const CircularGrid = ({\n    scale,\n    startAngle: originalStartAngle,\n    endAngle: originalEndAngle,\n}: CircularGridProps) => {\n    const theme = useTheme()\n\n    const startAngle = originalStartAngle - 90\n    const endAngle = originalEndAngle - 90\n\n    const radii = useMemo(() => {\n        const values = getScaleTicks(scale)\n\n        return values.map((value, index) => {\n            let radius = scale(value) as number\n            if ('bandwidth' in scale) {\n                radius += scale.bandwidth() / 2\n            }\n\n            return {\n                id: index,\n                radius,\n            }\n        })\n    }, [scale])\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<\n        { id: number; radius: number },\n        { radius: number; startAngle: number; endAngle: number; opacity: number }\n    >(radii, {\n        keys: item => item.id,\n        initial: item => ({\n            radius: item.radius,\n            startAngle,\n            endAngle,\n            opacity: 1,\n        }),\n        from: item => ({\n            radius: item.radius,\n            startAngle,\n            endAngle,\n            opacity: 0,\n        }),\n        enter: item => ({\n            radius: item.radius,\n            startAngle,\n            endAngle,\n            opacity: 1,\n        }),\n        update: item => ({\n            radius: item.radius,\n            startAngle,\n            endAngle,\n            opacity: 1,\n        }),\n        leave: item => ({\n            radius: item.radius,\n            startAngle,\n            endAngle,\n            opacity: 0,\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((style, item) => (\n                <ArcLine\n                    key={item.id}\n                    animated={style}\n                    {...(theme.grid.line as Omit<SVGProps<SVGPathElement>, 'ref'>)}\n                    strokeOpacity={style.opacity}\n                    fill=\"none\"\n                />\n            ))}\n        </>\n    )\n}\n","import { AnyScale } from '@nivo/scales'\nimport { RadialGrid } from './RadialGrid'\nimport { CircularGrid } from './CircularGrid'\n\ninterface PolarGridProps {\n    center: [number, number]\n    enableRadialGrid: boolean\n    enableCircularGrid: boolean\n    angleScale: AnyScale\n    radiusScale: AnyScale\n    startAngle: number\n    endAngle: number\n}\n\nexport const PolarGrid = ({\n    center,\n    enableRadialGrid,\n    enableCircularGrid,\n    angleScale,\n    radiusScale,\n    startAngle,\n    endAngle,\n}: PolarGridProps) => {\n    const innerRadius = Math.min(...radiusScale.range())\n    const outerRadius = Math.max(...radiusScale.range())\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {enableRadialGrid && (\n                <RadialGrid\n                    scale={angleScale}\n                    innerRadius={innerRadius}\n                    outerRadius={outerRadius}\n                />\n            )}\n            {enableCircularGrid && (\n                <CircularGrid scale={radiusScale} startAngle={startAngle} endAngle={endAngle} />\n            )}\n        </g>\n    )\n}\n","import { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { RadialAxisTickProps } from './types'\n\nexport const RadialAxisTick = ({\n    label,\n    textAnchor,\n    animated: animatedProps,\n}: RadialAxisTickProps) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g\n            opacity={animatedProps.opacity}\n            transform={to(\n                [animatedProps.y, animatedProps.rotation],\n                (y, rotation) => `translate(${y}, 0) rotate(${rotation})`\n            )}\n        >\n            <animated.line x2={animatedProps.length} style={theme.axis.ticks.line} />\n            <animated.text\n                dx={animatedProps.textX}\n                textAnchor={textAnchor}\n                dominantBaseline=\"central\"\n                style={theme.axis.ticks.text}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { createElement, useMemo } from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useMotionConfig, normalizeAngle } from '@nivo/core'\nimport { AnyScale, getScaleTicks } from '@nivo/scales'\nimport { RadialAxisConfig, RadialAxisTickAnimatedProps } from './types'\nimport { RadialAxisTick } from './RadialAxisTick'\n\ntype RadialAxisProps = {\n    type: 'start' | 'end'\n    center: [number, number]\n    angle: number\n    scale: AnyScale\n} & RadialAxisConfig\n\nexport const RadialAxis = ({\n    type,\n    center,\n    angle: rawAngle,\n    scale,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation: extraRotation = 0,\n    tickComponent = RadialAxisTick,\n}: RadialAxisProps) => {\n    const angle = normalizeAngle(rawAngle)\n\n    let textAnchor: 'start' | 'end'\n    let lineX: number\n    let textX: number\n    let tickRotation: number\n\n    if (type === 'start') {\n        tickRotation = 90 + extraRotation\n        if (angle <= 90) {\n            lineX = -tickSize\n            textX = lineX - tickPadding\n            textAnchor = 'end'\n        } else if (angle < 270) {\n            lineX = tickSize\n            textX = lineX + tickPadding\n            textAnchor = 'start'\n            tickRotation -= 180\n        } else {\n            lineX = -tickSize\n            textX = lineX - tickPadding\n            textAnchor = 'end'\n        }\n    } else {\n        tickRotation = 90 + extraRotation\n        if (angle < 90) {\n            lineX = tickSize\n            textX = lineX + tickPadding\n            textAnchor = 'start'\n        } else if (angle < 270) {\n            lineX = -tickSize\n            textX = lineX - tickPadding\n            textAnchor = 'end'\n            tickRotation -= 180\n        } else {\n            lineX = tickSize\n            textX = lineX + tickPadding\n            textAnchor = 'start'\n        }\n    }\n\n    const ticks = useMemo(() => {\n        const values = getScaleTicks(scale)\n\n        return values.map((value, index) => {\n            let position = scale(value) as number\n            if ('bandwidth' in scale) {\n                position += scale.bandwidth() / 2\n            }\n\n            return {\n                key: index,\n                label: value,\n                position,\n            }\n        })\n    }, [scale])\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const spring = useSpring<{ rotation: string }>({\n        rotation: rawAngle - 90,\n        immediate: !animate,\n        config: springConfig,\n    })\n\n    const transition = useTransition<typeof ticks[0], RadialAxisTickAnimatedProps>(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            y: tick.position,\n            textX,\n            rotation: tickRotation,\n            length: lineX,\n            opacity: 1,\n        }),\n        from: tick => ({\n            y: tick.position,\n            textX,\n            rotation: tickRotation,\n            length: lineX,\n            opacity: 0,\n        }),\n        enter: tick => ({\n            y: tick.position,\n            textX,\n            rotation: tickRotation,\n            length: lineX,\n            opacity: 1,\n        }),\n        update: tick => ({\n            y: tick.position,\n            textX,\n            rotation: tickRotation,\n            length: lineX,\n            opacity: 1,\n        }),\n        leave: tick => ({\n            y: tick.position,\n            textX,\n            rotation: tickRotation,\n            length: lineX,\n            opacity: 0,\n        }),\n        immediate: !animate,\n        config: springConfig,\n    })\n\n    return (\n        <g transform={`translate(${center[0]}, ${center[1]})`}>\n            <animated.g transform={spring.rotation.to(value => `rotate(${value})`)}>\n                {transition((animatedProps, tick) =>\n                    createElement(tickComponent, {\n                        key: tick.key,\n                        label: tick.label,\n                        y: tick.position,\n                        textX,\n                        rotation: tickRotation,\n                        length: lineX,\n                        textAnchor,\n                        animated: animatedProps,\n                    })\n                )}\n            </animated.g>\n        </g>\n    )\n}\n"],"names":["defineProperty","CircularAxisTick","label","animatedProps","animated","theme","useTheme","_jsxs","opacity","_jsx","x1","y1","x2","y2","axis","ticks","line","textX","textY","text","getLinePositions","angle","innerRadius","outerRadius","start","positionFromAngle","degreesToRadians","end","x","y","getTextPosition","radius","position","CircularAxis","type","center","originalStartAngle","startAngle","originalEndAngle","endAngle","scale","tickSize","tickPadding","tickComponent","useMotionConfig","animate","springConfig","config","spring","useSpring","immediate","useMemo","values","getScaleTicks","map","value","index","key","textRadius","transition","useTransition","keys","tick","initial","from","enter","update","leave","ArcLine","domain","createElement","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","RadialGrid","angles","angleValue","id","item","style","to","v","grid","CircularGrid","radii","bandwidth","PolarGrid","enableRadialGrid","enableCircularGrid","angleScale","radiusScale","Math","min","range","max","RadialAxisTick","textAnchor","rotation","length","RadialAxis","rawAngle","tickRotation","extraRotation","normalizeAngle","lineX"],"mappings":"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"}