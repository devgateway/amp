<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="true" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-18110</jira>
	<keyword>Views</keyword>
	<author>cdolghier</author>
	<description>dg_message logging structures</description>
	<apply>
		<script>
			<lang delimiter="@" type="postgres">

CREATE OR REPLACE FUNCTION trn_updated_proc() RETURNS trigger AS $BODY$
    BEGIN
    	IF (OLD.message_key != NEW.message_key) OR (OLD.message_utf8 != NEW.message_utf8) THEN
        	INSERT INTO amp_etl_changelog(entity_name, entity_id) VALUES ('translation', NEW.message_key::bigint);
        END IF;
        RETURN NEW;
    END;
$BODY$ LANGUAGE plpgsql@@@

CREATE OR REPLACE FUNCTION trn_deleted_proc() RETURNS trigger AS $BODY$
    BEGIN
        INSERT INTO amp_etl_changelog(entity_name, entity_id) VALUES ('translation', OLD.message_key::bigint);
        RETURN OLD;
    END;
$BODY$ LANGUAGE plpgsql@@@

CREATE OR REPLACE FUNCTION trn_added_proc() RETURNS trigger AS $BODY$
    BEGIN
        INSERT INTO amp_etl_changelog(entity_name, entity_id) VALUES ('translation', NEW.message_key::bigint);
        RETURN NEW;
    END;
$BODY$ LANGUAGE plpgsql@@@

CREATE TRIGGER trn_added_trig BEFORE INSERT ON dg_message
    FOR EACH ROW EXECUTE PROCEDURE trn_added_proc()@@@

CREATE TRIGGER trn_updated_trig BEFORE UPDATE ON dg_message
    FOR EACH ROW EXECUTE PROCEDURE trn_updated_proc()@@@

CREATE TRIGGER trn_deleted_trig BEFORE DELETE ON dg_message
    FOR EACH ROW EXECUTE PROCEDURE trn_deleted_proc()@@@

			</lang>
		</script>
	</apply>
</tns:patch>
