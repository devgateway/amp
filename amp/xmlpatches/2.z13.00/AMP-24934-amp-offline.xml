<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="true" retryOnFail="true"
           xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../../doc/xmlpatcher.xsd ">
    <jira>AMP-24934</jira>
    <keyword>Adding amp_offline_changelog to aid synchronization between AMP and AMP Offline clients.</keyword>
    <author>ociubotaru</author>
    <apply>
        <script>
            <lang delimiter="@" type="postgres">

                create table amp_offline_changelog (
                    id bigint primary key,
                    entity_name varchar(50) not null,
                    entity_id varchar(255),
                    operation_name varchar(20) not null,
                    operation_time timestamp not null
                ) @@@

                create sequence amp_offline_changelog_seq @@@
                ALTER TABLE amp_offline_changelog ALTER COLUMN id SET DEFAULT nextval('amp_offline_changelog_seq') @@@

                CREATE INDEX amp_offline_changelog_idx ON amp_offline_changelog (operation_time, entity_name, entity_id, operation_name) @@@

                CREATE OR REPLACE FUNCTION update_offline_changelog()
                RETURNS TRIGGER AS
                $BODY$
                DECLARE
                    v_operation_name VARCHAR;
                    v_entity_name VARCHAR;
                    v_entity_id VARCHAR := NULL;
                    v_row RECORD;
                BEGIN
                    IF TG_OP='DELETE' THEN
                        v_operation_name = 'deleted';
                        v_row = OLD;
                    ELSE
                        v_operation_name = 'updated';
                        v_row = NEW;
                    END IF;

                    IF (TG_TABLE_NAME = 'amp_global_settings') THEN
                        v_entity_name := 'global settings';
                        v_operation_name := 'updated';
                    ELSIF (TG_TABLE_NAME = 'amp_team') THEN
                        v_entity_name := 'workspaces';
                        v_operation_name := 'updated';
                    ELSIF (TG_TABLE_NAME = 'amp_team_member') THEN
                        v_entity_name := 'workspace member';
                        v_entity_id := v_row.amp_team_mem_id;
                    ELSIF (TG_TABLE_NAME = 'dg_message') THEN
                        v_entity_name := 'translation';
                        v_entity_id := v_row.message_key;
                    END IF;

                    IF v_entity_id IS NULL THEN
                        UPDATE amp_offline_changelog SET operation_time=now(), operation_name=v_operation_name WHERE entity_name=v_entity_name AND entity_id IS NULL;
                    ELSE
                        UPDATE amp_offline_changelog SET operation_time=now(), operation_name=v_operation_name WHERE entity_name=v_entity_name AND entity_id=v_entity_id;
                    END IF;
                    IF NOT FOUND THEN
                        INSERT INTO amp_offline_changelog(entity_name, entity_id, operation_name, operation_time) VALUES(v_entity_name, v_entity_id, v_operation_name, now());
                    END IF;

                    RETURN NULL;
                END;
                $BODY$
                LANGUAGE plpgsql VOLATILE; @@@

                CREATE TRIGGER update_offline_changelog_trg AFTER INSERT OR UPDATE OR DELETE ON amp_global_settings
                FOR EACH ROW EXECUTE PROCEDURE update_offline_changelog() @@@

                CREATE TRIGGER update_offline_changelog_trg AFTER INSERT OR UPDATE OR DELETE ON amp_team
                FOR EACH ROW EXECUTE PROCEDURE update_offline_changelog() @@@

                CREATE TRIGGER update_offline_changelog_trg AFTER INSERT OR UPDATE OR DELETE ON amp_team_member
                FOR EACH ROW EXECUTE PROCEDURE update_offline_changelog() @@@

                CREATE TRIGGER update_offline_changelog_trg AFTER INSERT OR UPDATE OR DELETE ON dg_message
                FOR EACH ROW EXECUTE PROCEDURE update_offline_changelog() @@@

            </lang>
        </script>
    </apply>
</tns:patch>