<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="true" retryOnFail="true"
           xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../../doc/xmlpatcher.xsd ">
    <jira>AMP-28883</jira>
    <author>ociubotaru</author>
    <description>Skip updating amp_offline_changelog if only timestamp changed in dg_message.</description>
    <apply>
        <script>
            <lang delimiter="@@@" type="postgres"><![CDATA[

                -- custom version of update_offline_changelog() trigger with the only difference that it skips
                -- updating amp_offline_changelog is only last_accessed has changed
                CREATE OR REPLACE FUNCTION update_offline_changelog_dg_message()
                  RETURNS TRIGGER AS
                $BODY$
                DECLARE
                  v_entity_name VARCHAR = 'translation';
                  v_operation_name VARCHAR;
                  v_entity_id VARCHAR = NULL;
                  v_row RECORD;
                  hs_row HSTORE;
                  only_ts_changed BOOLEAN;
                BEGIN

                  IF TG_OP='DELETE' THEN
                    v_row = OLD;
                    v_operation_name = 'deleted';
                  ELSE
                    v_row = NEW;
                    v_operation_name = 'updated';
                  END IF;
                  hs_row = hstore(v_row);

                  only_ts_changed = ((TG_OP='UPDATE') AND ((hstore(OLD) - 'last_accessed'::text) = (hs_row - 'last_accessed'::text)));

                  IF NOT only_ts_changed THEN
                      v_entity_id = hs_row -> 'message_key';

                      IF v_entity_id IS NULL THEN
                        UPDATE amp_offline_changelog SET operation_time=now(), operation_name=v_operation_name WHERE entity_name=v_entity_name AND entity_id IS NULL;
                      ELSE
                        UPDATE amp_offline_changelog SET operation_time=now(), operation_name=v_operation_name WHERE entity_name=v_entity_name AND entity_id=v_entity_id;
                      END IF;
                      IF NOT FOUND THEN
                        INSERT INTO amp_offline_changelog(entity_name, entity_id, operation_name, operation_time) VALUES(v_entity_name, v_entity_id, v_operation_name, now());
                      END IF;
                  END IF;

                  RETURN NULL;
                END;
                $BODY$
                LANGUAGE plpgsql VOLATILE; @@@

                DROP TRIGGER update_offline_changelog_trg ON dg_message; @@@

                CREATE TRIGGER update_offline_changelog_trg
                AFTER INSERT OR UPDATE OR DELETE ON dg_message
                FOR EACH ROW EXECUTE PROCEDURE update_offline_changelog_dg_message(); @@@

            ]]></lang>
        </script>
    </apply>
</tns:patch>
