<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="false" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-15448</jira>
	<keyword>Views</keyword>
	<author>Dolghier Constantin</author>
	<description>recreate view, this will always be the last version of the view</description>
	<trigger type="all">
		<condition type="custom">
			<script returnVar="val">
				<lang type="sql">
					SELECT settingsvalue FROM amp_global_settings where settingsname='Recreate the views on the next server restart';
				</lang>
			</script>
 			<test>val.equalsIgnoreCase("true")</test>
		</condition>
	</trigger> 
	<apply>
		<script> <!-- v_donors: all donors which are mentioned in amp_funding with:
		  - a src-role of DN 
		     OR
		  - containing amp_funding_details with an adjustment_type::category_class:key of "SSC_adjustment_type"   
		   -->
			<lang delimiter=";" type="postgres">
				DROP VIEW IF EXISTS v_donors CASCADE;
				CREATE OR REPLACE VIEW v_donors AS
				    SELECT 
                        aav.amp_activity_id, 
                        v.name, 
                        COALESCE(v.amp_donor_org_id, -999999999) AS amp_donor_org_id,
                        COALESCE(v.org_grp_id, -999999999) AS org_grp_id,
                        COALESCE(v.org_type_id, -999999999) AS org_type_id
                    FROM amp_activity_version aav
                    LEFT JOIN (
						SELECT f.amp_activity_id, o.name, f.amp_donor_org_id, o.org_grp_id, gr.org_type AS org_type_id
	   					FROM amp_funding f, amp_organisation o
	   						LEFT JOIN amp_org_group gr ON o.org_grp_id = gr.amp_org_grp_id
	  						WHERE 
	  							f.amp_donor_org_id = o.amp_org_id AND 
	  							(
	  								f.source_role_id = (( SELECT amp_role.amp_role_id FROM amp_role WHERE amp_role.role_code::text = 'DN'::text)) 
	  								OR (f.amp_funding_id IN (
	  									SELECT DISTINCT(amp_funding_id) FROM amp_funding_detail det 
	  										WHERE det.adjustment_type IN (select id from amp_category_value 
	  											WHERE amp_category_class_id=(SELECT id FROM amp_category_class WHERE keyname='SSC_adjustment_type')))))
                    ) v
                    ON aav.amp_activity_id = v.amp_activity_id;
  											
  				DROP VIEW IF EXISTS v_donor_type CASCADE;							
			    CREATE OR REPLACE VIEW v_donor_type AS
			        SELECT 
                        aav.amp_activity_id, 
                        v.org_type_name, 
                        COALESCE(v.org_type_id, -999999999) AS org_type_id
                    FROM amp_activity_version aav
                    LEFT JOIN (
				   		SELECT DISTINCT vd.amp_activity_id, org.org_type_name, org.org_type_id FROM 
							v_donors vd 
								JOIN ni_all_orgs_dimension org ON org.org_id = vd.amp_donor_org_id
                    ) v
                    ON aav.amp_activity_id = v.amp_activity_id;
							
				DROP VIEW IF EXISTS v_donor_groups CASCADE;
			   	CREATE OR REPLACE VIEW v_donor_groups AS
			   	    SELECT 
                        aav.amp_activity_id, 
                        v.org_grp_name, 
                        COALESCE(v.org_grp_id, -999999999) AS org_grp_id
                    FROM amp_activity_version aav
                    LEFT JOIN (
				   		SELECT DISTINCT vd.amp_activity_id, org.org_grp_name, org.org_grp_id FROM 
							v_donors vd 
								JOIN ni_all_orgs_dimension org ON org.org_id = vd.amp_donor_org_id
					) v
                    ON aav.amp_activity_id = v.amp_activity_id;						

			</lang>
		</script>
	</apply>
</tns:patch>
