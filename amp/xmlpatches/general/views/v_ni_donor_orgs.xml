<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="false" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-21453</jira>
	<keyword>Views</keyword>
	<author>Dolghier Constantin</author>
	<description>recreate view, this will always be the last version of the view</description>
	<trigger type="all">
		<condition type="custom">
			<script returnVar="val">
				<lang type="sql">
					SELECT settingsvalue FROM amp_global_settings where settingsname='Recreate the views on the next server restart';
				</lang>
			</script>
 			<test>val.equalsIgnoreCase("true")</test>
		</condition>
	</trigger> 
	<apply>
		<script> <!-- v_donors: all donors which are mentioned in amp_funding with:
		  - a src-role of DN 
		     OR
		  - containing amp_funding_details with an adjustment_type::category_class:key of "SSC_adjustment_type"   
		   -->
			<lang delimiter=";" type="postgres"><![CDATA[
				CREATE OR REPLACE VIEW v_ni_donor_orgs AS
				 	SELECT
                        aav.amp_activity_id,
                        v.org_name,
                        COALESCE(v.org_id, -999999999) AS org_id,
                        v.terms_assist_id,
                        v.financing_instrument_id,
                        COALESCE(v.donor_org_id, -999999999) AS donor_org_id,
                        v.mode_of_payment_id,
                        v.funding_status_id,
                        v.agreement_id,
                        v.funding_id,
                        v.vulnerable_group_id,
                        v.project_results_available_id,
                        v.donor_org_country_id
				  	FROM amp_activity_version aav
					LEFT JOIN (
						SELECT r.activity as amp_activity_id, org.name AS org_name, r.organisation as org_id,
							f.type_of_assistance_category_va as terms_assist_id,
							f.financing_instr_category_value as financing_instrument_id,
							r.organisation as donor_org_id,
							f.mode_of_payment_category_va as mode_of_payment_id,
							f.funding_status_category_va as funding_status_id,
							f.agreement as agreement_id,
							f.amp_funding_id as funding_id,
							f.vulnerable_group_va AS vulnerable_group_id,
							CASE WHEN f.project_results_available THEN 1 ELSE 2 END AS project_results_available_id,
							org.amp_country_id AS donor_org_country_id
						FROM amp_org_role r
						JOIN amp_organisation org ON org.amp_org_id = r.organisation
						LEFT JOIN amp_funding f ON f.amp_activity_id = r.activity and f.amp_donor_org_id = r.organisation and f.source_role_id=r.role
							WHERE
								(r.role = (SELECT amp_role.amp_role_id FROM amp_role WHERE amp_role.role_code = 'DN'))
							OR
								(f.amp_funding_id IN (
								  SELECT DISTINCT(amp_funding_id)
								  FROM amp_funding_detail det
								  WHERE det.adjustment_type
								  	IN (SELECT id FROM amp_category_value
								 		WHERE amp_category_class_id=(SELECT id FROM amp_category_class WHERE keyname='SSC_adjustment_type'))))
					) v
					ON aav.amp_activity_id = v.amp_activity_id;
			]]></lang>
		</script>
	</apply>
</tns:patch>
