<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="false" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-14167</jira>
	<keyword>Views</keyword>
	<author>Constantin Dolghier</author>
	<description>recreate view, this will always be the last version of the view</description>
	<trigger type="all">
		<condition type="custom">
			<script returnVar="val">
				<lang type="sql">
					SELECT settingsvalue FROM amp_global_settings where settingsname='Recreate the views on the next server restart';
				</lang>
			</script>
 			<test>val.equalsIgnoreCase("true")</test>
		</condition>
	</trigger> 
	<apply>
		<script>
			<lang delimiter=";" type="postgres">
				<!-- if you are changing this view to eliminate a.draft != true, also eliminate it from v_pledges_projects!
					else you will get inconsistent results when doing pledges reports with hierarchies by related_project
			 	-->
				DROP VIEW IF EXISTS v_pledges_funding_st;
			
				CREATE OR REPLACE VIEW v_pledges_funding_st AS 
	    			SELECT
						coalesce(f.id, -1) AS pledge_id, afd.amp_fund_detail_id, afd.amp_fund_detail_id as id,
						afd.transaction_type, afd.adjustment_type, 
						cval3.category_value AS adjustment_type_name, afd.transaction_date, 
						afd.transaction_amount, c.currency_code, cval.id AS terms_assist_id, 
						cval.category_value AS terms_assist_name, b.org_grp_name, 
						ot.org_type AS donor_type_name, 
						cval2.category_value AS financing_instrument_name, 
						cval2.id AS financing_instrument_id,
						modalities.name AS aid_modality_name,
						modalities.level_code AS aid_modality_id,
						b.amp_org_grp_id, ot.amp_org_type_id AS org_type_id, 
						a.name AS related_project,
						a.amp_activity_id AS related_project_id
					FROM amp_funding_pledges f
						RIGHT JOIN amp_funding_detail afd ON afd.pledge_id = f.id
						LEFT JOIN amp_funding ampf ON ampf.amp_funding_id = afd.amp_funding_id
						LEFT JOIN amp_category_value cval ON cval.id = ampf.type_of_assistance_category_va
						LEFT JOIN amp_org_group b ON b.amp_org_grp_id = f.amp_org_grp_id
						LEFT JOIN amp_org_type ot ON ot.amp_org_type_id = b.org_type
						LEFT JOIN amp_category_value cval2 ON cval2.id = ampf.financing_instr_category_value
			   
						LEFT JOIN amp_currency c ON c.amp_currency_id = afd.amp_currency_id
						LEFT JOIN amp_category_value cval3 ON cval3.id = afd.adjustment_type
			   
						LEFT JOIN amp_activity_version a ON (a.amp_activity_id = ampf.amp_activity_id) AND (a.draft != true) AND (a.deleted != true)
			   
						LEFT JOIN v_modalities modalities ON modalities.amp_activity_id = a.amp_activity_id
					WHERE (a.amp_team_id IS NOT NULL)
					
			UNION ALL 
			
				SELECT  <!-- Actual Pledge entries -->
					f.id AS pledge_id,  
					fd.id AS amp_fund_detail_id, fd.id AS id,  
					7 AS transaction_type, 
					1 AS adjustment_type, 'Actual' AS adjustment_type_name, 
					CASE 
						WHEN fd.datestart IS NULL THEN to_date('02 Jan ' || fd.year, 'DD Mon YYYY')
						ELSE fd.datestart
					END AS transaction_date, 
					fd.amount AS transaction_amount, c.currency_code, 
					cval.id AS terms_assist_id, 
					cval.category_value AS terms_assist_name, b.org_grp_name, 
					ot.org_type AS donor_type_name,
					NULL AS financing_instrument_name, 
					NULL AS financing_instrument_id,			             
					cval2.category_value AS aid_modality_name, 
					cval2.id AS aid_modality_id, 
					b.amp_org_grp_id, ot.amp_org_type_id AS org_type_id, 
					a.name AS related_project,
					a.amp_activity_id AS related_project_id
				FROM amp_funding_pledges f
					JOIN amp_funding_pledges_details fd ON f.id = fd.pledge_id
					LEFT JOIN amp_category_value cval ON cval.id = fd.type_of_assistance
					LEFT JOIN amp_currency c ON c.amp_currency_id = fd.currency
					LEFT JOIN amp_org_group b ON b.amp_org_grp_id = f.amp_org_grp_id
					LEFT JOIN amp_org_type ot ON ot.amp_org_type_id = b.org_type
					LEFT JOIN amp_category_value cval2 ON cval2.id = fd.aid_modality
					LEFT JOIN 
						(SELECT pledge_id, max(amp_funding_id) as amp_funding_id FROM amp_funding_detail GROUP BY pledge_id) afd ON afd.pledge_id = f.id
					LEFT JOIN amp_funding ampf ON ampf.amp_funding_id = afd.amp_funding_id
					LEFT JOIN amp_activity_version a ON (a.amp_activity_id = ampf.amp_activity_id) AND (a.draft != true) AND (a.deleted != true);
        	</lang>
		</script>
	</apply>
</tns:patch>
