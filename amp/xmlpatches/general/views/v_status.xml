<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="false" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-14167</jira>
	<keyword>Views</keyword>
	<author>Alexandru Artimon</author>
	<description>recreate view, this will always be the last version of the view</description>
	<trigger type="all">
		<condition type="custom">
			<script returnVar="val">
				<lang type="sql">
					SELECT settingsvalue FROM amp_global_settings where settingsname='Recreate the views on the next server restart';
				</lang>
			</script>
 			<test>val.equalsIgnoreCase("true")</test>
		</condition>
	</trigger> 
	<apply>
		<script>
			<lang delimiter=";" type="postgres">
				DROP VIEW IF EXISTS v_status CASCADE;
			    CREATE OR REPLACE VIEW v_status AS 
			        SELECT aav.amp_activity_id, v.name AS name, COALESCE(v.amp_status_id, -999999999) AS amp_status_id 
			        FROM amp_activity_version aav
			        LEFT JOIN (
				        SELECT aac.amp_activity_id, acv.category_value AS name, aac.amp_categoryvalue_id AS amp_status_id 
				        FROM amp_category_value acv, amp_category_class acc, amp_activities_categoryvalues aac 
				        WHERE (((acv.id = aac.amp_categoryvalue_id) AND (acc.id = acv.amp_category_class_id)) AND ((acc.keyname)::text = 'activity_status'::text))
				    ) v
				    ON aav.amp_activity_id = v.amp_activity_id;

				DROP VIEW IF EXISTS v_ssc_status CASCADE;
				CREATE OR REPLACE VIEW v_ssc_status AS
				    SELECT aav.amp_activity_id, v.name AS name, COALESCE(v.amp_status_id, -999999999) AS amp_status_id 
				    FROM amp_activity_version aav
                    LEFT JOIN (
						SELECT aac.amp_activity_id, acv.category_value AS name, aac.amp_categoryvalue_id AS amp_status_id
						FROM amp_category_value acv, amp_category_class acc, amp_activities_categoryvalues aac
						WHERE (((acv.id = aac.amp_categoryvalue_id) AND (acc.id = acv.amp_category_class_id)) AND ((acc.keyname)::text = 'SSC_activity_status'::text))
					) v
                    ON aav.amp_activity_id = v.amp_activity_id;

        	</lang>
		</script>
	</apply>
</tns:patch>
