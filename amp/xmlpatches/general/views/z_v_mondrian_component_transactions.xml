<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="false" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-18110</jira>
	<keyword>Views</keyword>
	<author>Constantin Dolghier</author>
	<description>recreate view, this will always be the last version of the view</description>
	<trigger type="all">
		<condition type="custom">
			<script returnVar="val">
				<lang type="sql">
					SELECT settingsvalue FROM amp_global_settings where settingsname='Recreate the views on the next server restart';
				</lang>
			</script>
 			<test>val.equalsIgnoreCase("true")</test>
		</condition>
	</trigger>
	<apply>
		<script>
			<lang delimiter=";" type="postgres">
				DROP VIEW IF EXISTS v_mondrian_component_transactions;
			    CREATE OR REPLACE VIEW v_mondrian_component_transactions AS
			    
SELECT
	aac.amp_activity_id AS amp_activity_id, f.amp_component_funding_id, 
	f.amp_component_id AS amp_component_id, 
	COALESCE(f.rep_organization_id, 999999999) AS component_organisation_id,
	f.transaction_type, f.adjustment_type, 
	f.transaction_date, 
	to_char(f.transaction_date, 'J')::integer AS date_code,

	CASE
		WHEN (f.currency_id != (SELECT amp_currency_id FROM amp_currency WHERE currency_code = (SELECT settingsvalue FROM amp_global_settings WHERE settingsname = 'Base Currency'))) AND (f.exchange_rate IS NOT NULL) AND (f.exchange_rate > 0) THEN f.transaction_amount / f.exchange_rate 
		ELSE f.transaction_amount 
	END as transaction_amount,
	CASE 
		WHEN (f.currency_id != (SELECT amp_currency_id FROM amp_currency WHERE currency_code = (SELECT settingsvalue FROM amp_global_settings WHERE settingsname = 'Base Currency'))) AND (f.exchange_rate IS NOT NULL) AND (f.exchange_rate > 0) THEN 
			(SELECT amp_currency_id FROM amp_currency WHERE currency_code = (SELECT settingsvalue FROM amp_global_Settings WHERE settingsname = 'Base Currency')) 
		ELSE f.currency_id
	END as currency_id

FROM
	amp_component_funding f, amp_activity_components aac
WHERE f.amp_component_id = aac.amp_component_id

UNION ALL

SELECT
	aac.amp_activity_id AS amp_activity_id, 999999999 AS amp_component_funding_id,
	aac.amp_component_id AS amp_component_id,
	999888777 AS component_organisation_id,
	999 AS transaction_type, (SELECT acv.id FROM amp_category_value acv WHERE acv.category_value='Actual' AND acv.amp_category_class_id = (SELECT acc.id FROM amp_category_class acc WHERE acc.keyname = 'adjustment_type')) AS adjustment_type,
	'1970-01-01' AS transaction_date,
	to_char(to_date('1970-01-01', 'YYYY-MM-DD'), 'J')::integer AS date_code,
	100 AS transaction_amount,
	(SELECT amp_currency_id FROM amp_currency WHERE currency_code = (SELECT settingsvalue FROM amp_global_Settings WHERE settingsname = 'Base Currency')) AS currency_id
FROM amp_activity_components aac;
			</lang>
		</script>
	</apply>
</tns:patch>