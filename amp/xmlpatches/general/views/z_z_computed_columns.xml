<?xml version="1.0" encoding="UTF-8"?>
<tns:patch closeOnSuccess="false" retryOnFail="true"
	xmlns:tns="http://docs.ampdev.net/schemas/xmlpatcher" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://docs.ampdev.net/schemas/xmlpatcher ../doc/xmlpatcher.xsd ">
	<jira>AMP-22700</jira>
	<keyword>Views</keyword>
	<author>acartaleanu</author>
	<description>recreate view, this will always be the last version of the view</description>
	<trigger type="all">
		<condition type="custom">
			<script returnVar="val">
				<lang type="sql">
					SELECT settingsvalue FROM amp_global_settings where settingsname='Recreate the views on the next server restart';
				</lang>
			</script>
 			<test>val.equalsIgnoreCase("true")</test>
		</condition>
	</trigger> 
	<apply>
		<script>
			<lang delimiter=";" type="postgres">

			DROP VIEW IF EXISTS v_calculated_project_life CASCADE;
			DROP VIEW IF EXISTS v_project_age CASCADE;
			DROP VIEW IF EXISTS v_project_overage CASCADE;
			DROP VIEW IF EXISTS v_project_period CASCADE;
			DROP VIEW IF EXISTS v_project_age_ratio CASCADE;
			
			
			
			CREATE OR REPLACE VIEW v_calculated_project_life AS
				SELECT
					amp_activity_id, rawval AS calculated_project_life 
				FROM 
					(SELECT 
						amp_activity_id,
						nullif(
							greatest(0,
							To_char(actual_completion_date, 'J') :: Integer 
							- To_char(proposed_start_date, 'J') :: Integer), 0)
							AS rawval 
					FROM amp_activity_version) 
				AS rawvals
				WHERE rawval IS NOT NULL;


				CREATE OR REPLACE VIEW v_project_age AS
				SELECT amp_activity_id,
					project_age
				FROM
					(SELECT amp_activity_id,
						NULLIF((Extract(MONTH
							FROM rawdelta) + 12 * Extract(YEAR FROM rawdelta)) :: Integer,'0') 
					AS project_age
					FROM
						(SELECT amp_activity_id,
							greatest(interval '0', age(Now(), actual_start_date)) 
						AS rawdelta
						FROM amp_activity_version) AS rawvals) 
				AS computed_vals
				WHERE project_age IS NOT NULL;

			
			
			CREATE OR REPLACE VIEW v_project_overage AS
				SELECT  amp_activity_id, project_overage FROM (
					SELECT amp_activity_id, 
						NULLIF((Extract(month from rawdelta) + 12 * Extract(year from rawdelta)  ) :: Integer ,'0' )
					AS project_overage
					FROM 
						(SELECT amp_activity_id, 
							greatest(interval '0', age( Now(), proposed_completion_date ))
						AS rawdelta 
						FROM amp_activity_version) 
					AS rawvals)
				AS computed_vals
				WHERE project_overage IS NOT NULL;
			
			
			CREATE OR REPLACE VIEW v_project_period AS
			SELECT  amp_activity_id, project_period FROM (
				SELECT 
					amp_activity_id, 
					NULLIF((Extract(month from rawdelta) + 12 * Extract(year from rawdelta)  ) :: Integer ,'0')
						AS project_period
				FROM 
					(SELECT 
						amp_activity_id, 
						greatest(interval '0', age( proposed_completion_date, actual_start_date))
							AS rawdelta 
					FROM amp_activity_version) 
				AS rawvals
				) 
			AS computed_vals
			WHERE project_period IS NOT NULL;
			
			CREATE OR REPLACE VIEW v_project_age_ratio AS
				SELECT vpa.amp_activity_id, (vpa.project_age :: Real) / (vpp.project_period :: Real) 
				AS project_age_ratio 
				FROM v_project_age vpa 
				JOIN v_project_period vpp 
					ON vpa.amp_activity_id = vpp.amp_activity_id;
        </lang>
		</script>
	</apply>
</tns:patch>
